{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useForm,Controller}from'react-hook-form';import{yupResolver}from'@hookform/resolvers/yup';import*as yup from'yup';import apiClient from'../../utils/api';import{Box,Button,TextField,FormControl,InputLabel,Select,MenuItem,Grid,Paper,Typography,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Dialog,DialogTitle,DialogContent,DialogActions,Chip,IconButton,Autocomplete,FormHelperText,Alert,CircularProgress,Tooltip}from'@mui/material';import{Add as AddIcon,Edit as EditIcon,Delete as DeleteIcon,WarningAmber as WarningIcon,CheckCircle as CheckCircleIcon,Error as ErrorIcon}from'@mui/icons-material';// Form validation schema\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const schema=yup.object().shape({studentCode:yup.string().required('Student code is required'),eventType:yup.string().required('Event type is required'),description:yup.string().required('Description is required'),severity:yup.string().required('Severity is required'),actionTaken:yup.string().required('Action taken is required'),medicationGiven:yup.string(),medicationQuantity:yup.number().min(1,'Số lượng phải lớn hơn 0'),symptoms:yup.array().of(yup.string()).nullable(),status:yup.string().required('Status is required')});function MedicalEventTab(){// State variables\nconst[medicalEvents,setMedicalEvents]=useState([]);const[openDialog,setOpenDialog]=useState(false);const[editMode,setEditMode]=useState(false);const[editId,setEditId]=useState(null);const[students,setStudents]=useState([]);const[medications,setMedications]=useState([]);// Danh sách thuốc từ kho\nconst[loading,setLoading]=useState(false);const[errorMessage,setErrorMessage]=useState('');const[successMessage,setSuccessMessage]=useState('');const[symptomOptions,setSymptomOptions]=useState(['Fever','Headache','Nausea','Vomiting','Dizziness','Rash','Pain','Bleeding','Swelling','Coughing','Fatigue','Shortness of breath']);// Initialize form\nconst{control,handleSubmit,reset,setValue,formState:{errors},watch}=useForm({resolver:yupResolver(schema),defaultValues:{studentCode:'',eventType:'',description:'',severity:'',actionTaken:'',medicationGiven:'',medicationQuantity:1,// Số lượng thuốc mặc định là 1\nsymptoms:[],status:'ACTIVE'}});// Theo dõi các giá trị của form để kiểm tra số lượng thuốc\nconst selectedMedication=watch('medicationGiven');const medicationQuantity=watch('medicationQuantity');// Fetch all medical events when component mounts\nuseEffect(()=>{fetchMedicalEvents();fetchStudents();fetchMedications();},[]);// Fetch medical events from API\nconst fetchMedicalEvents=async()=>{setLoading(true);try{const response=await apiClient.get('/medical-events');setMedicalEvents(response.data);setErrorMessage('');}catch(error){var _error$response,_error$response$data;setErrorMessage('Failed to load medical events. '+(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||error.message));}finally{setLoading(false);}};// Fetch students for dropdown\nconst fetchStudents=async()=>{try{const response=await apiClient.get('/students');setStudents(response.data);}catch(error){var _error$response2,_error$response2$data;setErrorMessage('Failed to load students. '+(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||error.message));}};// Fetch medications from inventory\nconst fetchMedications=async()=>{try{const response=await apiClient.get('/medications/inventory');setMedications(response.data);}catch(error){var _error$response3,_error$response3$data;setErrorMessage('Unable to load medication list. '+(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||error.message));}};// Handle form submission\nconst onSubmit=async data=>{setLoading(true);setErrorMessage('');setSuccessMessage('');try{// Format the data\nconst formattedData={...data,eventDatetime:new Date().toISOString()};if(editMode){const response=await apiClient.put(`/medical-events/${editId}`,formattedData);setSuccessMessage('Medical event updated successfully');setMedicalEvents(medicalEvents.map(event=>event.id===editId?response.data:event));}else{const response=await apiClient.post('/medical-events',formattedData);setSuccessMessage('Medical event added successfully');setMedicalEvents([...medicalEvents,response.data]);}handleCloseDialog();fetchMedicalEvents();// Refresh the list\n}catch(error){var _error$response4,_error$response4$data;setErrorMessage('Failed to save medical event. '+(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||error.message));}finally{setLoading(false);}};// Open dialog for adding a new medical event\nconst handleOpenAddDialog=()=>{setEditMode(false);setEditId(null);reset({studentCode:'',eventType:'',description:'',severity:'',actionTaken:'',medicationGiven:'',medicationQuantity:1,symptoms:[],status:'ACTIVE'});setOpenDialog(true);};// Open dialog for editing an existing medical event\nconst handleOpenEditDialog=event=>{setEditMode(true);setEditId(event.id);// Pre-populate the form with existing data\nreset({studentCode:event.studentCode||'',eventType:event.eventType||'',description:event.description||'',severity:event.severity||'',actionTaken:event.actionTaken||'',medicationGiven:event.medicationGiven||'',medicationQuantity:event.medicationQuantity||1,symptoms:event.symptoms||[],status:event.status||'ACTIVE'});setOpenDialog(true);};// Close the dialog\nconst handleCloseDialog=()=>{setOpenDialog(false);setErrorMessage('');setSuccessMessage('');};// Delete a medical event\nconst handleDelete=async id=>{if(window.confirm('Are you sure you want to delete this medical event?')){setLoading(true);try{await apiClient.delete(`/medical-events/${id}`);setSuccessMessage('Medical event deleted successfully');setMedicalEvents(medicalEvents.filter(event=>event.id!==id));}catch(error){var _error$response5,_error$response5$data;setErrorMessage('Failed to delete medical event. '+(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||error.message));}finally{setLoading(false);}}};// Get severity color based on level\nconst getSeverityColor=severity=>{switch(severity===null||severity===void 0?void 0:severity.toUpperCase()){case'LOW':return'info';case'MEDIUM':return'warning';case'HIGH':return'error';case'CRITICAL':return'error';default:return'default';}};// Get status color based on value\nconst getStatusColor=status=>{switch(status===null||status===void 0?void 0:status.toUpperCase()){case'ACTIVE':return'error';case'RESOLVED':return'success';case'FOLLOW_UP':return'warning';case'REFERRED':return'info';default:return'default';}};// Get status icon based on value\nconst getStatusIcon=status=>{switch(status===null||status===void 0?void 0:status.toUpperCase()){case'ACTIVE':return/*#__PURE__*/_jsx(WarningIcon,{});case'RESOLVED':return/*#__PURE__*/_jsx(CheckCircleIcon,{});case'FOLLOW_UP':return/*#__PURE__*/_jsx(ErrorIcon,{});case'REFERRED':return/*#__PURE__*/_jsx(ErrorIcon,{});default:return null;}};return/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h2\",children:\"Medical Event Management\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:handleOpenAddDialog,children:\"Add Medical Event\"})]}),errorMessage&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:2},children:errorMessage}),successMessage&&/*#__PURE__*/_jsx(Alert,{severity:\"success\",sx:{mb:2},children:successMessage}),loading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',my:4},children:/*#__PURE__*/_jsx(CircularProgress,{})}):/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"ID\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Student\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Event Type\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Severity\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Date/Time\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Status\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Description\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:medicalEvents.length>0?medicalEvents.map(event=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:event.id}),/*#__PURE__*/_jsx(TableCell,{children:event.studentCode}),/*#__PURE__*/_jsx(TableCell,{children:event.eventType}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:event.severity,color:getSeverityColor(event.severity),size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:event.eventDatetime?new Date(event.eventDatetime).toLocaleString():'N/A'}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{icon:getStatusIcon(event.status),label:event.status,color:getStatusColor(event.status),size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Tooltip,{title:event.description,children:/*#__PURE__*/_jsx(Typography,{noWrap:true,sx:{maxWidth:'150px'},children:event.description})})}),/*#__PURE__*/_jsxs(TableCell,{children:[/*#__PURE__*/_jsx(IconButton,{size:\"small\",color:\"primary\",onClick:()=>handleOpenEditDialog(event),children:/*#__PURE__*/_jsx(EditIcon,{})}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",color:\"error\",onClick:()=>handleDelete(event.id),children:/*#__PURE__*/_jsx(DeleteIcon,{})})]})]},event.id)):/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{colSpan:8,align:\"center\",children:\"No medical events found\"})})})]})}),/*#__PURE__*/_jsxs(Dialog,{open:openDialog,onClose:handleCloseDialog,maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:editMode?'Edit Medical Event':'Add New Medical Event'}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(Box,{component:\"form\",noValidate:true,sx:{mt:2},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Controller,{name:\"studentCode\",control:control,render:_ref=>{let{field}=_ref;return/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,error:!!errors.studentCode,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Student\"}),/*#__PURE__*/_jsx(Select,{...field,label:\"Student\",children:students.map(student=>/*#__PURE__*/_jsxs(MenuItem,{value:student.studentCode,children:[student.studentCode,\" - \",student.firstName,\" \",student.lastName]},student.studentCode))}),errors.studentCode&&/*#__PURE__*/_jsx(FormHelperText,{children:errors.studentCode.message})]});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Controller,{name:\"eventType\",control:control,render:_ref2=>{let{field}=_ref2;return/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,error:!!errors.eventType,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Event Type\"}),/*#__PURE__*/_jsxs(Select,{...field,label:\"Event Type\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"INJURY\",children:\"Injury\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"ILLNESS\",children:\"Illness\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"ACCIDENT\",children:\"Accident\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"EMERGENCY\",children:\"Emergency\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"MEDICATION\",children:\"Medication Related\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"OUTBREAK\",children:\"Disease Outbreak\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"FALL\",children:\"Fall\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"FEVER\",children:\"Fever\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"ALLERGIC_REACTION\",children:\"Allergic Reaction\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"OTHER\",children:\"Other\"})]}),errors.eventType&&/*#__PURE__*/_jsx(FormHelperText,{children:errors.eventType.message})]});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Controller,{name:\"severity\",control:control,render:_ref3=>{let{field}=_ref3;return/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,error:!!errors.severity,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Severity\"}),/*#__PURE__*/_jsxs(Select,{...field,label:\"Severity\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"LOW\",children:\"Low\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"MEDIUM\",children:\"Medium\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"HIGH\",children:\"High\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"CRITICAL\",children:\"Critical\"})]}),errors.severity&&/*#__PURE__*/_jsx(FormHelperText,{children:errors.severity.message})]});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Controller,{name:\"status\",control:control,render:_ref4=>{let{field}=_ref4;return/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,error:!!errors.status,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Status\"}),/*#__PURE__*/_jsxs(Select,{...field,label:\"Status\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"ACTIVE\",children:\"Active\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"RESOLVED\",children:\"Resolved\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"FOLLOW_UP\",children:\"Follow-up\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"REFERRED\",children:\"Referred\"})]}),errors.status&&/*#__PURE__*/_jsx(FormHelperText,{children:errors.status.message})]});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Controller,{name:\"description\",control:control,render:_ref5=>{var _errors$description;let{field}=_ref5;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Description\",multiline:true,rows:2,fullWidth:true,error:!!errors.description,helperText:(_errors$description=errors.description)===null||_errors$description===void 0?void 0:_errors$description.message});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Controller,{name:\"symptoms\",control:control,render:_ref6=>{let{field}=_ref6;return/*#__PURE__*/_jsx(Autocomplete,{...field,multiple:true,options:symptomOptions,freeSolo:true,onChange:(_,value)=>field.onChange(value),renderTags:(value,getTagProps)=>value.map((option,index)=>/*#__PURE__*/_jsx(Chip,{variant:\"outlined\",label:option,...getTagProps({index})})),renderInput:params=>{var _errors$symptoms;return/*#__PURE__*/_jsx(TextField,{...params,label:\"Symptoms\",error:!!errors.symptoms,helperText:(_errors$symptoms=errors.symptoms)===null||_errors$symptoms===void 0?void 0:_errors$symptoms.message});}});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Controller,{name:\"actionTaken\",control:control,render:_ref7=>{var _errors$actionTaken;let{field}=_ref7;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Action Taken\",multiline:true,rows:2,fullWidth:true,error:!!errors.actionTaken,helperText:(_errors$actionTaken=errors.actionTaken)===null||_errors$actionTaken===void 0?void 0:_errors$actionTaken.message});}})}),\"              \",/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[\"                \",/*#__PURE__*/_jsx(Controller,{name:\"medicationGiven\",control:control,render:_ref8=>{let{field}=_ref8;return/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,error:!!errors.medicationGiven,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Thu\\u1ED1c \\u0111\\xE3 c\\u1EA5p\"}),/*#__PURE__*/_jsxs(Select,{...field,label:\"Thu\\u1ED1c \\u0111\\xE3 c\\u1EA5p\",children:[\"                        \",medications.map(med=>/*#__PURE__*/_jsxs(MenuItem,{value:med.medicationName,disabled:med.quantity<=0,children:[med.medicationName,\" (\",med.dosage,\", \",med.form,\") - S\\u1ED1 l\\u01B0\\u1EE3ng: \",med.quantity,\" \",med.quantity<=5?'⚠️':'']},med.medicationId))]}),errors.medicationGiven&&/*#__PURE__*/_jsx(FormHelperText,{children:errors.medicationGiven.message})]});}})]}),\"              \",/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(Controller,{name:\"medicationQuantity\",control:control,render:_ref9=>{var _errors$medicationQua;let{field}=_ref9;// Tìm thuốc được chọn để xem số lượng tối đa có thể sử dụng\nconst selectedMed=medications.find(med=>med.medicationName===selectedMedication);const maxQuantity=selectedMed?selectedMed.quantity:1;return/*#__PURE__*/_jsx(TextField,{...field,label:\"S\\u1ED1 l\\u01B0\\u1EE3ng thu\\u1ED1c\",type:\"number\",fullWidth:true,InputProps:{inputProps:{min:1,max:maxQuantity}},error:!!errors.medicationQuantity||selectedMed&&field.value>maxQuantity,helperText:((_errors$medicationQua=errors.medicationQuantity)===null||_errors$medicationQua===void 0?void 0:_errors$medicationQua.message)||(selectedMed&&field.value>maxQuantity?`Vượt quá số lượng trong kho (${maxQuantity})`:''),onChange:e=>{const value=parseInt(e.target.value,10);if(!isNaN(value)){if(selectedMed&&value>maxQuantity){field.onChange(maxQuantity);}else if(value<1){field.onChange(1);}else{field.onChange(value);}}}});}})})]})})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseDialog,color:\"primary\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSubmit(onSubmit),color:\"primary\",variant:\"contained\",disabled:loading,children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):editMode?'Update':'Save'})]})]})]});}export default MedicalEventTab;","map":{"version":3,"names":["React","useState","useEffect","useForm","Controller","yupResolver","yup","apiClient","Box","Button","TextField","FormControl","InputLabel","Select","MenuItem","Grid","Paper","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Dialog","DialogTitle","DialogContent","DialogActions","Chip","IconButton","Autocomplete","FormHelperText","Alert","CircularProgress","Tooltip","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","WarningAmber","WarningIcon","CheckCircle","CheckCircleIcon","Error","ErrorIcon","jsx","_jsx","jsxs","_jsxs","schema","object","shape","studentCode","string","required","eventType","description","severity","actionTaken","medicationGiven","medicationQuantity","number","min","symptoms","array","of","nullable","status","MedicalEventTab","medicalEvents","setMedicalEvents","openDialog","setOpenDialog","editMode","setEditMode","editId","setEditId","students","setStudents","medications","setMedications","loading","setLoading","errorMessage","setErrorMessage","successMessage","setSuccessMessage","symptomOptions","setSymptomOptions","control","handleSubmit","reset","setValue","formState","errors","watch","resolver","defaultValues","selectedMedication","fetchMedicalEvents","fetchStudents","fetchMedications","response","get","data","error","_error$response","_error$response$data","message","_error$response2","_error$response2$data","_error$response3","_error$response3$data","onSubmit","formattedData","eventDatetime","Date","toISOString","put","map","event","id","post","handleCloseDialog","_error$response4","_error$response4$data","handleOpenAddDialog","handleOpenEditDialog","handleDelete","window","confirm","delete","filter","_error$response5","_error$response5$data","getSeverityColor","toUpperCase","getStatusColor","getStatusIcon","sx","p","children","display","justifyContent","alignItems","mb","variant","component","color","startIcon","onClick","my","length","label","size","toLocaleString","icon","title","noWrap","maxWidth","colSpan","align","open","onClose","fullWidth","noValidate","mt","container","spacing","item","xs","md","name","render","_ref","field","student","value","firstName","lastName","_ref2","_ref3","_ref4","_ref5","_errors$description","multiline","rows","helperText","_ref6","multiple","options","freeSolo","onChange","_","renderTags","getTagProps","option","index","renderInput","params","_errors$symptoms","_ref7","_errors$actionTaken","_ref8","med","medicationName","disabled","quantity","dosage","form","medicationId","_ref9","_errors$medicationQua","selectedMed","find","maxQuantity","type","InputProps","inputProps","max","e","parseInt","target","isNaN"],"sources":["C:/Users/trand/OneDrive/Documents/GitHub/SchoolMedicalManagement/SchoolMedicalManagement/frontend/src/components/medical/MedicalEventTab.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport apiClient from '../../utils/api';\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Chip,\r\n  IconButton,\r\n  Autocomplete,\r\n  FormHelperText,\r\n  Alert,\r\n  CircularProgress,\r\n  Tooltip\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  WarningAmber as WarningIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  Error as ErrorIcon\r\n} from '@mui/icons-material';\r\n\r\n// Form validation schema\r\nconst schema = yup.object().shape({\r\n  studentCode: yup.string().required('Student code is required'),\r\n  eventType: yup.string().required('Event type is required'),\r\n  description: yup.string().required('Description is required'),\r\n  severity: yup.string().required('Severity is required'),\r\n  actionTaken: yup.string().required('Action taken is required'),\r\n  medicationGiven: yup.string(),\r\n  medicationQuantity: yup.number().min(1, 'Số lượng phải lớn hơn 0'),\r\n  symptoms: yup.array().of(yup.string()).nullable(),\r\n  status: yup.string().required('Status is required')\r\n});\r\n\r\nfunction MedicalEventTab() {  // State variables\r\n  const [medicalEvents, setMedicalEvents] = useState([]);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editId, setEditId] = useState(null);\r\n  const [students, setStudents] = useState([]);\r\n  const [medications, setMedications] = useState([]); // Danh sách thuốc từ kho\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [symptomOptions, setSymptomOptions] = useState([\r\n    'Fever', 'Headache', 'Nausea', 'Vomiting', 'Dizziness', 'Rash', \r\n    'Pain', 'Bleeding', 'Swelling', 'Coughing', 'Fatigue', 'Shortness of breath'\r\n  ]);  // Initialize form\r\n  const { control, handleSubmit, reset, setValue, formState: { errors }, watch } = useForm({\r\n    resolver: yupResolver(schema),\r\n    defaultValues: {\r\n      studentCode: '',\r\n      eventType: '',\r\n      description: '',\r\n      severity: '',\r\n      actionTaken: '',\r\n      medicationGiven: '',\r\n      medicationQuantity: 1, // Số lượng thuốc mặc định là 1\r\n      symptoms: [],\r\n      status: 'ACTIVE'\r\n    }\r\n  });\r\n  \r\n  // Theo dõi các giá trị của form để kiểm tra số lượng thuốc\r\n  const selectedMedication = watch('medicationGiven');\r\n  const medicationQuantity = watch('medicationQuantity');\r\n  // Fetch all medical events when component mounts\r\n  useEffect(() => {\r\n    fetchMedicalEvents();\r\n    fetchStudents();\r\n    fetchMedications();\r\n  }, []);\r\n\r\n  // Fetch medical events from API\r\n  const fetchMedicalEvents = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await apiClient.get('/medical-events');\r\n      setMedicalEvents(response.data);\r\n      setErrorMessage('');\r\n    } catch (error) {\r\n      \r\n      setErrorMessage('Failed to load medical events. ' + (error.response?.data?.message || error.message));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  // Fetch students for dropdown\r\n  const fetchStudents = async () => {\r\n    try {\r\n      const response = await apiClient.get('/students');\r\n      setStudents(response.data);\r\n    } catch (error) {\r\n      \r\n      setErrorMessage('Failed to load students. ' + (error.response?.data?.message || error.message));\r\n    }\r\n  };\r\n    // Fetch medications from inventory\r\n  const fetchMedications = async () => {\r\n    try {\r\n      const response = await apiClient.get('/medications/inventory');\r\n      setMedications(response.data);\r\n    } catch (error) {\r\n      \r\n      setErrorMessage('Unable to load medication list. ' + (error.response?.data?.message || error.message));\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const onSubmit = async (data) => {\r\n    setLoading(true);\r\n    setErrorMessage('');\r\n    setSuccessMessage('');\r\n    \r\n    try {\r\n      // Format the data\r\n      const formattedData = {\r\n        ...data,\r\n        eventDatetime: new Date().toISOString()\r\n      };\r\n      \r\n      if (editMode) {\r\n        const response = await apiClient.put(`/medical-events/${editId}`, formattedData);\r\n        setSuccessMessage('Medical event updated successfully');\r\n        setMedicalEvents(medicalEvents.map(event => event.id === editId ? response.data : event));\r\n      } else {\r\n        const response = await apiClient.post('/medical-events', formattedData);\r\n        setSuccessMessage('Medical event added successfully');\r\n        setMedicalEvents([...medicalEvents, response.data]);\r\n      }\r\n      \r\n      handleCloseDialog();\r\n      fetchMedicalEvents(); // Refresh the list\r\n    } catch (error) {\r\n      \r\n      setErrorMessage('Failed to save medical event. ' + (error.response?.data?.message || error.message));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  // Open dialog for adding a new medical event\r\n  const handleOpenAddDialog = () => {\r\n    setEditMode(false);\r\n    setEditId(null);\r\n    reset({\r\n      studentCode: '',\r\n      eventType: '',\r\n      description: '',\r\n      severity: '',\r\n      actionTaken: '',\r\n      medicationGiven: '',\r\n      medicationQuantity: 1,\r\n      symptoms: [],\r\n      status: 'ACTIVE'\r\n    });\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  // Open dialog for editing an existing medical event\r\n  const handleOpenEditDialog = (event) => {\r\n    setEditMode(true);\r\n    setEditId(event.id);    // Pre-populate the form with existing data\r\n    reset({\r\n      studentCode: event.studentCode || '',\r\n      eventType: event.eventType || '',\r\n      description: event.description || '',\r\n      severity: event.severity || '',\r\n      actionTaken: event.actionTaken || '',\r\n      medicationGiven: event.medicationGiven || '',\r\n      medicationQuantity: event.medicationQuantity || 1,\r\n      symptoms: event.symptoms || [],\r\n      status: event.status || 'ACTIVE'\r\n    });\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  // Close the dialog\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n    setErrorMessage('');\r\n    setSuccessMessage('');\r\n  };\r\n\r\n  // Delete a medical event\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this medical event?')) {\r\n      setLoading(true);\r\n      try {\r\n        await apiClient.delete(`/medical-events/${id}`);\r\n        setSuccessMessage('Medical event deleted successfully');\r\n        setMedicalEvents(medicalEvents.filter(event => event.id !== id));\r\n      } catch (error) {\r\n        \r\n        setErrorMessage('Failed to delete medical event. ' + (error.response?.data?.message || error.message));\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Get severity color based on level\r\n  const getSeverityColor = (severity) => {\r\n    switch (severity?.toUpperCase()) {\r\n      case 'LOW':\r\n        return 'info';\r\n      case 'MEDIUM':\r\n        return 'warning';\r\n      case 'HIGH':\r\n        return 'error';\r\n      case 'CRITICAL':\r\n        return 'error';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  // Get status color based on value\r\n  const getStatusColor = (status) => {\r\n    switch (status?.toUpperCase()) {\r\n      case 'ACTIVE':\r\n        return 'error';\r\n      case 'RESOLVED':\r\n        return 'success';\r\n      case 'FOLLOW_UP':\r\n        return 'warning';\r\n      case 'REFERRED':\r\n        return 'info';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  // Get status icon based on value\r\n  const getStatusIcon = (status) => {\r\n    switch (status?.toUpperCase()) {\r\n      case 'ACTIVE':\r\n        return <WarningIcon />;\r\n      case 'RESOLVED':\r\n        return <CheckCircleIcon />;\r\n      case 'FOLLOW_UP':\r\n        return <ErrorIcon />;\r\n      case 'REFERRED':\r\n        return <ErrorIcon />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 2 }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n        <Typography variant=\"h6\" component=\"h2\">Medical Event Management</Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleOpenAddDialog}\r\n        >\r\n          Add Medical Event\r\n        </Button>\r\n      </Box>\r\n\r\n      {errorMessage && (\r\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n          {errorMessage}\r\n        </Alert>\r\n      )}\r\n\r\n      {successMessage && (\r\n        <Alert severity=\"success\" sx={{ mb: 2 }}>\r\n          {successMessage}\r\n        </Alert>\r\n      )}\r\n\r\n      {loading ? (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      ) : (\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>ID</TableCell>\r\n                <TableCell>Student</TableCell>\r\n                <TableCell>Event Type</TableCell>\r\n                <TableCell>Severity</TableCell>\r\n                <TableCell>Date/Time</TableCell>\r\n                <TableCell>Status</TableCell>\r\n                <TableCell>Description</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {medicalEvents.length > 0 ? (\r\n                medicalEvents.map((event) => (\r\n                  <TableRow key={event.id}>\r\n                    <TableCell>{event.id}</TableCell>\r\n                    <TableCell>{event.studentCode}</TableCell>\r\n                    <TableCell>{event.eventType}</TableCell>\r\n                    <TableCell>\r\n                      <Chip \r\n                        label={event.severity} \r\n                        color={getSeverityColor(event.severity)} \r\n                        size=\"small\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {event.eventDatetime ? new Date(event.eventDatetime).toLocaleString() : 'N/A'}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Chip \r\n                        icon={getStatusIcon(event.status)}\r\n                        label={event.status} \r\n                        color={getStatusColor(event.status)}\r\n                        size=\"small\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Tooltip title={event.description}>\r\n                        <Typography noWrap sx={{ maxWidth: '150px' }}>\r\n                          {event.description}\r\n                        </Typography>\r\n                      </Tooltip>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        onClick={() => handleOpenEditDialog(event)}\r\n                      >\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        color=\"error\"\r\n                        onClick={() => handleDelete(event.id)}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              ) : (\r\n                <TableRow>\r\n                  <TableCell colSpan={8} align=\"center\">\r\n                    No medical events found\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      )}\r\n\r\n      {/* Medical Event Dialog */}\r\n      <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>{editMode ? 'Edit Medical Event' : 'Add New Medical Event'}</DialogTitle>\r\n        <DialogContent>\r\n          <Box component=\"form\" noValidate sx={{ mt: 2 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <Controller\r\n                  name=\"studentCode\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <FormControl fullWidth error={!!errors.studentCode}>\r\n                      <InputLabel>Student</InputLabel>\r\n                      <Select\r\n                        {...field}\r\n                        label=\"Student\"\r\n                      >\r\n                        {students.map((student) => (\r\n                          <MenuItem key={student.studentCode} value={student.studentCode}>\r\n                            {student.studentCode} - {student.firstName} {student.lastName}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                      {errors.studentCode && (\r\n                        <FormHelperText>{errors.studentCode.message}</FormHelperText>\r\n                      )}\r\n                    </FormControl>\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <Controller\r\n                  name=\"eventType\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <FormControl fullWidth error={!!errors.eventType}>\r\n                      <InputLabel>Event Type</InputLabel>\r\n                      <Select\r\n                        {...field}\r\n                        label=\"Event Type\"\r\n                      >\r\n                        <MenuItem value=\"INJURY\">Injury</MenuItem>\r\n                        <MenuItem value=\"ILLNESS\">Illness</MenuItem>\r\n                        <MenuItem value=\"ACCIDENT\">Accident</MenuItem>\r\n                        <MenuItem value=\"EMERGENCY\">Emergency</MenuItem>\r\n                        <MenuItem value=\"MEDICATION\">Medication Related</MenuItem>\r\n                        <MenuItem value=\"OUTBREAK\">Disease Outbreak</MenuItem>\r\n                        <MenuItem value=\"FALL\">Fall</MenuItem>\r\n                        <MenuItem value=\"FEVER\">Fever</MenuItem>\r\n                        <MenuItem value=\"ALLERGIC_REACTION\">Allergic Reaction</MenuItem>\r\n                        <MenuItem value=\"OTHER\">Other</MenuItem>\r\n                      </Select>\r\n                      {errors.eventType && (\r\n                        <FormHelperText>{errors.eventType.message}</FormHelperText>\r\n                      )}\r\n                    </FormControl>\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <Controller\r\n                  name=\"severity\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <FormControl fullWidth error={!!errors.severity}>\r\n                      <InputLabel>Severity</InputLabel>\r\n                      <Select\r\n                        {...field}\r\n                        label=\"Severity\"\r\n                      >\r\n                        <MenuItem value=\"LOW\">Low</MenuItem>\r\n                        <MenuItem value=\"MEDIUM\">Medium</MenuItem>\r\n                        <MenuItem value=\"HIGH\">High</MenuItem>\r\n                        <MenuItem value=\"CRITICAL\">Critical</MenuItem>\r\n                      </Select>\r\n                      {errors.severity && (\r\n                        <FormHelperText>{errors.severity.message}</FormHelperText>\r\n                      )}\r\n                    </FormControl>\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <Controller\r\n                  name=\"status\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <FormControl fullWidth error={!!errors.status}>\r\n                      <InputLabel>Status</InputLabel>\r\n                      <Select\r\n                        {...field}\r\n                        label=\"Status\"\r\n                      >\r\n                        <MenuItem value=\"ACTIVE\">Active</MenuItem>\r\n                        <MenuItem value=\"RESOLVED\">Resolved</MenuItem>\r\n                        <MenuItem value=\"FOLLOW_UP\">Follow-up</MenuItem>\r\n                        <MenuItem value=\"REFERRED\">Referred</MenuItem>\r\n                      </Select>\r\n                      {errors.status && (\r\n                        <FormHelperText>{errors.status.message}</FormHelperText>\r\n                      )}\r\n                    </FormControl>\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  name=\"description\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <TextField\r\n                      {...field}\r\n                      label=\"Description\"\r\n                      multiline\r\n                      rows={2}\r\n                      fullWidth\r\n                      error={!!errors.description}\r\n                      helperText={errors.description?.message}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  name=\"symptoms\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Autocomplete\r\n                      {...field}\r\n                      multiple\r\n                      options={symptomOptions}\r\n                      freeSolo\r\n                      onChange={(_, value) => field.onChange(value)}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\r\n                        ))\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"Symptoms\"\r\n                          error={!!errors.symptoms}\r\n                          helperText={errors.symptoms?.message}\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  name=\"actionTaken\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <TextField\r\n                      {...field}\r\n                      label=\"Action Taken\"\r\n                      multiline\r\n                      rows={2}\r\n                      fullWidth\r\n                      error={!!errors.actionTaken}\r\n                      helperText={errors.actionTaken?.message}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>              <Grid item xs={12} md={6}>                <Controller\r\n                  name=\"medicationGiven\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <FormControl fullWidth error={!!errors.medicationGiven}>\r\n                      <InputLabel>Thuốc đã cấp</InputLabel>\r\n                      <Select\r\n                        {...field}\r\n                        label=\"Thuốc đã cấp\"\r\n                      >                        {medications.map((med) => (\r\n                          <MenuItem key={med.medicationId} value={med.medicationName} disabled={med.quantity <= 0}>\r\n                            {med.medicationName} ({med.dosage}, {med.form}) - Số lượng: {med.quantity} {med.quantity <= 5 ? '⚠️' : ''}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                      {errors.medicationGiven && (\r\n                        <FormHelperText>{errors.medicationGiven.message}</FormHelperText>\r\n                      )}\r\n                    </FormControl>\r\n                  )}\r\n                />\r\n              </Grid>              <Grid item xs={12} md={4}>\r\n                <Controller\r\n                  name=\"medicationQuantity\"\r\n                  control={control}\r\n                  render={({ field }) => {\r\n                    // Tìm thuốc được chọn để xem số lượng tối đa có thể sử dụng\r\n                    const selectedMed = medications.find(med => med.medicationName === selectedMedication);\r\n                    const maxQuantity = selectedMed ? selectedMed.quantity : 1;\r\n                    \r\n                    return (\r\n                      <TextField\r\n                        {...field}\r\n                        label=\"Số lượng thuốc\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        InputProps={{ \r\n                          inputProps: { \r\n                            min: 1, \r\n                            max: maxQuantity \r\n                          } \r\n                        }}\r\n                        error={!!errors.medicationQuantity || (selectedMed && field.value > maxQuantity)}\r\n                        helperText={\r\n                          errors.medicationQuantity?.message || \r\n                          (selectedMed && field.value > maxQuantity ? `Vượt quá số lượng trong kho (${maxQuantity})` : '')\r\n                        }\r\n                        onChange={(e) => {\r\n                          const value = parseInt(e.target.value, 10);\r\n                          if (!isNaN(value)) {\r\n                            if (selectedMed && value > maxQuantity) {\r\n                              field.onChange(maxQuantity);\r\n                            } else if (value < 1) {\r\n                              field.onChange(1);\r\n                            } else {\r\n                              field.onChange(value);\r\n                            }\r\n                          }\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                />\r\n              </Grid>\r\n                {/* Các trường ReferredTo, ParentNotified, FollowUpRequired đã được xóa bỏ */}\r\n            </Grid>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={handleSubmit(onSubmit)}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? <CircularProgress size={24} /> : editMode ? 'Update' : 'Save'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MedicalEventTab;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}