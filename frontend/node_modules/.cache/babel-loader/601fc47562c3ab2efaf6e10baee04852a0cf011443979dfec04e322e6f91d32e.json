{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{useForm,Controller}from'react-hook-form';import{useSearchParams}from'react-router-dom';// Added for URL query parameters\nimport{yupResolver}from'@hookform/resolvers/yup';import*as yup from'yup';import apiClient from'../../utils/api';// Import the api client\nimport MedicalEventTab from'../../components/medical/MedicalEventTab';// Import MedicalEventTab component\nimport{useAlert}from'../../hooks/useAlert';// Import useAlert hook\nimport{Card,CardContent,CardHeader,TextField,Button,Typography,Grid,Chip,Select,MenuItem,FormControl,InputLabel,Box,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,IconButton,Dialog,DialogTitle,DialogContent,DialogActions,Alert,Tab,Tabs,Badge,Tooltip,Autocomplete,CircularProgress,// Added\nDialogContentText// Added\n}from'@mui/material';import{Add as AddIcon,Edit as EditIcon,Delete as DeleteIcon,Search as SearchIcon,Medication as MedicationIcon,Warning as WarningIcon,Schedule as ScheduleIcon,Inventory as InventoryIcon,LocalPharmacy as PharmacyIcon,Assignment as AssignmentIcon,CheckCircleOutline as ApproveIcon,CancelOutlined as RejectIcon,Visibility as ViewIcon,MedicalServices as AdministerIcon,MedicalInformation as MedicalEventIcon// Added for Medical Event tab\n}from'@mui/icons-material';import PageHeader from'../../components/PageHeader';// import { LocalizationProvider, DateTimePicker } from '@mui/x-date-pickers'; // Consider if full DateTimePicker is needed\n// import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns'; // Adapter for date picker\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const medicationSchema=yup.object().shape({medicationName:yup.string().required('Medication name is required'),// Removed genericName as per requirements\ndosage:yup.string().required('Dosage is required'),form:yup.string().required('Medication form is required'),manufacturer:yup.string(),batchNumber:yup.string(),expiryDate:yup.date().required('Expiry date is required').min(new Date(),'Expiry date must be in the future'),quantity:yup.number().required('Quantity is required').min(1,'Quantity must be at least 1'),unitCost:yup.number().min(0,'Unit cost must be positive'),storageLocation:yup.string(),prescriptionRequired:yup.boolean(),contraindications:yup.array().of(yup.string()),sideEffects:yup.array().of(yup.string()),instructions:yup.string()});const medicationAdministrationSchema=yup.object().shape({medicationName:yup.string().required('Medication name is required'),// ... existing medicationAdministrationSchema\ndosage:yup.string().required('Dosage is required'),administrationTime:yup.date().required('Administration time is required'),notes:yup.string(),studentCode:yup.string().required('Student is required')});// Schema for rejecting a medication request\nconst rejectionSchema=yup.object().shape({rejectionReason:yup.string().nullable()// Make it optional so the form can be submitted without a reason\n});// Schema for administering medication for a request\nconst recordAdministrationSchema=yup.object().shape({administrationTime:yup.date().required('Administration time is required').max(new Date(),'Administration time cannot be in the future (adjust if pre-logging needed)'),notes:yup.string().nullable()});function MedicationManagement(){const{successAlert,errorAlert,deleteConfirm}=useAlert();// Initialize useAlert hook\nconst[searchParams,setSearchParams]=useSearchParams();const initialTab=searchParams.get('tab')?parseInt(searchParams.get('tab'),10):0;const[activeTab,setActiveTab]=useState(initialTab);// Read initial tab from URL if available\nconst[medicationDialogOpen,setMedicationDialogOpen]=useState(false);const[administrationDialogOpen,setAdministrationDialogOpen]=useState(false);// For direct administration log\nconst[selectedMedication,setSelectedMedication]=useState(null);// const [selectedAdministration, setSelectedAdministration] = useState(null); // For direct administration log\nconst[medications,setMedications]=useState([]);// Inventory\nconst[administrations,setAdministrations]=useState([]);// Direct administration log\nconst[students,setStudents]=useState([]);const[searchTerm,setSearchTerm]=useState('');// const [filterStatus, setFilterStatus] = useState('all'); // May not be needed for requests if using tabs\nconst[lowStockAlerts,setLowStockAlerts]=useState([]);// State for Medication Requests\nconst[pendingRequests,setPendingRequests]=useState([]);const[isLoadingPendingRequests,setIsLoadingPendingRequests]=useState(false);const[pendingRequestsError,setPendingRequestsError]=useState(null);const[selectedRequest,setSelectedRequest]=useState(null);// For actions on a specific request\nconst[viewDetailsDialogOpen,setViewDetailsDialogOpen]=useState(false);const[rejectDialogOpen,setRejectDialogOpen]=useState(false);const[administerDialogOpen,setAdministerDialogOpen]=useState(false);const[approveConfirmationDialogOpen,setApproveConfirmationDialogOpen]=useState(false);const medicationForm=useForm({resolver:yupResolver(medicationSchema),defaultValues:{medicationName:'',// Removed genericName as per requirements\ndosage:'',form:'',manufacturer:'',batchNumber:'',expiryDate:null,quantity:0,unitCost:0,storageLocation:'',contraindications:[],sideEffects:[],prescriptionRequired:false,instructions:''}});const administrationForm=useForm({// For direct administration log\nresolver:yupResolver(medicationAdministrationSchema),// ... existing administrationForm setup\ndefaultValues:{administrationTime:new Date(),// Changed from array\nconsentGiven:false// This field might not be relevant here\n}});const rejectForm=useForm({resolver:yupResolver(rejectionSchema),defaultValues:{rejectionReason:''},mode:'onSubmit'// Only validate on submit to allow empty values\n});const recordAdministrationForm=useForm({resolver:yupResolver(recordAdministrationSchema),defaultValues:{administrationTime:new Date(),notes:''}});const checkLowStock=useCallback(()=>{const alerts=medications.filter(med=>med.quantity<20);// Example threshold\nsetLowStockAlerts(alerts);},[medications]);const fetchPendingMedicationRequests=useCallback(async()=>{setIsLoadingPendingRequests(true);setPendingRequestsError(null);try{// Use apiClient as authenticated axios instance\nconst authAxios=apiClient;// Add debugging info to help trace the request\nauthAxios.defaults.headers.common['X-Debug']='MedicationManagement-FetchPending';// Use the correct endpoint path - this is the API URL configured in the controller\n// Always include details to get full parent and student names\nconst response=await authAxios.get('/medication-requests/pending?includeDetails=true');// Process the data to ensure we have the full names available for display\nconst processedData=response.data.map(request=>{// Log the original data to help with debugging\n// Use the new studentFullName field if available\nlet displayStudentName;if(request.studentFullName){displayStudentName=request.studentFullName;}else if(request.studentName&&!request.studentName.startsWith('Student Code:')){displayStudentName=request.studentName;}else{displayStudentName=`Student (${request.studentCode})`;}// Use the new parentFullName field if available\nlet displayParentName=request.parentFullName||request.requestedByName||request.parentName||'Parent';// Ensure id is mapped to requestId for consistency\nreturn{...request,id:request.requestId,// Map backend requestId to id for frontend compatibility\nstudentFullName:displayStudentName,parentFullName:displayParentName};});setPendingRequests(processedData);}catch(error){var _error$response,_error$response$data,_error$response2;console.error('Error fetching pending medication requests:',error);// More detailed error logging\nif(error.response){console.error('Response status:',error.response.status);console.error('Response data:',error.response.data);console.error('Request URL:',error.config.url);console.error('Request headers:',error.config.headers);}setPendingRequestsError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||`Failed to fetch pending requests (${((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)||'unknown error'}). Please try again.`);}finally{setIsLoadingPendingRequests(false);}},[]);useEffect(()=>{fetchPendingMedicationRequests();fetchMedications();// For inventory tab\nfetchAdministrations();// For administration log tab\nfetchStudents();// If needed for other parts\n},[fetchPendingMedicationRequests]);// Removed checkLowStock from here, will call it where medications are updated\nuseEffect(()=>{checkLowStock();},[medications,checkLowStock]);const fetchMedications=async()=>{try{const authAxios=apiClient;// Add debugging headers\nauthAxios.defaults.headers.common['X-Debug-Request']='FetchMedications';// Call API to get medication data from backend\nconst response=await authAxios.get('/medications/inventory');if(Array.isArray(response.data)){// Convert API response to a format compatible with the UI\n// Make sure we map medicationId to id for frontend compatibility\nconst medications=response.data.map(med=>({...med,id:med.medicationId// Ensure frontend compatibility\n}));setMedications(medications);}else{console.error('API returned non-array data:',response.data);setAlertMessage({message:'Error: API returned invalid data format',severity:'error',show:true});// Set empty array to avoid UI errors\nsetMedications([]);}}catch(error){var _error$response3,_error$response3$data;console.error('Error fetching medications:',error);// Log detailed error information for debugging\nif(error.response){console.error('Response status:',error.response.status);console.error('Response data:',error.response.data);}// Show error message to user\nsetAlertMessage({message:`Error fetching medications: ${((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||error.message}`,severity:'error',show:true});// Set empty array to avoid UI errors\nsetMedications([]);}};const fetchAdministrations=async()=>{// ... existing fetchAdministrations (direct admin log)\ntry{// Mock data - replace with actual API call for direct admin log\nsetAdministrations([{id:'1',studentId:'S001',studentName:'John Doe (Direct Log)',medicationId:'1',medicationName:'Ibuprofen (Direct)',dosage:'200mg',administrationTime:[new Date().toISOString()],notes:'Administered for headache'}]);}catch(error){console.error('Error fetching administrations:',error);}};const fetchStudents=async()=>{// ... existing fetchStudents\ntry{// Mock data - replace with actual API call\nsetStudents([{studentCode:'S001',name:'John Doe',class:'10A'},{studentCode:'S002',name:'Jane Smith',class:'9B'}]);}catch(error){console.error('Error fetching students:',error);}};const handleTabChange=(event,newValue)=>{setActiveTab(newValue);setSearchParams({tab:newValue.toString()});};// --- Medication Inventory Handlers ---\nconst handleAddMedication=()=>{setSelectedMedication(null);// Reset form with default values\nmedicationForm.reset({medicationName:'',// Removed genericName as per requirements\ndosage:'',form:'',manufacturer:'',batchNumber:'',expiryDate:new Date().toISOString().split('T')[0],// Set today's date in YYYY-MM-DD format\nquantity:0,unitCost:0,storageLocation:'',contraindications:[],sideEffects:[],prescriptionRequired:false,instructions:''});setMedicationDialogOpen(true);};const handleEditMedication=medication=>{setSelectedMedication(medication);// Format date to match the expected input format (YYYY-MM-DD)\nlet formattedData={...medication};if(medication.expiryDate){if(typeof medication.expiryDate==='string'){formattedData.expiryDate=new Date(medication.expiryDate).toISOString().split('T')[0];}else{formattedData.expiryDate=medication.expiryDate.toISOString().split('T')[0];}}// Ensure we're using the correct ID field from the backend\nif(medication.medicationId&&!medication.id){formattedData.id=medication.medicationId;}// Ensure other fields are properly initialized\nformattedData.contraindications=formattedData.contraindications||[];formattedData.sideEffects=formattedData.sideEffects||[];medicationForm.reset(formattedData);setMedicationDialogOpen(true);};const[alertMessage,setAlertMessage]=useState({message:'',severity:'info',show:false});const handleMedicationFormSubmit=async data=>{try{const authAxios=apiClient;// Format date properly before submitting\nif(data.expiryDate){// Ensure expiryDate is a proper Date object\ndata.expiryDate=new Date(data.expiryDate);}// Prepare the medication data to match the backend DTO\nconst medicationDTO={medicationId:selectedMedication?selectedMedication.medicationId:null,medicationName:data.medicationName,dosage:data.dosage,form:data.form,batchNumber:data.batchNumber||\"\",expiryDate:data.expiryDate,quantity:data.quantity,prescriptionRequired:false,// Always set a default value (false) for this required field\nmanufacturer:data.manufacturer||\"\",storageLocation:data.storageLocation||\"\",unitCost:data.unitCost||0};// Use the actual backend API endpoints to save medication data\nif(selectedMedication){await authAxios.put(`/medications/inventory/${selectedMedication.medicationId}`,medicationDTO);setAlertMessage({message:`Medication \"${data.medicationName}\" updated successfully!`,severity:'success',show:true});}else{await authAxios.post('/medications/inventory',medicationDTO);setAlertMessage({message:`New medication \"${data.medicationName}\" added to inventory!`,severity:'success',show:true});}// Update UI by fetching the latest data from the backend\nfetchMedications();setMedicationDialogOpen(false);// Auto-hide message after 5 seconds\nsetTimeout(()=>{setAlertMessage(prev=>({...prev,show:false}));},5000);}catch(error){var _error$response4,_error$response4$data;console.error('Error saving medication:',error);// More detailed error logging for debugging\nif(error.response){console.error('Response status:',error.response.status);console.error('Response data:',error.response.data);}setAlertMessage({message:`Error: ${((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||error.message||'Failed to save medication'}`,severity:'error',show:true});}};// --- Direct Administration Log Handlers ---\nconst handleAddAdministration=()=>{// For direct log\n// setSelectedAdministration(null); // Not used anymore\nadministrationForm.reset({administrationTime:new Date(),notes:'',studentCode:''});setAdministrationDialogOpen(true);};// const handleEditAdministration = (adminLog) => { // For direct log\n//   setSelectedAdministration(adminLog);\n//   administrationForm.reset(adminLog);\n//   setAdministrationDialogOpen(true);\n// };\nconst handleAdministrationFormSubmit=async data=>{// For direct log\n// Replace with actual API call to log direct administration\n// Example: await axios.post('/api/medications/administrations/log', data);\nfetchAdministrations();setAdministrationDialogOpen(false);};// --- Medication Request Action Handlers ---\nconst handleViewDetails=request=>{setSelectedRequest(request);setViewDetailsDialogOpen(true);};const handleOpenApproveConfirmation=request=>{setSelectedRequest(request);setApproveConfirmationDialogOpen(true);};const handleApproveRequest=async()=>{if(!selectedRequest)return;try{// Use requestId which is the correct field from the backend DTO\nconst requestId=selectedRequest.requestId;if(!requestId){console.error('Error: Request ID is undefined or null',selectedRequest);errorAlert('Error: Cannot approve request - missing request ID');return;}const authAxios=apiClient;// First let's check if the API endpoint is accessible\n// Ensure we're using the correct endpoint from the MedicationRequestController\nconst response=await authAxios.put(`/medication-requests/${requestId}/approve`);// Add success notification - we should show this in the UI\nsuccessAlert('Medication request approved successfully');// Modern notification\n// Update the UI by fetching the latest data\nfetchPendingMedicationRequests();}catch(error){console.error('Error approving request:',error);// Detailed error logging for debugging\nif(error.response){var _error$response$data2;console.error('Response status:',error.response.status);console.error('Response data:',error.response.data);console.error('Request URL:',error.config.url);console.error('Request headers:',error.config.headers);// Show error message to the user\nerrorAlert(`Error approving request: ${((_error$response$data2=error.response.data)===null||_error$response$data2===void 0?void 0:_error$response$data2.error)||error.message}`);}else{errorAlert(`Error approving request: ${error.message}`);}}finally{setApproveConfirmationDialogOpen(false);setSelectedRequest(null);}};const handleOpenRejectDialog=request=>{setSelectedRequest(request);rejectForm.reset({rejectionReason:''});setRejectDialogOpen(true);};const handleRejectRequest=async data=>{if(!selectedRequest)return;try{const authAxios=apiClient;// Extract the rejection reason, providing an empty string if null or undefined\nconst rejectionReason=data.rejectionReason||'';// Debug logging to identify the correct ID field\n// Use requestId which is the correct field from the backend DTO\nconst requestId=selectedRequest.requestId;if(!requestId){console.error('Error: Request ID is undefined or null',selectedRequest);errorAlert('Error: Cannot reject request - missing request ID');return;}console.log(`Rejecting request ID: ${requestId} with reason: ${rejectionReason||'(No reason provided)'}`);// The backend controller expects \"reason\" as the parameter name\nconst response=await authAxios.put(`/medication-requests/${requestId}/reject`,{reason:rejectionReason});// Show a success message to the user\nsuccessAlert('Medication request rejected successfully');// Update the UI by fetching the latest data\nfetchPendingMedicationRequests();}catch(error){console.error('Error rejecting request:',error);// Detailed error logging\nif(error.response){var _error$response$data3;console.error('Response status:',error.response.status);console.error('Response data:',error.response.data);console.error('Request URL:',error.config.url);console.error('Request payload:',error.config.data);// Show error message to the user\nerrorAlert(`Error rejecting request: ${((_error$response$data3=error.response.data)===null||_error$response$data3===void 0?void 0:_error$response$data3.error)||error.message}`);}else{errorAlert(`Error rejecting request: ${error.message}`);}}finally{setRejectDialogOpen(false);setSelectedRequest(null);}};const handleOpenAdministerDialog=request=>{setSelectedRequest(request);// Pre-fill if possible, e.g., medication name, dosage from request for display\nrecordAdministrationForm.reset({administrationTime:new Date(),notes:''});setAdministerDialogOpen(true);};const handleAdministerMedication=async data=>{if(!selectedRequest)return;// Use requestId which is the correct field from the backend DTO\nconst requestId=selectedRequest.requestId;if(!requestId){console.error('Error: Request ID is undefined or null',selectedRequest);errorAlert('Error: Cannot administer medication - missing request ID');return;}const administrationData={administrationTime:data.administrationTime.toISOString(),// Ensure correct format for backend\nnotes:data.notes,// Use the field name expected by the backend controller\nadministrationNotes:data.notes};try{const authAxios=apiClient;await authAxios.post(`/medication-requests/${requestId}/administer`,administrationData);// Add success notification\nsuccessAlert('Medication administered successfully');fetchPendingMedicationRequests();// Refetch to update the UI\n}catch(error){console.error('Error administering medication:',error);// More detailed error logging for debugging\nif(error.response){var _error$response$data4;console.error('Response status:',error.response.status);console.error('Response data:',error.response.data);console.error('Request URL:',error.config.url);console.error('Request payload:',error.config.data);// Show error message to the user\nerrorAlert(`Error administering medication: ${((_error$response$data4=error.response.data)===null||_error$response$data4===void 0?void 0:_error$response$data4.error)||error.message}`);}else{errorAlert(`Error administering medication: ${error.message}`);}}finally{setAdministerDialogOpen(false);setSelectedRequest(null);}};const formatDate=dateString=>{if(!dateString)return'N/A';return new Date(dateString).toLocaleDateString();};const formatDateTime=dateTimeString=>{if(!dateTimeString)return'N/A';return new Date(dateTimeString).toLocaleString();};// Function to test medication API connection\nconst testMedicationAPI=async()=>{try{setAlertMessage({message:'Testing medication inventory API connection...',severity:'info',show:true});const authAxios=apiClient;// Add debugging headers\nauthAxios.defaults.headers.common['X-Debug']='TestMedicationAPI';// Test GET endpoint\nconst getResponse=await authAxios.get('/medications/inventory');// Test POST endpoint with a test medication (if there's no data)\nif(Array.isArray(getResponse.data)&&getResponse.data.length===0){const testMedication={medicationName:'Test Medication API',dosage:'10mg',form:'Tablet',batchNumber:'TEST123',expiryDate:new Date(new Date().getFullYear()+1,0,1),// Next year\nquantity:50,prescriptionRequired:false,manufacturer:'Test Manufacturer',storageLocation:'Test Location',unitCost:10.0};const postResponse=await authAxios.post('/medications/inventory',testMedication);}// Show success message\nsetAlertMessage({message:'Medication API connection successful! Refreshing data...',severity:'success',show:true});// Refresh the medication data\nfetchMedications();}catch(error){var _error$response5,_error$response5$data;console.error('API test error:',error);// Log detailed error information\nif(error.response){console.error('Response status:',error.response.status);console.error('Response data:',error.response.data);console.error('Request URL:',error.config.url);console.error('Request headers:',error.config.headers);console.error('Request data:',error.config.data);}setAlertMessage({message:`API test failed: ${((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.error)||error.message}`,severity:'error',show:true});}};return(/*#__PURE__*/// <LocalizationProvider dateAdapter={AdapterDateFns}> // Needed if using MUI X Date/Time Pickers\n_jsxs(Box,{sx:{p:3},children:[/*#__PURE__*/_jsx(PageHeader,{title:\"Medication Management\",icon:/*#__PURE__*/_jsx(PharmacyIcon,{})}),/*#__PURE__*/_jsxs(Tabs,{value:activeTab,onChange:handleTabChange,indicatorColor:\"primary\",textColor:\"primary\",sx:{mb:3},children:[/*#__PURE__*/_jsx(Tab,{label:\"Pending Requests\",icon:/*#__PURE__*/_jsx(AssignmentIcon,{})}),/*#__PURE__*/_jsx(Tab,{label:\"Medication Inventory\",icon:/*#__PURE__*/_jsx(InventoryIcon,{})}),/*#__PURE__*/_jsx(Tab,{label:\"Low Stock Alerts\",icon:/*#__PURE__*/_jsx(WarningIcon,{}),badgeContent:lowStockAlerts.length,color:\"error\"}),/*#__PURE__*/_jsx(Tab,{label:\"Medical Events\",icon:/*#__PURE__*/_jsx(MedicalEventIcon,{})})]}),activeTab===0&&/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{title:\"Pending Medication Requests\"}),/*#__PURE__*/_jsxs(CardContent,{children:[isLoadingPendingRequests&&/*#__PURE__*/_jsx(CircularProgress,{}),pendingRequestsError&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",children:pendingRequestsError}),!isLoadingPendingRequests&&!pendingRequestsError&&/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{stickyHeader:true,children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Student Full Name\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Student Code\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Medication\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Dosage\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Frequency\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Start Date\"}),/*#__PURE__*/_jsx(TableCell,{children:\"End Date\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Status\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Requested By\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Actions\"})]})}),/*#__PURE__*/_jsxs(TableBody,{children:[pendingRequests.length===0&&/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{colSpan:10,align:\"center\",children:\"No pending requests.\"})}),pendingRequests.map(request=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:request.studentFullName}),/*#__PURE__*/_jsx(TableCell,{children:request.studentCode}),/*#__PURE__*/_jsx(TableCell,{children:request.medicationName}),/*#__PURE__*/_jsx(TableCell,{children:request.dosage}),/*#__PURE__*/_jsx(TableCell,{children:request.frequency}),/*#__PURE__*/_jsx(TableCell,{children:formatDate(request.startDate)}),/*#__PURE__*/_jsx(TableCell,{children:formatDate(request.endDate)}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:request.status,color:request.status==='PENDING'||request.status==='PENDING_APPROVAL'?'warning':request.status==='APPROVED'?'success':request.status==='REJECTED'?'error':'default'})}),/*#__PURE__*/_jsx(TableCell,{children:request.parentFullName}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:1},children:[/*#__PURE__*/_jsx(Tooltip,{title:\"View Details\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>handleViewDetails(request),size:\"small\",children:/*#__PURE__*/_jsx(ViewIcon,{})})}),(request.status==='PENDING_APPROVAL'||request.status==='PENDING')&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Approve\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>handleOpenApproveConfirmation(request),size:\"small\",color:\"success\",\"aria-label\":\"Approve medication request\",children:/*#__PURE__*/_jsx(ApproveIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Reject\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>handleOpenRejectDialog(request),size:\"small\",color:\"error\",\"aria-label\":\"Reject medication request\",children:/*#__PURE__*/_jsx(RejectIcon,{})})})]}),request.status==='APPROVED'&&/*#__PURE__*/// Assuming 'APPROVED' means ready to administer\n_jsx(Tooltip,{title:\"Administer\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>handleOpenAdministerDialog(request),size:\"small\",color:\"primary\",\"aria-label\":\"Administer medication\",children:/*#__PURE__*/_jsx(AdministerIcon,{})})})]})})]},request.id))]})]})})]})]}),activeTab===1&&/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{title:\"Medication Inventory\",action:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:1},children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:testMedicationAPI,children:\"Test API Connection\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:handleAddMedication,children:\"Add Medication\"})]})}),/*#__PURE__*/_jsxs(CardContent,{children:[alertMessage.show&&/*#__PURE__*/_jsx(Alert,{severity:alertMessage.severity,sx:{mb:2},onClose:()=>setAlertMessage(prev=>({...prev,show:false})),children:alertMessage.message}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,sx:{mb:2},children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,variant:\"outlined\",placeholder:\"Search medications...\",size:\"small\",InputProps:{startAdornment:/*#__PURE__*/_jsx(SearchIcon,{color:\"action\",sx:{mr:1}})},value:searchTerm,onChange:e=>setSearchTerm(e.target.value)})})}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Name\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Form\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Dosage\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Quantity\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Expiry\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:medications.length===0?/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{colSpan:6,align:\"center\",children:\"No medications in inventory.\"})}):medications.map(med=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:med.medicationName}),/*#__PURE__*/_jsx(TableCell,{children:med.form||'-'}),/*#__PURE__*/_jsx(TableCell,{children:med.dosage}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:med.quantity,color:med.quantity<20?'warning':'default',size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:formatDate(med.expiryDate)}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Box,{sx:{display:'flex',gap:1},children:/*#__PURE__*/_jsx(Tooltip,{title:\"Edit\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>handleEditMedication(med),size:\"small\",children:/*#__PURE__*/_jsx(EditIcon,{})})})})})]},med.medicationId||med.id))})]})})]})]}),activeTab===2&&/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{title:\"Low Stock Alerts\"}),/*#__PURE__*/_jsx(CardContent,{children:lowStockAlerts.length===0?/*#__PURE__*/_jsx(Typography,{children:\"No low stock alerts.\"}):/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Medication Name\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Quantity Left\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Storage Location\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:lowStockAlerts.map(med=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:med.medicationName}),/*#__PURE__*/_jsx(TableCell,{children:med.quantity}),/*#__PURE__*/_jsx(TableCell,{children:med.storageLocation})]},med.id))})]})})})]}),activeTab===3&&/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{title:\"Medical Event Management\"}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(MedicalEventTab,{})})]}),/*#__PURE__*/_jsxs(Dialog,{open:medicationDialogOpen,onClose:()=>setMedicationDialogOpen(false),maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsxs(DialogTitle,{children:[selectedMedication?'Edit Medication':'Add New Medication',\" to Inventory\"]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:medicationForm.handleSubmit(handleMedicationFormSubmit),children:[/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(Controller,{name:\"medicationName\",control:medicationForm.control,render:_ref=>{var _fieldState$error;let{field,fieldState}=_ref;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Medication Name\",fullWidth:true,required:true,error:!!fieldState.error,helperText:(_fieldState$error=fieldState.error)===null||_fieldState$error===void 0?void 0:_fieldState$error.message});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(Controller,{name:\"dosage\",control:medicationForm.control,render:_ref2=>{var _fieldState$error2;let{field,fieldState}=_ref2;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Dosage (e.g., 500mg)\",fullWidth:true,required:true,error:!!fieldState.error,helperText:(_fieldState$error2=fieldState.error)===null||_fieldState$error2===void 0?void 0:_fieldState$error2.message});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(Controller,{name:\"form\",control:medicationForm.control,render:_ref3=>{var _fieldState$error3;let{field,fieldState}=_ref3;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Form (e.g., Tablet, Syrup)\",fullWidth:true,required:true,error:!!fieldState.error,helperText:(_fieldState$error3=fieldState.error)===null||_fieldState$error3===void 0?void 0:_fieldState$error3.message});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(Controller,{name:\"quantity\",control:medicationForm.control,render:_ref4=>{var _fieldState$error4;let{field,fieldState}=_ref4;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Quantity\",type:\"number\",fullWidth:true,required:true,error:!!fieldState.error,helperText:(_fieldState$error4=fieldState.error)===null||_fieldState$error4===void 0?void 0:_fieldState$error4.message});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(Controller,{name:\"expiryDate\",control:medicationForm.control,render:_ref5=>{var _fieldState$error5;let{field,fieldState}=_ref5;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Expiry Date\",type:\"date\",InputLabelProps:{shrink:true},fullWidth:true,required:true,error:!!fieldState.error,helperText:((_fieldState$error5=fieldState.error)===null||_fieldState$error5===void 0?void 0:_fieldState$error5.message)||\"Format: YYYY-MM-DD\"});}})})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setMedicationDialogOpen(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",children:\"Save\"})]})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:administrationDialogOpen,onClose:()=>setAdministrationDialogOpen(false),maxWidth:\"sm\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Log Direct Medication Administration\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:administrationForm.handleSubmit(handleAdministrationFormSubmit),children:[/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Controller,{name:\"studentCode\",control:administrationForm.control,render:_ref6=>{let{field,fieldState}=_ref6;return/*#__PURE__*/_jsx(Autocomplete,{options:students,getOptionLabel:option=>`${option.name} (${option.studentCode})`,onChange:(e,newValue)=>field.onChange(newValue?newValue.studentCode:''),renderInput:params=>{var _fieldState$error6;return/*#__PURE__*/_jsx(TextField,{...params,label:\"Student\",fullWidth:true,required:true,error:!!fieldState.error,helperText:(_fieldState$error6=fieldState.error)===null||_fieldState$error6===void 0?void 0:_fieldState$error6.message});}});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Controller,{name:\"medicationName\",control:administrationForm.control,render:_ref7=>{var _fieldState$error7;let{field,fieldState}=_ref7;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Medication Name\",fullWidth:true,required:true,error:!!fieldState.error,helperText:(_fieldState$error7=fieldState.error)===null||_fieldState$error7===void 0?void 0:_fieldState$error7.message});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Controller,{name:\"dosage\",control:administrationForm.control,render:_ref8=>{var _fieldState$error8;let{field,fieldState}=_ref8;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Dosage Administered\",fullWidth:true,required:true,error:!!fieldState.error,helperText:(_fieldState$error8=fieldState.error)===null||_fieldState$error8===void 0?void 0:_fieldState$error8.message});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Controller,{name:\"administrationTime\",control:administrationForm.control,render:_ref9=>{var _fieldState$error9;let{field,fieldState}=_ref9;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Administration Time\",type:\"datetime-local\",InputLabelProps:{shrink:true},fullWidth:true,required:true,error:!!fieldState.error,helperText:(_fieldState$error9=fieldState.error)===null||_fieldState$error9===void 0?void 0:_fieldState$error9.message,value:field.value?new Date(field.value).toISOString().slice(0,16):'',onChange:e=>field.onChange(new Date(e.target.value))});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Controller,{name:\"notes\",control:administrationForm.control,render:_ref0=>{var _fieldState$error0;let{field,fieldState}=_ref0;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Notes\",multiline:true,rows:3,fullWidth:true,error:!!fieldState.error,helperText:(_fieldState$error0=fieldState.error)===null||_fieldState$error0===void 0?void 0:_fieldState$error0.message});}})})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setAdministrationDialogOpen(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",children:\"Log Administration\"})]})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:viewDetailsDialogOpen,onClose:()=>setViewDetailsDialogOpen(false),maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Medication Request Details\"}),selectedRequest&&/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Student Name:\"}),/*#__PURE__*/_jsx(Typography,{children:selectedRequest.studentFullName})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Student Code:\"}),/*#__PURE__*/_jsx(Typography,{children:selectedRequest.studentCode})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Medication:\"}),/*#__PURE__*/_jsx(Typography,{children:selectedRequest.medicationName})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Dosage:\"}),/*#__PURE__*/_jsx(Typography,{children:selectedRequest.dosage})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Frequency:\"}),/*#__PURE__*/_jsx(Typography,{children:selectedRequest.frequency})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Status:\"}),/*#__PURE__*/_jsx(Chip,{label:selectedRequest.status,color:selectedRequest.status==='PENDING'||selectedRequest.status==='PENDING_APPROVAL'?'warning':selectedRequest.status==='APPROVED'?'success':selectedRequest.status==='REJECTED'?'error':'default'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Start Date:\"}),/*#__PURE__*/_jsx(Typography,{children:formatDate(selectedRequest.startDate)})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"End Date:\"}),/*#__PURE__*/_jsx(Typography,{children:formatDate(selectedRequest.endDate)})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Reason for Medication:\"}),/*#__PURE__*/_jsx(Typography,{children:selectedRequest.reason||'N/A'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Parent's Notes:\"}),/*#__PURE__*/_jsx(Typography,{children:selectedRequest.notes||'N/A'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Requested By:\"}),/*#__PURE__*/_jsx(Typography,{children:selectedRequest.parentFullName})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Requested At:\"}),/*#__PURE__*/_jsx(Typography,{children:formatDateTime(selectedRequest.requestedAt)})]}),selectedRequest.approvedByName&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Approved By:\"}),/*#__PURE__*/_jsx(Typography,{children:selectedRequest.approvedByName})]}),selectedRequest.approvedAt&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Approved At:\"}),/*#__PURE__*/_jsx(Typography,{children:formatDateTime(selectedRequest.approvedAt)})]}),selectedRequest.rejectionReason&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Rejection Reason:\"}),/*#__PURE__*/_jsx(Typography,{children:selectedRequest.rejectionReason})]}),selectedRequest.administrationRecords&&selectedRequest.administrationRecords.length>0&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",sx:{mt:2},children:\"Administration History:\"}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,sx:{mt:1},children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Administered At\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Administered By\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Notes\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:selectedRequest.administrationRecords.map(record=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:formatDateTime(record.administrationTime)}),/*#__PURE__*/_jsx(TableCell,{children:record.administeredByNurseName}),/*#__PURE__*/_jsx(TableCell,{children:record.notes||'-'})]},record.id))})]})})]})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setViewDetailsDialogOpen(false),children:\"Close\"}),selectedRequest&&(selectedRequest.status==='PENDING'||selectedRequest.status==='PENDING_APPROVAL')&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>{setViewDetailsDialogOpen(false);handleOpenApproveConfirmation(selectedRequest);},color:\"success\",variant:\"contained\",startIcon:/*#__PURE__*/_jsx(ApproveIcon,{}),children:\"Approve\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>{setViewDetailsDialogOpen(false);handleOpenRejectDialog(selectedRequest);},color:\"error\",variant:\"contained\",startIcon:/*#__PURE__*/_jsx(RejectIcon,{}),children:\"Reject\"})]})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:approveConfirmationDialogOpen,onClose:()=>setApproveConfirmationDialogOpen(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Confirm Medication Request Approval\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,sx:{mt:1},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(DialogContentText,{children:\"Are you sure you want to approve this medication request?\"})}),selectedRequest&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Student:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:selectedRequest.studentFullName})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Requested By:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:selectedRequest.parentFullName})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Medication:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:selectedRequest.medicationName})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Dosage:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:selectedRequest.dosage})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Schedule:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:selectedRequest.frequency})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Duration:\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[formatDate(selectedRequest.startDate),\" - \",formatDate(selectedRequest.endDate)]})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Alert,{severity:\"info\",sx:{mt:2},children:\"By approving this request, you confirm that the medication can be safely administered to the student according to school policy.\"})})]})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setApproveConfirmationDialogOpen(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleApproveRequest,color:\"success\",variant:\"contained\",startIcon:/*#__PURE__*/_jsx(ApproveIcon,{}),\"aria-label\":\"Approve medication request\",children:\"Approve Request\"})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:rejectDialogOpen,onClose:()=>setRejectDialogOpen(false),maxWidth:\"sm\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Reject Medication Request\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:rejectForm.handleSubmit(handleRejectRequest),children:[/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Student:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:selectedRequest===null||selectedRequest===void 0?void 0:selectedRequest.studentFullName})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Requested By:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:selectedRequest===null||selectedRequest===void 0?void 0:selectedRequest.parentFullName})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Medication:\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[selectedRequest===null||selectedRequest===void 0?void 0:selectedRequest.medicationName,\" (\",selectedRequest===null||selectedRequest===void 0?void 0:selectedRequest.dosage,\")\"]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Alert,{severity:\"info\",sx:{mb:2},children:\"You can provide a reason for rejecting this medication request. The parent will receive this information if provided.\"}),/*#__PURE__*/_jsx(Controller,{name:\"rejectionReason\",control:rejectForm.control,render:_ref1=>{var _fieldState$error1;let{field,fieldState}=_ref1;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Reason for Rejection (Optional)\",multiline:true,rows:3,fullWidth:true,autoFocus:true,error:!!fieldState.error,helperText:((_fieldState$error1=fieldState.error)===null||_fieldState$error1===void 0?void 0:_fieldState$error1.message)||'Leave blank if no reason needed',placeholder:\"Example: Doctor's prescription required\",onChange:e=>{field.onChange(e);// Always clear any validation errors as this is optional\nrejectForm.clearErrors('rejectionReason');}});}})]})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setRejectDialogOpen(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"error\",startIcon:/*#__PURE__*/_jsx(RejectIcon,{}),\"aria-label\":\"Submit rejection with reason\"// Never disable the button since rejection reason is optional\n,children:\"Reject Request\"})]})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:administerDialogOpen,onClose:()=>setAdministerDialogOpen(false),maxWidth:\"sm\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Administer Medication\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:recordAdministrationForm.handleSubmit(handleAdministerMedication),children:[/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,sx:{mb:2},children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Student:\"}),/*#__PURE__*/_jsx(Typography,{children:selectedRequest===null||selectedRequest===void 0?void 0:selectedRequest.studentFullName})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Medication:\"}),/*#__PURE__*/_jsxs(Typography,{children:[selectedRequest===null||selectedRequest===void 0?void 0:selectedRequest.medicationName,\" (\",selectedRequest===null||selectedRequest===void 0?void 0:selectedRequest.dosage,\")\"]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Frequency:\"}),/*#__PURE__*/_jsx(Typography,{children:selectedRequest===null||selectedRequest===void 0?void 0:selectedRequest.frequency})]})]}),/*#__PURE__*/_jsx(Controller,{name:\"administrationTime\",control:recordAdministrationForm.control,render:_ref10=>{var _fieldState$error10;let{field,fieldState}=_ref10;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Administration Time\",type:\"datetime-local\",InputLabelProps:{shrink:true},fullWidth:true,margin:\"normal\",required:true,error:!!fieldState.error,helperText:(_fieldState$error10=fieldState.error)===null||_fieldState$error10===void 0?void 0:_fieldState$error10.message// Ensure value is in 'yyyy-MM-ddThh:mm' format for the input\n,value:field.value?new Date(field.value).toISOString().slice(0,16):'',onChange:e=>field.onChange(new Date(e.target.value))});}}),/*#__PURE__*/_jsx(Controller,{name:\"notes\",control:recordAdministrationForm.control,render:_ref11=>{var _fieldState$error11;let{field,fieldState}=_ref11;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Administration Notes\",multiline:true,rows:3,fullWidth:true,margin:\"normal\",error:!!fieldState.error,helperText:(_fieldState$error11=fieldState.error)===null||_fieldState$error11===void 0?void 0:_fieldState$error11.message,placeholder:\"Optional notes about this medication administration\"});}})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setAdministerDialogOpen(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(AdministerIcon,{}),children:\"Record Administration\"})]})]})]})]})// </LocalizationProvider>\n);}export default MedicationManagement;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useForm","Controller","useSearchParams","yupResolver","yup","apiClient","MedicalEventTab","useAlert","Card","CardContent","CardHeader","TextField","Button","Typography","Grid","Chip","Select","MenuItem","FormControl","InputLabel","Box","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","Alert","Tab","Tabs","Badge","Tooltip","Autocomplete","CircularProgress","DialogContentText","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","Search","SearchIcon","Medication","MedicationIcon","Warning","WarningIcon","Schedule","ScheduleIcon","Inventory","InventoryIcon","LocalPharmacy","PharmacyIcon","Assignment","AssignmentIcon","CheckCircleOutline","ApproveIcon","CancelOutlined","RejectIcon","Visibility","ViewIcon","MedicalServices","AdministerIcon","MedicalInformation","MedicalEventIcon","PageHeader","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","medicationSchema","object","shape","medicationName","string","required","dosage","form","manufacturer","batchNumber","expiryDate","date","min","Date","quantity","number","unitCost","storageLocation","prescriptionRequired","boolean","contraindications","array","of","sideEffects","instructions","medicationAdministrationSchema","administrationTime","notes","studentCode","rejectionSchema","rejectionReason","nullable","recordAdministrationSchema","max","MedicationManagement","successAlert","errorAlert","deleteConfirm","searchParams","setSearchParams","initialTab","get","parseInt","activeTab","setActiveTab","medicationDialogOpen","setMedicationDialogOpen","administrationDialogOpen","setAdministrationDialogOpen","selectedMedication","setSelectedMedication","medications","setMedications","administrations","setAdministrations","students","setStudents","searchTerm","setSearchTerm","lowStockAlerts","setLowStockAlerts","pendingRequests","setPendingRequests","isLoadingPendingRequests","setIsLoadingPendingRequests","pendingRequestsError","setPendingRequestsError","selectedRequest","setSelectedRequest","viewDetailsDialogOpen","setViewDetailsDialogOpen","rejectDialogOpen","setRejectDialogOpen","administerDialogOpen","setAdministerDialogOpen","approveConfirmationDialogOpen","setApproveConfirmationDialogOpen","medicationForm","resolver","defaultValues","administrationForm","consentGiven","rejectForm","mode","recordAdministrationForm","checkLowStock","alerts","filter","med","fetchPendingMedicationRequests","authAxios","defaults","headers","common","response","processedData","data","map","request","displayStudentName","studentFullName","studentName","startsWith","displayParentName","parentFullName","requestedByName","parentName","id","requestId","error","_error$response","_error$response$data","_error$response2","console","status","config","url","message","fetchMedications","fetchAdministrations","fetchStudents","Array","isArray","medicationId","setAlertMessage","severity","show","_error$response3","_error$response3$data","studentId","toISOString","name","class","handleTabChange","event","newValue","tab","toString","handleAddMedication","reset","split","handleEditMedication","medication","formattedData","alertMessage","handleMedicationFormSubmit","medicationDTO","put","post","setTimeout","prev","_error$response4","_error$response4$data","handleAddAdministration","handleAdministrationFormSubmit","handleViewDetails","handleOpenApproveConfirmation","handleApproveRequest","_error$response$data2","handleOpenRejectDialog","handleRejectRequest","log","reason","_error$response$data3","handleOpenAdministerDialog","handleAdministerMedication","administrationData","administrationNotes","_error$response$data4","formatDate","dateString","toLocaleDateString","formatDateTime","dateTimeString","toLocaleString","testMedicationAPI","getResponse","length","testMedication","getFullYear","postResponse","_error$response5","_error$response5$data","sx","p","children","title","icon","value","onChange","indicatorColor","textColor","mb","label","badgeContent","color","component","stickyHeader","colSpan","align","frequency","startDate","endDate","display","gap","onClick","size","action","variant","startIcon","onClose","container","spacing","item","xs","md","fullWidth","placeholder","InputProps","startAdornment","mr","e","target","open","maxWidth","onSubmit","handleSubmit","sm","control","render","_ref","_fieldState$error","field","fieldState","helperText","_ref2","_fieldState$error2","_ref3","_fieldState$error3","_ref4","_fieldState$error4","type","_ref5","_fieldState$error5","InputLabelProps","shrink","_ref6","options","getOptionLabel","option","renderInput","params","_fieldState$error6","_ref7","_fieldState$error7","_ref8","_fieldState$error8","_ref9","_fieldState$error9","slice","_ref0","_fieldState$error0","multiline","rows","requestedAt","approvedByName","approvedAt","administrationRecords","mt","record","administeredByNurseName","fontWeight","_ref1","_fieldState$error1","autoFocus","clearErrors","_ref10","_fieldState$error10","margin","_ref11","_fieldState$error11"],"sources":["C:/Users/trand/OneDrive/Documents/GitHub/SchoolMedicalManagement/SchoolMedicalManagement/frontend/src/pages/medical/MedicationManagement.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { useSearchParams } from 'react-router-dom'; // Added for URL query parameters\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport apiClient from '../../utils/api'; // Import the api client\r\nimport MedicalEventTab from '../../components/medical/MedicalEventTab'; // Import MedicalEventTab component\r\nimport { useAlert } from '../../hooks/useAlert'; // Import useAlert hook\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Chip,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Alert,\r\n  Tab,\r\n  Tabs,\r\n  Badge,\r\n  Tooltip,\r\n  Autocomplete,\r\n  CircularProgress, // Added\r\n  DialogContentText // Added\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  Search as SearchIcon,\r\n  Medication as MedicationIcon,\r\n  Warning as WarningIcon,\r\n  Schedule as ScheduleIcon,\r\n  Inventory as InventoryIcon,\r\n  LocalPharmacy as PharmacyIcon,\r\n  Assignment as AssignmentIcon,\r\n  CheckCircleOutline as ApproveIcon,\r\n  CancelOutlined as RejectIcon,\r\n  Visibility as ViewIcon,\r\n  MedicalServices as AdministerIcon,\r\n  MedicalInformation as MedicalEventIcon // Added for Medical Event tab\r\n} from '@mui/icons-material';\r\nimport PageHeader from '../../components/PageHeader';\r\n// import { LocalizationProvider, DateTimePicker } from '@mui/x-date-pickers'; // Consider if full DateTimePicker is needed\r\n// import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns'; // Adapter for date picker\r\n\r\nconst medicationSchema = yup.object().shape({\r\n  medicationName: yup.string().required('Medication name is required'),\r\n  // Removed genericName as per requirements\r\n  dosage: yup.string().required('Dosage is required'),\r\n  form: yup.string().required('Medication form is required'),\r\n  manufacturer: yup.string(),\r\n  batchNumber: yup.string(),\r\n  expiryDate: yup.date().required('Expiry date is required').min(new Date(), 'Expiry date must be in the future'),\r\n  quantity: yup.number().required('Quantity is required').min(1, 'Quantity must be at least 1'),\r\n  unitCost: yup.number().min(0, 'Unit cost must be positive'),\r\n  storageLocation: yup.string(),\r\n  prescriptionRequired: yup.boolean(),\r\n  contraindications: yup.array().of(yup.string()),\r\n  sideEffects: yup.array().of(yup.string()),\r\n  instructions: yup.string()\r\n});\r\n\r\nconst medicationAdministrationSchema = yup.object().shape({\r\n  medicationName: yup.string().required('Medication name is required'),\r\n  // ... existing medicationAdministrationSchema\r\n  dosage: yup.string().required('Dosage is required'),\r\n  administrationTime: yup.date().required('Administration time is required'),\r\n  notes: yup.string(),\r\n  studentCode: yup.string().required('Student is required'),\r\n});\r\n\r\n// Schema for rejecting a medication request\r\nconst rejectionSchema = yup.object().shape({\r\n  rejectionReason: yup.string().nullable(), // Make it optional so the form can be submitted without a reason\r\n});\r\n\r\n// Schema for administering medication for a request\r\nconst recordAdministrationSchema = yup.object().shape({\r\n  administrationTime: yup.date().required('Administration time is required').max(new Date(), 'Administration time cannot be in the future (adjust if pre-logging needed)'),\r\n  notes: yup.string().nullable(),\r\n});\r\n\r\n\r\nfunction MedicationManagement() {\r\n  const { successAlert, errorAlert, deleteConfirm } = useAlert(); // Initialize useAlert hook\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const initialTab = searchParams.get('tab') ? parseInt(searchParams.get('tab'), 10) : 0;\r\n  const [activeTab, setActiveTab] = useState(initialTab); // Read initial tab from URL if available\r\n  const [medicationDialogOpen, setMedicationDialogOpen] = useState(false);\r\n  const [administrationDialogOpen, setAdministrationDialogOpen] = useState(false); // For direct administration log\r\n  const [selectedMedication, setSelectedMedication] = useState(null);\r\n  // const [selectedAdministration, setSelectedAdministration] = useState(null); // For direct administration log\r\n  const [medications, setMedications] = useState([]); // Inventory\r\n  const [administrations, setAdministrations] = useState([]); // Direct administration log\r\n  const [students, setStudents] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  // const [filterStatus, setFilterStatus] = useState('all'); // May not be needed for requests if using tabs\r\n  const [lowStockAlerts, setLowStockAlerts] = useState([]);\r\n\r\n  // State for Medication Requests\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [isLoadingPendingRequests, setIsLoadingPendingRequests] = useState(false);\r\n  const [pendingRequestsError, setPendingRequestsError] = useState(null);\r\n  \r\n  const [selectedRequest, setSelectedRequest] = useState(null); // For actions on a specific request\r\n  const [viewDetailsDialogOpen, setViewDetailsDialogOpen] = useState(false);\r\n  const [rejectDialogOpen, setRejectDialogOpen] = useState(false);\r\n  const [administerDialogOpen, setAdministerDialogOpen] = useState(false);\r\n  const [approveConfirmationDialogOpen, setApproveConfirmationDialogOpen] = useState(false);\r\n\r\n\r\n  const medicationForm = useForm({\r\n    resolver: yupResolver(medicationSchema),\r\n    defaultValues: {\r\n      medicationName: '',\r\n      // Removed genericName as per requirements\r\n      dosage: '',\r\n      form: '',\r\n      manufacturer: '',\r\n      batchNumber: '',\r\n      expiryDate: null,\r\n      quantity: 0,\r\n      unitCost: 0,\r\n      storageLocation: '',\r\n      contraindications: [],\r\n      sideEffects: [],\r\n      prescriptionRequired: false,\r\n      instructions: ''\r\n    }\r\n  });\r\n\r\n  const administrationForm = useForm({ // For direct administration log\r\n    resolver: yupResolver(medicationAdministrationSchema),\r\n    // ... existing administrationForm setup\r\n    defaultValues: {\r\n      administrationTime: new Date(), // Changed from array\r\n      consentGiven: false // This field might not be relevant here\r\n    }\r\n  });\r\n\r\n  const rejectForm = useForm({\r\n    resolver: yupResolver(rejectionSchema),\r\n    defaultValues: { rejectionReason: '' },\r\n    mode: 'onSubmit', // Only validate on submit to allow empty values\r\n  });\r\n\r\n  const recordAdministrationForm = useForm({\r\n    resolver: yupResolver(recordAdministrationSchema),\r\n    defaultValues: { administrationTime: new Date(), notes: '' },\r\n  });\r\n\r\n\r\n  const checkLowStock = useCallback(() => {\r\n    const alerts = medications.filter(med => med.quantity < 20); // Example threshold\r\n    setLowStockAlerts(alerts);\r\n  }, [medications]);\r\n\r\n  const fetchPendingMedicationRequests = useCallback(async () => {\r\n    setIsLoadingPendingRequests(true);\r\n    setPendingRequestsError(null);\r\n    try {\r\n      // Use apiClient as authenticated axios instance\r\n      const authAxios = apiClient;\r\n      // Add debugging info to help trace the request\r\n      authAxios.defaults.headers.common['X-Debug'] = 'MedicationManagement-FetchPending';\r\n      // Use the correct endpoint path - this is the API URL configured in the controller\r\n      // Always include details to get full parent and student names\r\n      const response = await authAxios.get('/medication-requests/pending?includeDetails=true');\r\n      // Process the data to ensure we have the full names available for display\r\n      const processedData = response.data.map(request => {\r\n        // Log the original data to help with debugging\r\n        // Use the new studentFullName field if available\r\n        let displayStudentName;\r\n        \r\n        if (request.studentFullName) {\r\n          displayStudentName = request.studentFullName;\r\n        } else if (request.studentName && !request.studentName.startsWith('Student Code:')) {\r\n          displayStudentName = request.studentName;\r\n        } else {\r\n          displayStudentName = `Student (${request.studentCode})`;\r\n        }\r\n        \r\n        // Use the new parentFullName field if available\r\n        let displayParentName = request.parentFullName || \r\n                               request.requestedByName || \r\n                               request.parentName || \r\n                               'Parent';\r\n        \r\n        // Ensure id is mapped to requestId for consistency\r\n        return {\r\n          ...request,\r\n          id: request.requestId, // Map backend requestId to id for frontend compatibility\r\n          studentFullName: displayStudentName,\r\n          parentFullName: displayParentName\r\n        };\r\n      });\r\n      \r\n      setPendingRequests(processedData);\r\n    } catch (error) {\r\n      console.error('Error fetching pending medication requests:', error);\r\n      // More detailed error logging\r\n      if (error.response) {\r\n        console.error('Response status:', error.response.status);\r\n        console.error('Response data:', error.response.data);\r\n        console.error('Request URL:', error.config.url);\r\n        console.error('Request headers:', error.config.headers);\r\n      }\r\n      setPendingRequestsError(\r\n        error.response?.data?.message || \r\n        `Failed to fetch pending requests (${error.response?.status || 'unknown error'}). Please try again.`\r\n      );\r\n    } finally {\r\n      setIsLoadingPendingRequests(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchPendingMedicationRequests();\r\n    fetchMedications(); // For inventory tab\r\n    fetchAdministrations(); // For administration log tab\r\n    fetchStudents(); // If needed for other parts\r\n  }, [fetchPendingMedicationRequests]); // Removed checkLowStock from here, will call it where medications are updated\r\n\r\n  useEffect(() => {\r\n    checkLowStock();\r\n  }, [medications, checkLowStock]);\r\n\r\n\r\n  const fetchMedications = async () => {\r\n    try {\r\n      const authAxios = apiClient;\r\n      \r\n      // Add debugging headers\r\n      authAxios.defaults.headers.common['X-Debug-Request'] = 'FetchMedications';\r\n      \r\n      // Call API to get medication data from backend\r\n      const response = await authAxios.get('/medications/inventory');\r\n      if (Array.isArray(response.data)) {\r\n        // Convert API response to a format compatible with the UI\r\n        // Make sure we map medicationId to id for frontend compatibility\r\n        const medications = response.data.map(med => ({\r\n          ...med,\r\n          id: med.medicationId // Ensure frontend compatibility\r\n        }));\r\n        \r\n        setMedications(medications);\r\n      } else {\r\n        console.error('API returned non-array data:', response.data);\r\n        setAlertMessage({\r\n          message: 'Error: API returned invalid data format',\r\n          severity: 'error',\r\n          show: true\r\n        });\r\n        // Set empty array to avoid UI errors\r\n        setMedications([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching medications:', error);\r\n      \r\n      // Log detailed error information for debugging\r\n      if (error.response) {\r\n        console.error('Response status:', error.response.status);\r\n        console.error('Response data:', error.response.data);\r\n      }\r\n      \r\n      // Show error message to user\r\n      setAlertMessage({\r\n        message: `Error fetching medications: ${error.response?.data?.error || error.message}`,\r\n        severity: 'error',\r\n        show: true\r\n      });\r\n      \r\n      // Set empty array to avoid UI errors\r\n      setMedications([]);\r\n    }\r\n  };\r\n\r\n  const fetchAdministrations = async () => {\r\n    // ... existing fetchAdministrations (direct admin log)\r\n     try {\r\n      // Mock data - replace with actual API call for direct admin log\r\n      setAdministrations([\r\n        { id: '1', studentId: 'S001', studentName: 'John Doe (Direct Log)', medicationId: '1', medicationName: 'Ibuprofen (Direct)', dosage: '200mg', administrationTime: [new Date().toISOString()], notes: 'Administered for headache' }\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error fetching administrations:', error);\r\n    }\r\n  };\r\n\r\n  const fetchStudents = async () => {\r\n    // ... existing fetchStudents\r\n    try {\r\n      // Mock data - replace with actual API call\r\n      setStudents([\r\n        { studentCode: 'S001', name: 'John Doe', class: '10A' },\r\n        { studentCode: 'S002', name: 'Jane Smith', class: '9B' }\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error fetching students:', error);\r\n    }\r\n  };\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setActiveTab(newValue);\r\n    setSearchParams({ tab: newValue.toString() });\r\n  };\r\n\r\n  // --- Medication Inventory Handlers ---\r\n  const handleAddMedication = () => {\r\n    setSelectedMedication(null);\r\n    \r\n    // Reset form with default values\r\n    medicationForm.reset({\r\n      medicationName: '',\r\n      // Removed genericName as per requirements\r\n      dosage: '',\r\n      form: '',\r\n      manufacturer: '',\r\n      batchNumber: '',\r\n      expiryDate: new Date().toISOString().split('T')[0], // Set today's date in YYYY-MM-DD format\r\n      quantity: 0,\r\n      unitCost: 0,\r\n      storageLocation: '',\r\n      contraindications: [],\r\n      sideEffects: [],\r\n      prescriptionRequired: false,\r\n      instructions: ''\r\n    });\r\n    \r\n    setMedicationDialogOpen(true);\r\n  };\r\n\r\n  const handleEditMedication = (medication) => {\r\n    setSelectedMedication(medication);\r\n    \r\n    // Format date to match the expected input format (YYYY-MM-DD)\r\n    let formattedData = { ...medication };\r\n    \r\n    if (medication.expiryDate) {\r\n      if (typeof medication.expiryDate === 'string') {\r\n        formattedData.expiryDate = new Date(medication.expiryDate).toISOString().split('T')[0];\r\n      } else {\r\n        formattedData.expiryDate = medication.expiryDate.toISOString().split('T')[0];\r\n      }\r\n    }\r\n    \r\n    // Ensure we're using the correct ID field from the backend\r\n    if (medication.medicationId && !medication.id) {\r\n      formattedData.id = medication.medicationId;\r\n    }\r\n    \r\n    // Ensure other fields are properly initialized\r\n    formattedData.contraindications = formattedData.contraindications || [];\r\n    formattedData.sideEffects = formattedData.sideEffects || [];\r\n    \r\n    medicationForm.reset(formattedData);\r\n    setMedicationDialogOpen(true);\r\n  };\r\n  \r\n  const [alertMessage, setAlertMessage] = useState({ message: '', severity: 'info', show: false });\r\n  \r\n  const handleMedicationFormSubmit = async (data) => {\r\n    try {\r\n      const authAxios = apiClient;\r\n      \r\n      // Format date properly before submitting\r\n      if (data.expiryDate) {\r\n        // Ensure expiryDate is a proper Date object\r\n        data.expiryDate = new Date(data.expiryDate);\r\n      }\r\n      \r\n      // Prepare the medication data to match the backend DTO\r\n      const medicationDTO = {\r\n        medicationId: selectedMedication ? selectedMedication.medicationId : null,\r\n        medicationName: data.medicationName,\r\n        dosage: data.dosage,\r\n        form: data.form,\r\n        batchNumber: data.batchNumber || \"\",\r\n        expiryDate: data.expiryDate,\r\n        quantity: data.quantity,\r\n        prescriptionRequired: false, // Always set a default value (false) for this required field\r\n        manufacturer: data.manufacturer || \"\",\r\n        storageLocation: data.storageLocation || \"\",\r\n        unitCost: data.unitCost || 0\r\n      };\r\n      \r\n      // Use the actual backend API endpoints to save medication data\r\n      if (selectedMedication) {\r\n        await authAxios.put(`/medications/inventory/${selectedMedication.medicationId}`, medicationDTO);\r\n        setAlertMessage({\r\n          message: `Medication \"${data.medicationName}\" updated successfully!`,\r\n          severity: 'success',\r\n          show: true\r\n        });\r\n      } else {\r\n        await authAxios.post('/medications/inventory', medicationDTO);\r\n        setAlertMessage({\r\n          message: `New medication \"${data.medicationName}\" added to inventory!`,\r\n          severity: 'success',\r\n          show: true\r\n        });\r\n      }\r\n      \r\n      // Update UI by fetching the latest data from the backend\r\n      fetchMedications();\r\n      setMedicationDialogOpen(false);\r\n      \r\n      // Auto-hide message after 5 seconds\r\n      setTimeout(() => {\r\n        setAlertMessage(prev => ({ ...prev, show: false }));\r\n      }, 5000);\r\n    } catch (error) {\r\n      console.error('Error saving medication:', error);\r\n      \r\n      // More detailed error logging for debugging\r\n      if (error.response) {\r\n        console.error('Response status:', error.response.status);\r\n        console.error('Response data:', error.response.data);\r\n      }\r\n      \r\n      setAlertMessage({\r\n        message: `Error: ${error.response?.data?.error || error.message || 'Failed to save medication'}`,\r\n        severity: 'error',\r\n        show: true\r\n      });\r\n    }\r\n  };\r\n\r\n  // --- Direct Administration Log Handlers ---\r\n  const handleAddAdministration = () => { // For direct log\r\n    // setSelectedAdministration(null); // Not used anymore\r\n    administrationForm.reset({ administrationTime: new Date(), notes: '', studentCode: '' });\r\n    setAdministrationDialogOpen(true);\r\n  };\r\n\r\n  // const handleEditAdministration = (adminLog) => { // For direct log\r\n  //   setSelectedAdministration(adminLog);\r\n  //   administrationForm.reset(adminLog);\r\n  //   setAdministrationDialogOpen(true);\r\n  // };\r\n\r\n  const handleAdministrationFormSubmit = async (data) => { // For direct log\r\n    // Replace with actual API call to log direct administration\r\n    // Example: await axios.post('/api/medications/administrations/log', data);\r\n    fetchAdministrations();\r\n    setAdministrationDialogOpen(false);\r\n  };\r\n\r\n  // --- Medication Request Action Handlers ---\r\n  const handleViewDetails = (request) => {\r\n    setSelectedRequest(request);\r\n    setViewDetailsDialogOpen(true);\r\n  };\r\n\r\n  const handleOpenApproveConfirmation = (request) => {\r\n    setSelectedRequest(request);\r\n    setApproveConfirmationDialogOpen(true);\r\n  };\r\n\r\n  const handleApproveRequest = async () => {\r\n    if (!selectedRequest) return;\r\n    try {\r\n      // Use requestId which is the correct field from the backend DTO\r\n      const requestId = selectedRequest.requestId;\r\n      \r\n      if (!requestId) {\r\n        console.error('Error: Request ID is undefined or null', selectedRequest);\r\n        errorAlert('Error: Cannot approve request - missing request ID');\r\n        return;\r\n      }\r\n      \r\n      const authAxios = apiClient;\r\n      \r\n      // First let's check if the API endpoint is accessible\r\n      // Ensure we're using the correct endpoint from the MedicationRequestController\r\n      const response = await authAxios.put(`/medication-requests/${requestId}/approve`);\r\n      // Add success notification - we should show this in the UI\r\n      successAlert('Medication request approved successfully'); // Modern notification\r\n      \r\n      // Update the UI by fetching the latest data\r\n      fetchPendingMedicationRequests();\r\n    } catch (error) {\r\n      console.error('Error approving request:', error);\r\n      \r\n      // Detailed error logging for debugging\r\n      if (error.response) {\r\n        console.error('Response status:', error.response.status);\r\n        console.error('Response data:', error.response.data);\r\n        console.error('Request URL:', error.config.url);\r\n        console.error('Request headers:', error.config.headers);\r\n        \r\n        // Show error message to the user\r\n        errorAlert(`Error approving request: ${error.response.data?.error || error.message}`);\r\n      } else {\r\n        errorAlert(`Error approving request: ${error.message}`);\r\n      }\r\n    } finally {\r\n      setApproveConfirmationDialogOpen(false);\r\n      setSelectedRequest(null);\r\n    }\r\n  };\r\n\r\n  const handleOpenRejectDialog = (request) => {\r\n    setSelectedRequest(request);\r\n    rejectForm.reset({ rejectionReason: '' });\r\n    setRejectDialogOpen(true);\r\n  };\r\n\r\n  const handleRejectRequest = async (data) => {\r\n    if (!selectedRequest) return;\r\n    \r\n    try {\r\n      const authAxios = apiClient;\r\n      \r\n      // Extract the rejection reason, providing an empty string if null or undefined\r\n      const rejectionReason = data.rejectionReason || '';\r\n      \r\n      // Debug logging to identify the correct ID field\r\n      // Use requestId which is the correct field from the backend DTO\r\n      const requestId = selectedRequest.requestId;\r\n      \r\n      if (!requestId) {\r\n        console.error('Error: Request ID is undefined or null', selectedRequest);\r\n        errorAlert('Error: Cannot reject request - missing request ID');\r\n        return;\r\n      }\r\n      \r\n      console.log(`Rejecting request ID: ${requestId} with reason: ${rejectionReason || '(No reason provided)'}`);\r\n      \r\n      // The backend controller expects \"reason\" as the parameter name\r\n      const response = await authAxios.put(`/medication-requests/${requestId}/reject`, { \r\n        reason: rejectionReason\r\n      });\r\n      \r\n      // Show a success message to the user\r\n      successAlert('Medication request rejected successfully');\r\n      \r\n      // Update the UI by fetching the latest data\r\n      fetchPendingMedicationRequests();\r\n    } catch (error) {\r\n      console.error('Error rejecting request:', error);\r\n      \r\n      // Detailed error logging\r\n      if (error.response) {\r\n        console.error('Response status:', error.response.status);\r\n        console.error('Response data:', error.response.data);\r\n        console.error('Request URL:', error.config.url);\r\n        console.error('Request payload:', error.config.data);\r\n        \r\n        // Show error message to the user\r\n        errorAlert(`Error rejecting request: ${error.response.data?.error || error.message}`);\r\n      } else {\r\n        errorAlert(`Error rejecting request: ${error.message}`);\r\n      }\r\n    } finally {\r\n      setRejectDialogOpen(false);\r\n      setSelectedRequest(null);\r\n    }\r\n  };\r\n\r\n  const handleOpenAdministerDialog = (request) => {\r\n    setSelectedRequest(request);\r\n    // Pre-fill if possible, e.g., medication name, dosage from request for display\r\n    recordAdministrationForm.reset({ administrationTime: new Date(), notes: '' });\r\n    setAdministerDialogOpen(true);\r\n  };\r\n\r\n  const handleAdministerMedication = async (data) => {\r\n    if (!selectedRequest) return;\r\n    \r\n    // Use requestId which is the correct field from the backend DTO\r\n    const requestId = selectedRequest.requestId;\r\n    \r\n    if (!requestId) {\r\n      console.error('Error: Request ID is undefined or null', selectedRequest);\r\n      errorAlert('Error: Cannot administer medication - missing request ID');\r\n      return;\r\n    }\r\n    \r\n    const administrationData = {\r\n      administrationTime: data.administrationTime.toISOString(), // Ensure correct format for backend\r\n      notes: data.notes,\r\n      // Use the field name expected by the backend controller\r\n      administrationNotes: data.notes\r\n    };\r\n    try {\r\n      const authAxios = apiClient;\r\n      await authAxios.post(`/medication-requests/${requestId}/administer`, administrationData);\r\n      \r\n      // Add success notification\r\n      successAlert('Medication administered successfully');\r\n      \r\n      fetchPendingMedicationRequests(); // Refetch to update the UI\r\n    } catch (error) {\r\n      console.error('Error administering medication:', error);\r\n      // More detailed error logging for debugging\r\n      if (error.response) {\r\n        console.error('Response status:', error.response.status);\r\n        console.error('Response data:', error.response.data);\r\n        console.error('Request URL:', error.config.url);\r\n        console.error('Request payload:', error.config.data);\r\n        \r\n        // Show error message to the user\r\n        errorAlert(`Error administering medication: ${error.response.data?.error || error.message}`);\r\n      } else {\r\n        errorAlert(`Error administering medication: ${error.message}`);\r\n      }\r\n    } finally {\r\n      setAdministerDialogOpen(false);\r\n      setSelectedRequest(null);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  const formatDateTime = (dateTimeString) => {\r\n    if (!dateTimeString) return 'N/A';\r\n    return new Date(dateTimeString).toLocaleString();\r\n  };\r\n\r\n\r\n  // Function to test medication API connection\r\n  const testMedicationAPI = async () => {\r\n    try {\r\n      setAlertMessage({\r\n        message: 'Testing medication inventory API connection...',\r\n        severity: 'info',\r\n        show: true\r\n      });\r\n      \r\n      const authAxios = apiClient;\r\n      \r\n      // Add debugging headers\r\n      authAxios.defaults.headers.common['X-Debug'] = 'TestMedicationAPI';\r\n      // Test GET endpoint\r\n      const getResponse = await authAxios.get('/medications/inventory');\r\n      // Test POST endpoint with a test medication (if there's no data)\r\n      if (Array.isArray(getResponse.data) && getResponse.data.length === 0) {\r\n        const testMedication = {\r\n          medicationName: 'Test Medication API',\r\n          dosage: '10mg',\r\n          form: 'Tablet',\r\n          batchNumber: 'TEST123',\r\n          expiryDate: new Date(new Date().getFullYear() + 1, 0, 1), // Next year\r\n          quantity: 50,\r\n          prescriptionRequired: false,\r\n          manufacturer: 'Test Manufacturer',\r\n          storageLocation: 'Test Location',\r\n          unitCost: 10.0\r\n        };\r\n        \r\n        const postResponse = await authAxios.post('/medications/inventory', testMedication);\r\n        }\r\n      \r\n      // Show success message\r\n      setAlertMessage({\r\n        message: 'Medication API connection successful! Refreshing data...',\r\n        severity: 'success',\r\n        show: true\r\n      });\r\n      \r\n      // Refresh the medication data\r\n      fetchMedications();\r\n      \r\n    } catch (error) {\r\n      console.error('API test error:', error);\r\n      \r\n      // Log detailed error information\r\n      if (error.response) {\r\n        console.error('Response status:', error.response.status);\r\n        console.error('Response data:', error.response.data);\r\n        console.error('Request URL:', error.config.url);\r\n        console.error('Request headers:', error.config.headers);\r\n        console.error('Request data:', error.config.data);\r\n      }\r\n      \r\n      setAlertMessage({\r\n        message: `API test failed: ${error.response?.data?.error || error.message}`,\r\n        severity: 'error',\r\n        show: true\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    // <LocalizationProvider dateAdapter={AdapterDateFns}> // Needed if using MUI X Date/Time Pickers\r\n    <Box sx={{ p: 3 }}>\r\n      <PageHeader title=\"Medication Management\" icon={<PharmacyIcon />} />\r\n      <Tabs value={activeTab} onChange={handleTabChange} indicatorColor=\"primary\" textColor=\"primary\" sx={{ mb: 3 }}>\r\n        <Tab label=\"Pending Requests\" icon={<AssignmentIcon />} />\r\n        <Tab label=\"Medication Inventory\" icon={<InventoryIcon />} />\r\n        {/* <Tab label=\"Medication Administration Log\" icon={<ScheduleIcon />} /> */}\r\n        <Tab label=\"Low Stock Alerts\" icon={<WarningIcon />} badgeContent={lowStockAlerts.length} color=\"error\" />\r\n        <Tab label=\"Medical Events\" icon={<MedicalEventIcon />} />\r\n      </Tabs>\r\n\r\n      {/* Tab 0: Pending Medication Requests */}\r\n      {activeTab === 0 && (\r\n        <Card>\r\n          <CardHeader title=\"Pending Medication Requests\" />\r\n          <CardContent>\r\n            {isLoadingPendingRequests && <CircularProgress />}\r\n            {pendingRequestsError && <Alert severity=\"error\">{pendingRequestsError}</Alert>}\r\n            {!isLoadingPendingRequests && !pendingRequestsError && (\r\n              <TableContainer component={Paper}>\r\n                <Table stickyHeader>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Student Full Name</TableCell>\r\n                      <TableCell>Student Code</TableCell>\r\n                      <TableCell>Medication</TableCell>\r\n                      <TableCell>Dosage</TableCell>\r\n                      <TableCell>Frequency</TableCell>\r\n                      <TableCell>Start Date</TableCell>\r\n                      <TableCell>End Date</TableCell>\r\n                      <TableCell>Status</TableCell>\r\n                      <TableCell>Requested By</TableCell>\r\n                      <TableCell>Actions</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {pendingRequests.length === 0 && (\r\n                      <TableRow>\r\n                        <TableCell colSpan={10} align=\"center\">No pending requests.</TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                    {pendingRequests.map((request) => (\r\n                      <TableRow key={request.id}>\r\n                        <TableCell>{request.studentFullName}</TableCell>\r\n                        <TableCell>{request.studentCode}</TableCell>\r\n                        <TableCell>{request.medicationName}</TableCell>\r\n                        <TableCell>{request.dosage}</TableCell>\r\n                        <TableCell>{request.frequency}</TableCell>\r\n                        <TableCell>{formatDate(request.startDate)}</TableCell>\r\n                        <TableCell>{formatDate(request.endDate)}</TableCell>\r\n                        <TableCell>\r\n                          <Chip \r\n                            label={request.status} \r\n                            color={request.status === 'PENDING' || request.status === 'PENDING_APPROVAL' ? 'warning' : \r\n                                 request.status === 'APPROVED' ? 'success' :\r\n                                 request.status === 'REJECTED' ? 'error' : 'default'} \r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>{request.parentFullName}</TableCell>\r\n                        <TableCell>\r\n                          <Box sx={{ display: 'flex', gap: 1 }}>\r\n                            <Tooltip title=\"View Details\">\r\n                              <IconButton onClick={() => handleViewDetails(request)} size=\"small\"><ViewIcon /></IconButton>\r\n                            </Tooltip>\r\n                            {(request.status === 'PENDING_APPROVAL' || request.status === 'PENDING') && (\r\n                              <>\r\n                                <Tooltip title=\"Approve\">\r\n                                  <IconButton \r\n                                    onClick={() => handleOpenApproveConfirmation(request)} \r\n                                    size=\"small\" \r\n                                    color=\"success\"\r\n                                    aria-label=\"Approve medication request\"\r\n                                  >\r\n                                    <ApproveIcon />\r\n                                  </IconButton>\r\n                                </Tooltip>\r\n                                <Tooltip title=\"Reject\">\r\n                                  <IconButton \r\n                                    onClick={() => handleOpenRejectDialog(request)} \r\n                                    size=\"small\" \r\n                                    color=\"error\"\r\n                                    aria-label=\"Reject medication request\"\r\n                                  >\r\n                                    <RejectIcon />\r\n                                  </IconButton>\r\n                                </Tooltip>\r\n                              </>\r\n                            )}\r\n                            {request.status === 'APPROVED' && ( // Assuming 'APPROVED' means ready to administer\r\n                              <Tooltip title=\"Administer\">\r\n                                <IconButton \r\n                                  onClick={() => handleOpenAdministerDialog(request)} \r\n                                  size=\"small\" \r\n                                  color=\"primary\"\r\n                                  aria-label=\"Administer medication\"\r\n                                >\r\n                                  <AdministerIcon />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                            )}\r\n                          </Box>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Tab 1: Medication Inventory (Existing Content) */}\r\n      {activeTab === 1 && (\r\n        <Card>\r\n          <CardHeader\r\n            title=\"Medication Inventory\"\r\n            action={\r\n              <Box sx={{ display: 'flex', gap: 1 }}>\r\n                <Button variant=\"outlined\" onClick={testMedicationAPI}>\r\n                  Test API Connection\r\n                </Button>\r\n                <Button variant=\"contained\" startIcon={<AddIcon />} onClick={handleAddMedication}>\r\n                  Add Medication\r\n                </Button>\r\n              </Box>\r\n            }\r\n          />\r\n          <CardContent>\r\n            {/* Success/Error Alert */}\r\n            {alertMessage.show && (\r\n              <Alert \r\n                severity={alertMessage.severity} \r\n                sx={{ mb: 2 }}\r\n                onClose={() => setAlertMessage(prev => ({...prev, show: false}))}\r\n              >\r\n                {alertMessage.message}\r\n              </Alert>\r\n            )}\r\n            \r\n            {/* Search bar and filters for inventory */}\r\n            <Grid container spacing={2} sx={{ mb: 2 }}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  placeholder=\"Search medications...\"\r\n                  size=\"small\"\r\n                  InputProps={{\r\n                    startAdornment: <SearchIcon color=\"action\" sx={{ mr: 1 }} />\r\n                  }}\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            \r\n            <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Name</TableCell>\r\n                      <TableCell>Form</TableCell>\r\n                      <TableCell>Dosage</TableCell>\r\n                      <TableCell>Quantity</TableCell>\r\n                      <TableCell>Expiry</TableCell>\r\n                      <TableCell>Actions</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {medications.length === 0 ? (\r\n                      <TableRow>\r\n                        <TableCell colSpan={6} align=\"center\">No medications in inventory.</TableCell>\r\n                      </TableRow>\r\n                    ) : (\r\n                      medications.map((med) => (\r\n                        <TableRow key={med.medicationId || med.id}>\r\n                          <TableCell>{med.medicationName}</TableCell>\r\n                          <TableCell>{med.form || '-'}</TableCell>\r\n                          <TableCell>{med.dosage}</TableCell>\r\n                          <TableCell>\r\n                            <Chip \r\n                              label={med.quantity} \r\n                              color={med.quantity < 20 ? 'warning' : 'default'} \r\n                              size=\"small\"\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>{formatDate(med.expiryDate)}</TableCell>\r\n                          <TableCell>\r\n                            <Box sx={{ display: 'flex', gap: 1 }}>\r\n                              <Tooltip title=\"Edit\">\r\n                                <IconButton onClick={() => handleEditMedication(med)} size=\"small\">\r\n                                  <EditIcon />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                              {/* Add delete button if needed */}\r\n                            </Box>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Tab 2: Medication Administration Log (Disabled) */}\r\n      {/* {activeTab === 2 && (\r\n        <Card>\r\n          <CardHeader\r\n            title=\"Direct Medication Administration Log\"\r\n            action={<Button variant=\"contained\" startIcon={<AddIcon />} onClick={handleAddAdministration}>Log Administration</Button>}\r\n          />\r\n          <CardContent>\r\n            <Typography>Direct medication administration log UI goes here.</Typography>\r\n            <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Student</TableCell>\r\n                      <TableCell>Medication</TableCell>\r\n                      <TableCell>Dosage</TableCell>\r\n                      <TableCell>Time</TableCell>\r\n                      <TableCell>Notes</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {administrations.map((adminLog) => ( \r\n                      <TableRow key={adminLog.id}>\r\n                        <TableCell>{adminLog.studentName || adminLog.studentId}</TableCell>\r\n                        <TableCell>{adminLog.medicationName}</TableCell>\r\n                        <TableCell>{adminLog.dosage}</TableCell>\r\n                        <TableCell>{adminLog.administrationTime.map(t => formatDateTime(t)).join(', ')}</TableCell>\r\n                        <TableCell>{adminLog.notes}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n          </CardContent>\r\n        </Card>\r\n      )} */}\r\n\r\n      {/* Tab 2: Low Stock Alerts (Updated index) */}\r\n      {activeTab === 2 && (\r\n        <Card>\r\n          <CardHeader title=\"Low Stock Alerts\" />\r\n          <CardContent>\r\n            {lowStockAlerts.length === 0 ? (\r\n              <Typography>No low stock alerts.</Typography>\r\n            ) : (\r\n              <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Medication Name</TableCell>\r\n                      <TableCell>Quantity Left</TableCell>\r\n                      <TableCell>Storage Location</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {lowStockAlerts.map(med => (\r\n                      <TableRow key={med.id}>\r\n                        <TableCell>{med.medicationName}</TableCell>\r\n                        <TableCell>{med.quantity}</TableCell>\r\n                        <TableCell>{med.storageLocation}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Tab 3: Medical Events (Updated index) */}\r\n      {activeTab === 3 && (\r\n        <Card>\r\n          <CardHeader title=\"Medical Event Management\" />\r\n          <CardContent>\r\n            <MedicalEventTab />\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Dialog for Adding/Editing Medication Inventory */}\r\n      <Dialog open={medicationDialogOpen} onClose={() => setMedicationDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>{selectedMedication ? 'Edit Medication' : 'Add New Medication'} to Inventory</DialogTitle>\r\n        <form onSubmit={medicationForm.handleSubmit(handleMedicationFormSubmit)}>\r\n          <DialogContent>\r\n            {/* Simplified form fields for brevity, ensure all fields from schema are covered */}\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Controller name=\"medicationName\" control={medicationForm.control} render={({ field, fieldState }) => <TextField {...field} label=\"Medication Name\" fullWidth required error={!!fieldState.error} helperText={fieldState.error?.message} />} />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Controller name=\"dosage\" control={medicationForm.control} render={({ field, fieldState }) => <TextField {...field} label=\"Dosage (e.g., 500mg)\" fullWidth required error={!!fieldState.error} helperText={fieldState.error?.message} />} />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Controller name=\"form\" control={medicationForm.control} render={({ field, fieldState }) => <TextField {...field} label=\"Form (e.g., Tablet, Syrup)\" fullWidth required error={!!fieldState.error} helperText={fieldState.error?.message} />} />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Controller name=\"quantity\" control={medicationForm.control} render={({ field, fieldState }) => <TextField {...field} label=\"Quantity\" type=\"number\" fullWidth required error={!!fieldState.error} helperText={fieldState.error?.message} />} />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Controller \r\n                  name=\"expiryDate\" \r\n                  control={medicationForm.control} \r\n                  render={({ field, fieldState }) => (\r\n                    <TextField \r\n                      {...field} \r\n                      label=\"Expiry Date\" \r\n                      type=\"date\" \r\n                      InputLabelProps={{ shrink: true }} \r\n                      fullWidth \r\n                      required \r\n                      error={!!fieldState.error} \r\n                      helperText={fieldState.error?.message || \"Format: YYYY-MM-DD\"}\r\n                    />\r\n                  )} \r\n                />\r\n              </Grid>\r\n              {/* Add other fields from medicationSchema as needed: genericName, manufacturer, batchNumber, unitCost, storageLocation, prescriptionRequired, contraindications, sideEffects, instructions */}\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setMedicationDialogOpen(false)}>Cancel</Button>\r\n            <Button type=\"submit\" variant=\"contained\">Save</Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n\r\n      {/* Dialog for Logging Direct Medication Administration */}\r\n      <Dialog open={administrationDialogOpen} onClose={() => setAdministrationDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Log Direct Medication Administration</DialogTitle>\r\n        <form onSubmit={administrationForm.handleSubmit(handleAdministrationFormSubmit)}>\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n               <Grid item xs={12}>\r\n                {/* Autocomplete for student selection might be better here */}\r\n                <Controller name=\"studentCode\" control={administrationForm.control} render={({ field, fieldState }) => (\r\n                    <Autocomplete\r\n                        options={students}\r\n                        getOptionLabel={(option) => `${option.name} (${option.studentCode})`}\r\n                        onChange={(e, newValue) => field.onChange(newValue ? newValue.studentCode : '')}\r\n                        renderInput={(params) => <TextField {...params} label=\"Student\" fullWidth required error={!!fieldState.error} helperText={fieldState.error?.message} />}\r\n                    />\r\n                )} />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller name=\"medicationName\" control={administrationForm.control} render={({ field, fieldState }) => <TextField {...field} label=\"Medication Name\" fullWidth required error={!!fieldState.error} helperText={fieldState.error?.message} />} />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller name=\"dosage\" control={administrationForm.control} render={({ field, fieldState }) => <TextField {...field} label=\"Dosage Administered\" fullWidth required error={!!fieldState.error} helperText={fieldState.error?.message} />} />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                 <Controller name=\"administrationTime\" control={administrationForm.control} render={({ field, fieldState }) => <TextField {...field} label=\"Administration Time\" type=\"datetime-local\" InputLabelProps={{ shrink: true }} fullWidth required error={!!fieldState.error} helperText={fieldState.error?.message} value={field.value ? new Date(field.value).toISOString().slice(0, 16) : ''} onChange={(e) => field.onChange(new Date(e.target.value))} />} />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller name=\"notes\" control={administrationForm.control} render={({ field, fieldState }) => <TextField {...field} label=\"Notes\" multiline rows={3} fullWidth error={!!fieldState.error} helperText={fieldState.error?.message} />} />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setAdministrationDialogOpen(false)}>Cancel</Button>\r\n            <Button type=\"submit\" variant=\"contained\">Log Administration</Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n\r\n      {/* Dialog to View Medication Request Details */}\r\n      <Dialog open={viewDetailsDialogOpen} onClose={() => setViewDetailsDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>Medication Request Details</DialogTitle>\r\n        {selectedRequest && (\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}><Typography variant=\"subtitle2\">Student Name:</Typography><Typography>{selectedRequest.studentFullName}</Typography></Grid>\r\n              <Grid item xs={12} sm={6}><Typography variant=\"subtitle2\">Student Code:</Typography><Typography>{selectedRequest.studentCode}</Typography></Grid>\r\n              <Grid item xs={12} sm={6}><Typography variant=\"subtitle2\">Medication:</Typography><Typography>{selectedRequest.medicationName}</Typography></Grid>\r\n              <Grid item xs={12} sm={6}><Typography variant=\"subtitle2\">Dosage:</Typography><Typography>{selectedRequest.dosage}</Typography></Grid>\r\n              <Grid item xs={12} sm={6}><Typography variant=\"subtitle2\">Frequency:</Typography><Typography>{selectedRequest.frequency}</Typography></Grid>\r\n              <Grid item xs={12} sm={6}><Typography variant=\"subtitle2\">Status:</Typography>\r\n                <Chip \r\n                  label={selectedRequest.status} \r\n                  color={\r\n                    selectedRequest.status === 'PENDING' || selectedRequest.status === 'PENDING_APPROVAL' ? 'warning' : \r\n                    selectedRequest.status === 'APPROVED' ? 'success' :\r\n                    selectedRequest.status === 'REJECTED' ? 'error' : 'default'\r\n                  } \r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}><Typography variant=\"subtitle2\">Start Date:</Typography><Typography>{formatDate(selectedRequest.startDate)}</Typography></Grid>\r\n              <Grid item xs={12} sm={6}><Typography variant=\"subtitle2\">End Date:</Typography><Typography>{formatDate(selectedRequest.endDate)}</Typography></Grid>\r\n              <Grid item xs={12}><Typography variant=\"subtitle2\">Reason for Medication:</Typography><Typography>{selectedRequest.reason || 'N/A'}</Typography></Grid>\r\n              <Grid item xs={12}><Typography variant=\"subtitle2\">Parent's Notes:</Typography><Typography>{selectedRequest.notes || 'N/A'}</Typography></Grid>\r\n              <Grid item xs={12} sm={6}><Typography variant=\"subtitle2\">Requested By:</Typography><Typography>{selectedRequest.parentFullName}</Typography></Grid>\r\n              <Grid item xs={12} sm={6}><Typography variant=\"subtitle2\">Requested At:</Typography><Typography>{formatDateTime(selectedRequest.requestedAt)}</Typography></Grid>\r\n              {selectedRequest.approvedByName && (<Grid item xs={12} sm={6}><Typography variant=\"subtitle2\">Approved By:</Typography><Typography>{selectedRequest.approvedByName}</Typography></Grid>)}\r\n              {selectedRequest.approvedAt && (<Grid item xs={12} sm={6}><Typography variant=\"subtitle2\">Approved At:</Typography><Typography>{formatDateTime(selectedRequest.approvedAt)}</Typography></Grid>)}\r\n              {selectedRequest.rejectionReason && (<Grid item xs={12}><Typography variant=\"subtitle2\">Rejection Reason:</Typography><Typography>{selectedRequest.rejectionReason}</Typography></Grid>)}\r\n              {selectedRequest.administrationRecords && selectedRequest.administrationRecords.length > 0 && (\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"subtitle1\" sx={{mt: 2}}>Administration History:</Typography>\r\n                  <TableContainer component={Paper} sx={{mt:1}}>\r\n                    <Table size=\"small\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Administered At</TableCell>\r\n                          <TableCell>Administered By</TableCell>\r\n                          <TableCell>Notes</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {selectedRequest.administrationRecords.map(record => (\r\n                          <TableRow key={record.id}>\r\n                            <TableCell>{formatDateTime(record.administrationTime)}</TableCell>\r\n                            <TableCell>{record.administeredByNurseName}</TableCell>\r\n                            <TableCell>{record.notes || '-'}</TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </DialogContent>\r\n        )}\r\n        <DialogActions>\r\n          <Button onClick={() => setViewDetailsDialogOpen(false)}>Close</Button>\r\n          {selectedRequest && (selectedRequest.status === 'PENDING' || selectedRequest.status === 'PENDING_APPROVAL') && (\r\n            <>\r\n              <Button \r\n                onClick={() => {\r\n                  setViewDetailsDialogOpen(false);\r\n                  handleOpenApproveConfirmation(selectedRequest);\r\n                }}\r\n                color=\"success\" \r\n                variant=\"contained\" \r\n                startIcon={<ApproveIcon />}\r\n              >\r\n                Approve\r\n              </Button>\r\n              <Button \r\n                onClick={() => {\r\n                  setViewDetailsDialogOpen(false);\r\n                  handleOpenRejectDialog(selectedRequest);\r\n                }}\r\n                color=\"error\" \r\n                variant=\"contained\" \r\n                startIcon={<RejectIcon />}\r\n              >\r\n                Reject\r\n              </Button>\r\n            </>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Confirmation Dialog for Approving Request */}\r\n      <Dialog open={approveConfirmationDialogOpen} onClose={() => setApproveConfirmationDialogOpen(false)}>\r\n        <DialogTitle>Confirm Medication Request Approval</DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={2} sx={{ mt: 1 }}>\r\n            <Grid item xs={12}>\r\n              <DialogContentText>\r\n                Are you sure you want to approve this medication request?\r\n              </DialogContentText>\r\n            </Grid>\r\n            {selectedRequest && (\r\n              <>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Typography variant=\"subtitle2\">Student:</Typography>\r\n                  <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>{selectedRequest.studentFullName}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Typography variant=\"subtitle2\">Requested By:</Typography>\r\n                  <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>{selectedRequest.parentFullName}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Typography variant=\"subtitle2\">Medication:</Typography>\r\n                  <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>{selectedRequest.medicationName}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Typography variant=\"subtitle2\">Dosage:</Typography>\r\n                  <Typography variant=\"body1\">{selectedRequest.dosage}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Typography variant=\"subtitle2\">Schedule:</Typography>\r\n                  <Typography variant=\"body1\">{selectedRequest.frequency}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Typography variant=\"subtitle2\">Duration:</Typography>\r\n                  <Typography variant=\"body1\">{formatDate(selectedRequest.startDate)} - {formatDate(selectedRequest.endDate)}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Alert severity=\"info\" sx={{ mt: 2 }}>\r\n                    By approving this request, you confirm that the medication can be safely administered to the student according to school policy.\r\n                  </Alert>\r\n                </Grid>\r\n              </>\r\n            )}\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setApproveConfirmationDialogOpen(false)}>Cancel</Button>\r\n          <Button \r\n            onClick={handleApproveRequest} \r\n            color=\"success\" \r\n            variant=\"contained\" \r\n            startIcon={<ApproveIcon />}\r\n            aria-label=\"Approve medication request\"\r\n          >\r\n            Approve Request\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Dialog for Rejecting Medication Request */}\r\n      <Dialog open={rejectDialogOpen} onClose={() => setRejectDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Reject Medication Request</DialogTitle>\r\n        <form onSubmit={rejectForm.handleSubmit(handleRejectRequest)}>\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography variant=\"subtitle2\">Student:</Typography>\r\n                <Typography variant=\"body1\">{selectedRequest?.studentFullName}</Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography variant=\"subtitle2\">Requested By:</Typography>\r\n                <Typography variant=\"body1\">{selectedRequest?.parentFullName}</Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"subtitle2\">Medication:</Typography>\r\n                <Typography variant=\"body1\">{selectedRequest?.medicationName} ({selectedRequest?.dosage})</Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Alert severity=\"info\" sx={{ mb: 2 }}>\r\n                  You can provide a reason for rejecting this medication request.\r\n                  The parent will receive this information if provided.\r\n                </Alert>\r\n                <Controller\r\n                  name=\"rejectionReason\"\r\n                  control={rejectForm.control}\r\n                  render={({ field, fieldState }) => (\r\n                    <TextField\r\n                      {...field}\r\n                      label=\"Reason for Rejection (Optional)\"\r\n                      multiline\r\n                      rows={3}\r\n                      fullWidth\r\n                      autoFocus\r\n                      error={!!fieldState.error}\r\n                      helperText={fieldState.error?.message || 'Leave blank if no reason needed'}\r\n                      placeholder=\"Example: Doctor's prescription required\"\r\n                      onChange={(e) => {\r\n                        field.onChange(e);\r\n                        // Always clear any validation errors as this is optional\r\n                        rejectForm.clearErrors('rejectionReason');\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setRejectDialogOpen(false)}>Cancel</Button>\r\n            <Button \r\n              type=\"submit\" \r\n              variant=\"contained\" \r\n              color=\"error\" \r\n              startIcon={<RejectIcon />}\r\n              aria-label=\"Submit rejection with reason\"\r\n              // Never disable the button since rejection reason is optional\r\n            >\r\n              Reject Request\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n\r\n      {/* Dialog for Administering Medication for a Request */}\r\n      <Dialog open={administerDialogOpen} onClose={() => setAdministerDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Administer Medication</DialogTitle>\r\n        <form onSubmit={recordAdministrationForm.handleSubmit(handleAdministerMedication)}>\r\n          <DialogContent>\r\n            <Grid container spacing={2} sx={{ mb: 2 }}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"subtitle2\">Student:</Typography>\r\n                <Typography>{selectedRequest?.studentFullName}</Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"subtitle2\">Medication:</Typography>\r\n                <Typography>{selectedRequest?.medicationName} ({selectedRequest?.dosage})</Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"subtitle2\">Frequency:</Typography>\r\n                <Typography>{selectedRequest?.frequency}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            \r\n            <Controller\r\n              name=\"administrationTime\"\r\n              control={recordAdministrationForm.control}\r\n              render={({ field, fieldState }) => (\r\n                <TextField\r\n                  {...field}\r\n                  label=\"Administration Time\"\r\n                  type=\"datetime-local\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  required\r\n                  error={!!fieldState.error}\r\n                  helperText={fieldState.error?.message}\r\n                  // Ensure value is in 'yyyy-MM-ddThh:mm' format for the input\r\n                  value={field.value ? new Date(field.value).toISOString().slice(0, 16) : ''}\r\n                  onChange={(e) => field.onChange(new Date(e.target.value))}\r\n                />\r\n              )}\r\n            />\r\n            <Controller\r\n              name=\"notes\"\r\n              control={recordAdministrationForm.control}\r\n              render={({ field, fieldState }) => (\r\n                <TextField\r\n                  {...field}\r\n                  label=\"Administration Notes\"\r\n                  multiline\r\n                  rows={3}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  error={!!fieldState.error}\r\n                  helperText={fieldState.error?.message}\r\n                  placeholder=\"Optional notes about this medication administration\"\r\n                />\r\n              )}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setAdministerDialogOpen(false)}>Cancel</Button>\r\n            <Button \r\n              type=\"submit\" \r\n              variant=\"contained\" \r\n              color=\"primary\"\r\n              startIcon={<AdministerIcon />}\r\n            >\r\n              Record Administration\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n\r\n    </Box>\r\n    // </LocalizationProvider>\r\n  );\r\n}\r\n\r\nexport default MedicationManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}