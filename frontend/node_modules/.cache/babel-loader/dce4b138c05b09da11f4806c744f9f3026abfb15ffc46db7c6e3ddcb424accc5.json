{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useForm,useFieldArray}from'react-hook-form';import{yupResolver}from'@hookform/resolvers/yup';import*as yup from'yup';import{useAlert}from'../../hooks/useAlert';// Import useAlert hook\nimport{Card,CardContent,CardHeader,TextField,Button,Typography,Grid,Chip,Select,MenuItem,FormControl,InputLabel,Box,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,IconButton,Dialog,DialogTitle,DialogContent,DialogActions,Alert,Tab,Tabs,Badge,Tooltip,Autocomplete,Checkbox,FormControlLabel,LinearProgress,Stepper,Step,StepLabel,Pagination,TablePagination}from'@mui/material';import{Add as AddIcon,Edit as EditIcon,Delete as DeleteIcon,Search as SearchIcon,FilterList as FilterIcon,Vaccines as VaccinesIcon,Schedule as ScheduleIcon,Group as GroupIcon,Assignment as AssignmentIcon,CheckCircle as CheckCircleIcon,Cancel as CancelIcon,EventAvailable as EventAvailableIcon,Timeline as TimelineIcon,BarChart as BarChartIcon}from'@mui/icons-material';import{getAllVaccinationRecords,getVaccinationStatistics,getVaccinationRecordsByStatus,createVaccinationRecord,updateVaccinationRecord,deleteVaccinationRecord,getAllStudents}from'../../utils/api';import PageHeader from'../../components/PageHeader';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const vaccinationUpdateSchema=yup.object().shape({nextDueDate:yup.date().required('Next due date is required'),dose:yup.string().required('Dose is required'),vaccineName:yup.string().required('Vaccine name is required'),reactions:yup.array().of(yup.string()).min(1,'At least one reaction status is required'),notes:yup.string().required('Notes are required'),vaccinationStatus:yup.string().required('Status is required')});const vaccinationRecordSchema=yup.object().shape({studentId:yup.string().required('Student is required'),vaccineType:yup.string().required('Vaccine type is required'),vaccineName:yup.string().required('Vaccine name is required'),administeredDate:yup.date().required('Administration date is required'),administeredBy:yup.string().required('Administered by is required'),dose:yup.string().required('Dose is required'),nextDueDate:yup.date(),reactions:yup.array().of(yup.string()),notes:yup.string(),consentGiven:yup.boolean().oneOf([true],'Parent consent is required')});const vaccinationCampaignSchema=yup.object().shape({campaignName:yup.string().required('Campaign name is required'),vaccineType:yup.string().required('Vaccine type is required'),targetGrades:yup.array().of(yup.number()).min(1,'At least one grade must be selected'),startDate:yup.date().required('Start date is required'),endDate:yup.date().required('End date is required'),venue:yup.string().required('Venue is required'),provider:yup.string().required('Healthcare provider is required'),description:yup.string()});function VaccinationManagement(){var _recordForm$formState2,_recordForm$formState3,_recordForm$formState4,_campaignForm$formSta,_updateForm$formState,_updateForm$formState2,_updateForm$formState3,_updateForm$formState4,_updateForm$getValues,_updateForm$formState5;const{successAlert,errorAlert,deleteConfirm}=useAlert();// Initialize useAlert hook\n// Administration site options\nconst administrationSiteOptions=['Left Arm','Right Arm','Left Thigh','Right Thigh','Left Buttock','Right Buttock','Oral','Nasal','Other'];const[activeTab,setActiveTab]=useState(0);const[recordDialogOpen,setRecordDialogOpen]=useState(false);const[campaignDialogOpen,setCampaignDialogOpen]=useState(false);const[updateDialogOpen,setUpdateDialogOpen]=useState(false);const[selectedRecord,setSelectedRecord]=useState(null);const[selectedCampaign,setSelectedCampaign]=useState(null);const[selectedUpdateRecord,setSelectedUpdateRecord]=useState(null);const[vaccinationRecords,setVaccinationRecords]=useState([]);const[campaigns,setCampaigns]=useState([]);const[students,setStudents]=useState([]);const[vaccines,setVaccines]=useState([]);const[gradeLevels,setGradeLevels]=useState([]);// Add state for grade levels\nconst[searchTerm,setSearchTerm]=useState('');const[filterStatus,setFilterStatus]=useState('all');const[filterGrade,setFilterGrade]=useState('all');const[statistics,setStatistics]=useState({totalVaccinations:0,completedCount:0,scheduledCount:0,missedCount:0,activeCampaigns:0,totalStudents:0,studentsWithVaccinations:0,vaccinationRate:0,studentCoverage:0});// Pagination state\nconst[page,setPage]=useState(0);const recordForm=useForm({resolver:yupResolver(vaccinationRecordSchema),defaultValues:{reactions:[],consentGiven:false}});const campaignForm=useForm({resolver:yupResolver(vaccinationCampaignSchema),defaultValues:{targetGrades:[]}});const updateForm=useForm({resolver:yupResolver(vaccinationUpdateSchema),defaultValues:{reactions:[],vaccinationStatus:'COMPLETED',dose:'',notes:'',nextDueDate:''}});const{fields:reactionFields,append:appendReaction,remove:removeReaction}=useFieldArray({control:recordForm.control,name:'reactions'});const{fields:updateReactionFields,append:appendUpdateReaction,remove:removeUpdateReaction}=useFieldArray({control:updateForm.control,name:'reactions'});useEffect(()=>{// Load data in proper order - students first, then vaccination records\nconst loadData=async()=>{await fetchStudents();await fetchVaccines();await fetchGradeLevels();await fetchCampaigns();await fetchStatistics();};loadData();},[]);// Refetch vaccination records when students are updated to ensure proper name mapping\nuseEffect(()=>{if(students.length>0){const loadVaccinationData=async()=>{await fetchVaccinationRecords();};loadVaccinationData();}},[students.length]);// Use students.length instead of students array to prevent infinite loop\nconst fetchVaccinationRecords=async()=>{try{const records=await getAllVaccinationRecords();if(records&&Array.isArray(records)){// Transform API data to match UI format and handle grouped vaccines\nconst transformedRecords=records.map(record=>{var _record$student3,_record$student4,_record$student5,_record$student5$grad,_record$healthEvent,_record$healthEvent2,_record$healthEvent3,_record$healthEvent4,_record$vaccinationSt;// Find matching student from students list for consistent display\nconst matchingStudent=students.find(s=>{var _record$student,_s$originalData,_record$student2;return s.id===((_record$student=record.student)===null||_record$student===void 0?void 0:_record$student.studentCode)||((_s$originalData=s.originalData)===null||_s$originalData===void 0?void 0:_s$originalData.studentId)===((_record$student2=record.student)===null||_record$student2===void 0?void 0:_record$student2.studentId);});return{id:record.vaccinationRecordId,studentId:((_record$student3=record.student)===null||_record$student3===void 0?void 0:_record$student3.studentCode)||'Unknown ID',studentName:(matchingStudent===null||matchingStudent===void 0?void 0:matchingStudent.name)||((_record$student4=record.student)===null||_record$student4===void 0?void 0:_record$student4.fullName)||'Unknown Student',grade:(matchingStudent===null||matchingStudent===void 0?void 0:matchingStudent.grade)||((_record$student5=record.student)===null||_record$student5===void 0?void 0:(_record$student5$grad=_record$student5.gradeLevel)===null||_record$student5$grad===void 0?void 0:_record$student5$grad.gradeName)||'N/A',vaccineType:((_record$healthEvent=record.healthEvent)===null||_record$healthEvent===void 0?void 0:_record$healthEvent.eventType)||'VACCINATION',// Handle both grouped vaccine names and individual vaccine name\nvaccineNames:record.vaccineNames||[],// Array of vaccine names for this event\nvaccineName:record.vaccineNames&&record.vaccineNames.length>0?record.vaccineNames.join(', '):record.vaccineName||((_record$healthEvent2=record.healthEvent)===null||_record$healthEvent2===void 0?void 0:_record$healthEvent2.description)||'Unknown Vaccine',vaccineCount:record.vaccineCount||(record.vaccineNames?record.vaccineNames.length:1),isMultiVaccine:record.isMultiVaccine||record.vaccineNames&&record.vaccineNames.length>1,individualVaccines:record.individualVaccines||[],// Individual vaccine details for each vaccine\neventId:(_record$healthEvent3=record.healthEvent)===null||_record$healthEvent3===void 0?void 0:_record$healthEvent3.eventId,eventName:((_record$healthEvent4=record.healthEvent)===null||_record$healthEvent4===void 0?void 0:_record$healthEvent4.eventName)||'Vaccination Event',administeredDate:record.vaccinationDate||record.scheduledDate,administeredBy:record.administeredBy||'TBD',dose:'Standard',// Not stored in backend model\nnextDueDate:record.nextDueDate,reactions:record.adverseReactions?record.adverseReactions.split(',').filter(r=>r.trim()):[],notes:record.notes||'',status:((_record$vaccinationSt=record.vaccinationStatus)===null||_record$vaccinationSt===void 0?void 0:_record$vaccinationSt.toLowerCase())||'scheduled',consentStatus:record.consentStatus||'PENDING',consentDate:record.consentDate||record.consentReceivedDate,scheduledDate:record.scheduledDate};});setVaccinationRecords(transformedRecords);// Update statistics based on loaded records\nfetchStatistics();}else{setVaccinationRecords([]);}}catch(error){console.error('Error fetching vaccination records:',error);// Keep mock data as fallback if API fails\nsetVaccinationRecords([{id:'1',studentId:'S001',studentName:'Võ Đồng Đức Khải',grade:'9A',vaccineType:'VACCINATION',vaccineNames:['BCG Vaccine','DPT Vaccine','Measles Vaccine','Japanese Encephalitis Vaccine'],vaccineName:'BCG Vaccine, DPT Vaccine, Measles Vaccine, Japanese Encephalitis Vaccine',vaccineCount:4,isMultiVaccine:true,eventName:'Annual Vaccination Campaign 2025',healthEvent:{eventId:35,eventName:'Annual Vaccination Campaign 2025',eventType:'VACCINATION'},individualVaccines:[{vaccineName:'BCG Vaccine'},{vaccineName:'DPT Vaccine'},{vaccineName:'Measles Vaccine'},{vaccineName:'Japanese Encephalitis Vaccine'}],administeredDate:'2025-04-07',dose:'Standard',nextDueDate:null,reactions:[],status:'scheduled',consentStatus:'APPROVED',consentDate:'2025-04-07'},{id:'2',studentId:'S002',studentName:'Nguyễn Thị Mai',grade:'9B',vaccineType:'VACCINATION',vaccineNames:['Hepatitis B Vaccine'],vaccineName:'Hepatitis B Vaccine',vaccineCount:1,isMultiVaccine:false,eventName:'Hepatitis B Campaign',administeredDate:'2025-04-10',dose:'Standard',nextDueDate:null,reactions:[],status:'completed',consentStatus:'APPROVED',consentDate:'2025-04-08'}]);}};const fetchCampaigns=async()=>{try{// Mock data - replace with actual API call\nsetCampaigns([{id:'1',campaignName:'COVID-19 Booster Campaign',vaccineType:'COVID-19',targetGrades:['10','11','12'],startDate:'2024-02-01',endDate:'2024-02-15',venue:'School Auditorium',provider:'City Health Department',description:'Annual COVID-19 booster vaccination',status:'active',totalStudents:450,completedStudents:320},{id:'2',campaignName:'HPV Vaccination Program',vaccineType:'HPV',targetGrades:['9'],startDate:'2024-01-15',endDate:'2024-01-30',venue:'Health Office',provider:'Regional Health Service',description:'HPV vaccination for grade 9 students',status:'completed',totalStudents:150,completedStudents:142}]);}catch(error){console.error('Error fetching campaigns:',error);}};const fetchStudents=async()=>{try{const data=await getAllStudents();if(data&&Array.isArray(data)){// Transform API data to match UI expectations\nconst transformedStudents=data.map(student=>{var _student$gradeLevel;return{id:student.studentCode||student.studentId||student.username,name:student.fullName||`${student.firstName} ${student.lastName}`.trim(),grade:((_student$gradeLevel=student.gradeLevel)===null||_student$gradeLevel===void 0?void 0:_student$gradeLevel.gradeName)||student.className||'N/A',dateOfBirth:student.dateOfBirth,// Keep original student data for reference\noriginalData:student};});setStudents(transformedStudents);}else{console.error('Invalid student data received');// Fallback to realistic Vietnamese mock data if API fails\nsetStudents([{id:'S001',name:'Võ Đồng Đức Khải',grade:'9A',dateOfBirth:'2008-05-15'},{id:'S002',name:'Nguyễn Thị Mai',grade:'9B',dateOfBirth:'2009-03-20'},{id:'S003',name:'Trần Văn An',grade:'10A',dateOfBirth:'2007-08-10'},{id:'S004',name:'Lê Thị Hương',grade:'10B',dateOfBirth:'2007-12-25'}]);}}catch(error){console.error('Error fetching students:',error);// Fallback to realistic Vietnamese mock data if API fails\nsetStudents([{id:'S001',name:'Võ Đồng Đức Khải',grade:'9A',dateOfBirth:'2008-05-15'},{id:'S002',name:'Nguyễn Thị Mai',grade:'9B',dateOfBirth:'2009-03-20'},{id:'S003',name:'Trần Văn An',grade:'10A',dateOfBirth:'2007-08-10'},{id:'S004',name:'Lê Thị Hương',grade:'10B',dateOfBirth:'2007-12-25'}]);}};const fetchVaccines=async()=>{try{// Mock data - replace with actual API call\nsetVaccines([{type:'COVID-19',names:['Pfizer-BioNTech','Moderna','AstraZeneca']},{type:'Influenza',names:['Flu Shot 2024','FluMist']},{type:'HPV',names:['Gardasil','Cervarix']},{type:'Hepatitis B',names:['Engerix-B','Recombivax HB']},{type:'MMR',names:['M-M-R II','Priorix']}]);}catch(error){console.error('Error fetching vaccines:',error);}};// Add function to fetch grade levels\nconst fetchGradeLevels=async()=>{try{const token=localStorage.getItem('token');const response=await fetch('/api/grade-levels/for-selection',{headers:{'Authorization':`Bearer ${token}`,'Content-Type':'application/json'}});if(response.ok){const data=await response.json();setGradeLevels(data);}else{console.error('Failed to fetch grade levels');// Fallback to mock data if API fails\nsetGradeLevels([{gradeId:1,gradeName:'Grade 1',isActive:true},{gradeId:2,gradeName:'Grade 2',isActive:true},{gradeId:3,gradeName:'Grade 3',isActive:true},{gradeId:4,gradeName:'Grade 4',isActive:true},{gradeId:5,gradeName:'Grade 5',isActive:true},{gradeId:6,gradeName:'Grade 6',isActive:true},{gradeId:7,gradeName:'Grade 7',isActive:true},{gradeId:8,gradeName:'Grade 8',isActive:true},{gradeId:9,gradeName:'Grade 9',isActive:true},{gradeId:10,gradeName:'Grade 10',isActive:true},{gradeId:11,gradeName:'Grade 11',isActive:true},{gradeId:12,gradeName:'Grade 12',isActive:true}]);}}catch(error){console.error('Error fetching grade levels:',error);// Fallback to mock data\nsetGradeLevels([{gradeId:1,gradeName:'Grade 1',isActive:true},{gradeId:2,gradeName:'Grade 2',isActive:true},{gradeId:3,gradeName:'Grade 3',isActive:true},{gradeId:4,gradeName:'Grade 4',isActive:true},{gradeId:5,gradeName:'Grade 5',isActive:true},{gradeId:6,gradeName:'Grade 6',isActive:true},{gradeId:7,gradeName:'Grade 7',isActive:true},{gradeId:8,gradeName:'Grade 8',isActive:true},{gradeId:9,gradeName:'Grade 9',isActive:true},{gradeId:10,gradeName:'Grade 10',isActive:true},{gradeId:11,gradeName:'Grade 11',isActive:true},{gradeId:12,gradeName:'Grade 12',isActive:true}]);}};// Add function to fetch statistics\nconst fetchStatistics=async()=>{try{const stats=await getVaccinationStatistics();if(stats){setStatistics({totalVaccinations:stats.totalVaccinations||0,completedCount:stats.completedCount||0,scheduledCount:stats.scheduledCount||0,missedCount:stats.missedCount||0,activeCampaigns:stats.activeCampaigns||0,totalStudents:stats.totalStudents||0,studentsWithVaccinations:stats.studentsWithVaccinations||0,vaccinationRate:stats.vaccinationRate||0,studentCoverage:stats.studentCoverage||0});}}catch(error){console.error('Error fetching statistics:',error);// Keep default values if API fails\nconst completedRecords=vaccinationRecords.filter(r=>r.status==='completed').length;const scheduledRecords=vaccinationRecords.filter(r=>r.status==='scheduled').length;const totalRecords=vaccinationRecords.length;setStatistics({totalVaccinations:totalRecords,completedCount:completedRecords,scheduledCount:scheduledRecords,missedCount:0,activeCampaigns:campaigns.filter(c=>c.status==='active').length,totalStudents:students.length||0,studentsWithVaccinations:new Set(vaccinationRecords.map(r=>r.studentId)).size,vaccinationRate:totalRecords>0?Math.round(completedRecords/totalRecords*100):0,studentCoverage:students.length>0?Math.round(new Set(vaccinationRecords.map(r=>r.studentId)).size/students.length*100):0});}};const handleAddRecord=()=>{setSelectedRecord(null);recordForm.reset();setRecordDialogOpen(true);};const handleEditRecord=record=>{setSelectedRecord(record);recordForm.reset(record);setRecordDialogOpen(true);};const handleAddCampaign=()=>{setSelectedCampaign(null);campaignForm.reset();setCampaignDialogOpen(true);};const handleEditCampaign=campaign=>{setSelectedCampaign(campaign);campaignForm.reset(campaign);setCampaignDialogOpen(true);};const handleUpdateVaccination=record=>{setSelectedUpdateRecord(record);// Parse existing reactions if they exist\nconst existingReactions=record.adverseReactions?record.adverseReactions.split(',').map(r=>r.trim()).filter(r=>r):['None'];// Default to 'None' if no reactions recorded\nupdateForm.reset({nextDueDate:record.nextDueDate?new Date(record.nextDueDate).toISOString().split('T')[0]:new Date().toISOString().split('T')[0],dose:record.dose||'1st dose',vaccineName:record.vaccineName||'',reactions:existingReactions,notes:record.notes||'No additional notes',vaccinationStatus:record.status||'COMPLETED'});setUpdateDialogOpen(true);};const handleDeleteVaccination=async record=>{const confirmed=await deleteConfirm(`Are you sure you want to delete the vaccination record for ${record.studentName}?`);if(confirmed){try{await deleteVaccinationRecord(record.id);// Refresh the vaccination records list\nawait fetchVaccinationRecords();successAlert('Vaccination record deleted successfully');}catch(error){console.error('Error deleting vaccination record:',error);// Show error message (optional - you can add a snackbar/toast)\nerrorAlert('Failed to delete vaccination record. Please try again.');}}};const onRecordSubmit=async data=>{try{setRecordDialogOpen(false);fetchVaccinationRecords();}catch(error){console.error('Error saving vaccination record:',error);}};const onUpdateSubmit=async data=>{try{// Transform data to match backend API format\nconst updateData={vaccinationStatus:data.vaccinationStatus,vaccinationDate:new Date().toISOString().split('T')[0],// Auto-set to today's date\nnextDueDate:data.nextDueDate,dose:data.dose,vaccineName:data.vaccineName,adverseReactions:data.reactions.join(', '),notes:data.notes};await updateVaccinationRecord(selectedUpdateRecord.id,updateData);setUpdateDialogOpen(false);await fetchVaccinationRecords();// Refresh the list\n}catch(error){console.error('Error updating vaccination record:',error);}};const onCampaignSubmit=async data=>{try{setCampaignDialogOpen(false);fetchCampaigns();}catch(error){console.error('Error saving campaign:',error);}};const filteredRecords=vaccinationRecords.filter(record=>{const matchesSearch=record.studentName.toLowerCase().includes(searchTerm.toLowerCase())||record.vaccineType.toLowerCase().includes(searchTerm.toLowerCase());const matchesStatus=filterStatus==='all'||record.status===filterStatus;const matchesGrade=filterGrade==='all'||record.grade.includes(filterGrade);return matchesSearch&&matchesStatus&&matchesGrade;});const filteredCampaigns=campaigns.filter(campaign=>campaign.campaignName.toLowerCase().includes(searchTerm.toLowerCase())||campaign.vaccineType.toLowerCase().includes(searchTerm.toLowerCase()));const getStatusColor=status=>{switch(status){case'completed':return'success';case'active':return'primary';case'scheduled':return'warning';case'cancelled':return'error';default:return'default';}};const getConsentStatusColor=consentStatus=>{switch(consentStatus){case'APPROVED':return'success';case'REJECTED':return'error';case'PENDING':return'warning';default:return'default';}};const getCompletionPercentage=(completed,total)=>{return total>0?Math.round(completed/total*100):0;};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsx(PageHeader,{title:\"Vaccination Management\",subtitle:\"Manage student vaccinations and vaccination campaigns\",icon:/*#__PURE__*/_jsx(VaccinesIcon,{})}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,className:\"mb-6\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{className:\"text-center\",children:[/*#__PURE__*/_jsx(VaccinesIcon,{className:\"text-4xl text-blue-500 mb-2\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:statistics.completedCount||0}),/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",children:\"Completed Vaccinations\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"textSecondary\",children:[statistics.totalVaccinations||0,\" total records\"]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{className:\"text-center\",children:[/*#__PURE__*/_jsx(ScheduleIcon,{className:\"text-4xl text-green-500 mb-2\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:statistics.scheduledCount||0}),/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",children:\"Scheduled Vaccinations\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"textSecondary\",children:[statistics.activeCampaigns||0,\" active campaigns\"]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{className:\"text-center\",children:[/*#__PURE__*/_jsx(GroupIcon,{className:\"text-4xl text-purple-500 mb-2\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:statistics.studentsWithVaccinations||0}),/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",children:\"Students with Records\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"textSecondary\",children:[statistics.totalStudents||0,\" total students\"]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{className:\"text-center\",children:[/*#__PURE__*/_jsx(CheckCircleIcon,{className:\"text-4xl text-orange-500 mb-2\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",children:[statistics.vaccinationRate||0,\"%\"]}),/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",children:\"Completion Rate\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"textSecondary\",children:[statistics.studentCoverage||0,\"% student coverage\"]})]})})})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsxs(Tabs,{value:activeTab,onChange:(e,newValue)=>setActiveTab(newValue),children:[/*#__PURE__*/_jsx(Tab,{label:\"Vaccination Records\"}),/*#__PURE__*/_jsx(Tab,{label:\"Campaigns\"}),/*#__PURE__*/_jsx(Tab,{label:\"Schedule\"}),/*#__PURE__*/_jsx(Tab,{label:\"Reports\"})]})}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{className:\"flex gap-4 mb-4\",children:[/*#__PURE__*/_jsx(TextField,{placeholder:\"Search records or campaigns...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),InputProps:{startAdornment:/*#__PURE__*/_jsx(SearchIcon,{className:\"mr-2 text-gray-500\"})},className:\"flex-1\"}),activeTab===0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(FormControl,{className:\"min-w-32\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Status\"}),/*#__PURE__*/_jsxs(Select,{value:filterStatus,label:\"Status\",onChange:e=>setFilterStatus(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"all\",children:\"All\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"completed\",children:\"Completed\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"scheduled\",children:\"Scheduled\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"cancelled\",children:\"Cancelled\"})]})]}),/*#__PURE__*/_jsxs(FormControl,{className:\"min-w-32\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Grade\"}),/*#__PURE__*/_jsxs(Select,{value:filterGrade,label:\"Grade\",onChange:e=>setFilterGrade(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"all\",children:\"All\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"9\",children:\"Grade 9\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"10\",children:\"Grade 10\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"11\",children:\"Grade 11\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"12\",children:\"Grade 12\"})]})]})]})]}),activeTab===0&&/*#__PURE__*/_jsxs(TableContainer,{component:Paper,children:[/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Student\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Vaccine\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Date\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Consent Status\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Next Due\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Reactions\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Status\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:filteredRecords.slice(page*10,page*10+10).map(record=>{var _record$healthEvent5;return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:record.studentName}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"textSecondary\",children:record.grade})]})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",className:\"font-semibold text-purple-700\",children:((_record$healthEvent5=record.healthEvent)===null||_record$healthEvent5===void 0?void 0:_record$healthEvent5.eventName)||record.eventName||'Vaccination Event'}),record.vaccineNames&&record.vaccineNames.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1\",children:[/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"primary\",className:\"font-semibold\",children:[record.vaccineNames.length,\" vaccine\",record.vaccineNames.length>1?'s':'',\" in this event:\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-1 mt-1\",children:record.vaccineNames.map((vaccine,index)=>/*#__PURE__*/_jsx(Chip,{label:vaccine,size:\"small\",variant:\"outlined\",color:\"secondary\",sx:{fontSize:'0.75rem',height:'20px'}},index))})]}):record.individualVaccines&&record.individualVaccines.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1\",children:[/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"primary\",className:\"font-semibold\",children:[record.individualVaccines.length,\" vaccine\",record.individualVaccines.length>1?'s':'',\" in this event:\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-1 mt-1\",children:record.individualVaccines.map((vaccine,index)=>/*#__PURE__*/_jsx(Chip,{label:vaccine.vaccineName||'Unknown Vaccine',size:\"small\",variant:\"outlined\",color:\"secondary\",sx:{fontSize:'0.75rem',height:'20px'}},index))})]}):record.vaccineName?/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"primary\",className:\"font-semibold\",children:\"1 vaccine in this event:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-1\",children:/*#__PURE__*/_jsx(Chip,{label:record.vaccineName,size:\"small\",variant:\"outlined\",color:\"secondary\",sx:{fontSize:'0.75rem',height:'20px'}})})]}):/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"textSecondary\",className:\"italic\",children:\"Vaccine information not available\"})]})}),/*#__PURE__*/_jsx(TableCell,{children:new Date(record.administeredDate||record.scheduledDate).toLocaleDateString()}),/*#__PURE__*/_jsxs(TableCell,{children:[/*#__PURE__*/_jsx(Chip,{label:record.consentStatus==='REJECTED'?'DECLINED':record.consentStatus==='APPROVED'?'APPROVED':record.status==='missed'&&record.consentStatus!=='APPROVED'?'DECLINED':record.consentStatus||'PENDING',color:record.consentStatus==='REJECTED'||record.status==='missed'&&record.consentStatus!=='APPROVED'?'error':record.consentStatus==='APPROVED'?'success':'warning',size:\"small\"}),record.consentDate&&/*#__PURE__*/_jsx(Typography,{variant:\"caption\",display:\"block\",color:\"textSecondary\",children:new Date(record.consentDate).toLocaleDateString()})]}),/*#__PURE__*/_jsx(TableCell,{children:record.nextDueDate?new Date(record.nextDueDate).toLocaleDateString():'N/A'}),/*#__PURE__*/_jsx(TableCell,{children:record.reactions.length>0?record.reactions.map((reaction,index)=>/*#__PURE__*/_jsx(Chip,{label:reaction,size:\"small\",className:\"mr-1\"},index)):/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"textSecondary\",children:\"None\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:record.status,color:getStatusColor(record.status),size:\"small\"})}),/*#__PURE__*/_jsxs(TableCell,{children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Update Vaccination\",children:/*#__PURE__*/_jsx(IconButton,{color:\"primary\",onClick:()=>handleUpdateVaccination(record),disabled:record.consentStatus!=='APPROVED',children:/*#__PURE__*/_jsx(CheckCircleIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Delete\",children:/*#__PURE__*/_jsx(IconButton,{color:\"error\",onClick:()=>handleDeleteVaccination(record),children:/*#__PURE__*/_jsx(DeleteIcon,{})})})]})]},record.id);})})]}),/*#__PURE__*/_jsx(TablePagination,{component:\"div\",count:filteredRecords.length,rowsPerPage:10,page:page,onPageChange:(event,newPage)=>setPage(newPage),rowsPerPageOptions:[]})]}),activeTab===1&&/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:filteredCampaigns.map(campaign=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,lg:4,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{title:campaign.campaignName,subheader:`${campaign.vaccineType} - ${campaign.targetGrades.join(', ')}`,action:/*#__PURE__*/_jsx(Chip,{label:campaign.status,color:getStatusColor(campaign.status),size:\"small\"})}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",className:\"mb-2\",children:campaign.description}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",className:\"mb-2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Period:\"}),\" \",new Date(campaign.startDate).toLocaleDateString(),\" - \",new Date(campaign.endDate).toLocaleDateString()]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",className:\"mb-2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Venue:\"}),\" \",campaign.venue]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",className:\"mb-2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Provider:\"}),\" \",campaign.provider]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsxs(Box,{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"Progress\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[campaign.completedStudents,\"/\",campaign.totalStudents,\" (\",getCompletionPercentage(campaign.completedStudents,campaign.totalStudents),\"%)\"]})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:getCompletionPercentage(campaign.completedStudents,campaign.totalStudents),className:\"mb-2\"})]}),/*#__PURE__*/_jsxs(Box,{className:\"flex gap-2 mt-3\",children:[/*#__PURE__*/_jsx(Button,{size:\"small\",startIcon:/*#__PURE__*/_jsx(EditIcon,{}),onClick:()=>handleEditCampaign(campaign),children:\"Edit\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",startIcon:/*#__PURE__*/_jsx(EventAvailableIcon,{}),color:\"primary\",children:\"Schedule\"})]})]})]})},campaign.id))}),activeTab===2&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(ScheduleIcon,{className:\"text-6xl text-gray-400 mb-4\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"textSecondary\",children:\"Vaccination Schedule\"}),/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",className:\"mb-4\",children:\"View and manage upcoming vaccination schedules and appointments.\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(ScheduleIcon,{}),children:\"View Schedule\"})]}),activeTab===3&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(BarChartIcon,{className:\"text-6xl text-gray-400 mb-4\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"textSecondary\",children:\"Vaccination Reports\"}),/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",className:\"mb-4\",children:\"Generate comprehensive reports on vaccination coverage, campaign effectiveness, and compliance rates.\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(AssignmentIcon,{}),children:\"Generate Report\"})]})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:recordDialogOpen,onClose:()=>setRecordDialogOpen(false),maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:selectedRecord?'Edit Vaccination Record':'Add New Vaccination Record'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:recordForm.handleSubmit(onRecordSubmit),children:[/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Autocomplete,{options:students,value:students.find(s=>s.id===recordForm.watch('studentId'))||null,getOptionLabel:option=>`${option.name} - Class ${option.grade}`,renderInput:params=>{var _recordForm$formState;return/*#__PURE__*/_jsx(TextField,{...params,label:\"Select Student\",required:true,error:!!recordForm.formState.errors.studentId,helperText:(_recordForm$formState=recordForm.formState.errors.studentId)===null||_recordForm$formState===void 0?void 0:_recordForm$formState.message});},onChange:(event,value)=>{recordForm.setValue('studentId',(value===null||value===void 0?void 0:value.id)||'');},isOptionEqualToValue:(option,value)=>option.id===value.id})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Vaccine Type\"}),/*#__PURE__*/_jsx(Select,{...recordForm.register('vaccineType'),error:!!recordForm.formState.errors.vaccineType,children:vaccines.map(vaccine=>/*#__PURE__*/_jsx(MenuItem,{value:vaccine.type,children:vaccine.type},vaccine.type))})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Vaccine Name\",...recordForm.register('vaccineName'),error:!!recordForm.formState.errors.vaccineName,helperText:(_recordForm$formState2=recordForm.formState.errors.vaccineName)===null||_recordForm$formState2===void 0?void 0:_recordForm$formState2.message})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Batch Number\",...recordForm.register('batchNumber'),error:!!recordForm.formState.errors.batchNumber,helperText:(_recordForm$formState3=recordForm.formState.errors.batchNumber)===null||_recordForm$formState3===void 0?void 0:_recordForm$formState3.message})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{...recordForm.register('consentGiven'),color:\"primary\"}),label:\"Parent/Guardian consent has been obtained\"}),recordForm.formState.errors.consentGiven&&/*#__PURE__*/_jsx(Typography,{color:\"error\",variant:\"caption\",children:(_recordForm$formState4=recordForm.formState.errors.consentGiven)===null||_recordForm$formState4===void 0?void 0:_recordForm$formState4.message})]})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setRecordDialogOpen(false),children:\"Cancel\"}),/*#__PURE__*/_jsxs(Button,{type:\"submit\",variant:\"contained\",children:[selectedRecord?'Update':'Add',\" Record\"]})]})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:campaignDialogOpen,onClose:()=>setCampaignDialogOpen(false),maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:selectedCampaign?'Edit Campaign':'Add New Campaign'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:campaignForm.handleSubmit(onCampaignSubmit),children:[/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Campaign Name\",...campaignForm.register('campaignName'),error:!!campaignForm.formState.errors.campaignName,helperText:(_campaignForm$formSta=campaignForm.formState.errors.campaignName)===null||_campaignForm$formSta===void 0?void 0:_campaignForm$formSta.message})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Vaccine Type\"}),/*#__PURE__*/_jsx(Select,{...campaignForm.register('vaccineType'),error:!!campaignForm.formState.errors.vaccineType,children:vaccines.map(vaccine=>/*#__PURE__*/_jsx(MenuItem,{value:vaccine.type,children:vaccine.type},vaccine.type))})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Autocomplete,{multiple:true,options:gradeLevels,getOptionLabel:option=>option.gradeName||`Grade ${option.gradeNumber}`,renderInput:params=>{var _campaignForm$formSta2;return/*#__PURE__*/_jsx(TextField,{...params,label:\"Target Grades\",error:!!campaignForm.formState.errors.targetGrades,helperText:(_campaignForm$formSta2=campaignForm.formState.errors.targetGrades)===null||_campaignForm$formSta2===void 0?void 0:_campaignForm$formSta2.message});},onChange:(event,value)=>{// Convert selected grade levels to array of grade IDs\nconst gradeIds=value.map(grade=>grade.gradeId);campaignForm.setValue('targetGrades',gradeIds);},renderOption:(props,option,_ref)=>{let{selected}=_ref;return/*#__PURE__*/_jsxs(\"li\",{...props,children:[/*#__PURE__*/_jsx(Checkbox,{style:{marginRight:8},checked:selected}),option.gradeName,\" (\",option.vietnameseName,\")\"]});}})})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setCampaignDialogOpen(false),children:\"Cancel\"}),/*#__PURE__*/_jsxs(Button,{type:\"submit\",variant:\"contained\",children:[selectedCampaign?'Update':'Create',\" Campaign\"]})]})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:updateDialogOpen,onClose:()=>setUpdateDialogOpen(false),maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsxs(DialogTitle,{children:[\"Update Vaccination Record\",selectedUpdateRecord&&/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",color:\"textSecondary\",children:[selectedUpdateRecord.studentName,\" - \",selectedUpdateRecord.vaccineName]})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:updateForm.handleSubmit(onUpdateSubmit),children:[/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Next Due Date *\",type:\"date\",...updateForm.register('nextDueDate'),error:!!updateForm.formState.errors.nextDueDate,helperText:(_updateForm$formState=updateForm.formState.errors.nextDueDate)===null||_updateForm$formState===void 0?void 0:_updateForm$formState.message,InputLabelProps:{shrink:true},required:true,inputProps:{required:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Dose *\",...updateForm.register('dose'),error:!!updateForm.formState.errors.dose,helperText:(_updateForm$formState2=updateForm.formState.errors.dose)===null||_updateForm$formState2===void 0?void 0:_updateForm$formState2.message,placeholder:\"e.g., 1st dose, 2nd dose, Booster\",required:true,inputProps:{required:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Vaccine Name *\",...updateForm.register('vaccineName'),error:!!updateForm.formState.errors.vaccineName,helperText:(_updateForm$formState3=updateForm.formState.errors.vaccineName)===null||_updateForm$formState3===void 0?void 0:_updateForm$formState3.message,placeholder:\"e.g., BCG Vaccine, DPT Vaccine\",required:true,inputProps:{required:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,error:!!updateForm.formState.errors.vaccinationStatus,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Vaccination Status *\"}),/*#__PURE__*/_jsxs(Select,{...updateForm.register('vaccinationStatus'),required:true,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"COMPLETED\",children:\"Completed\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"SCHEDULED\",children:\"Scheduled\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"MISSED\",children:\"Missed\"})]}),updateForm.formState.errors.vaccinationStatus&&/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"error\",sx:{mt:1,ml:2},children:updateForm.formState.errors.vaccinationStatus.message})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Adverse Reactions *\",multiline:true,rows:3,placeholder:\"Enter any adverse reactions or symptoms separated by commas (required)\",error:!!updateForm.formState.errors.reactions,helperText:((_updateForm$formState4=updateForm.formState.errors.reactions)===null||_updateForm$formState4===void 0?void 0:_updateForm$formState4.message)||\"Please enter 'None' if no adverse reactions occurred\",defaultValue:(_updateForm$getValues=updateForm.getValues('reactions'))===null||_updateForm$getValues===void 0?void 0:_updateForm$getValues.join(', '),onChange:e=>{const reactions=e.target.value.split(',').map(r=>r.trim()).filter(r=>r);updateForm.setValue('reactions',reactions);updateForm.trigger('reactions');// Trigger validation\n},required:true,inputProps:{required:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Notes *\",multiline:true,rows:3,...updateForm.register('notes'),error:!!updateForm.formState.errors.notes,helperText:(_updateForm$formState5=updateForm.formState.errors.notes)===null||_updateForm$formState5===void 0?void 0:_updateForm$formState5.message,placeholder:\"Additional notes about the vaccination (required)\",required:true,inputProps:{required:true}})})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setUpdateDialogOpen(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",children:\"Update Vaccination\"})]})]})]})]});}export default VaccinationManagement;","map":{"version":3,"names":["React","useState","useEffect","useForm","useFieldArray","yupResolver","yup","useAlert","Card","CardContent","CardHeader","TextField","Button","Typography","Grid","Chip","Select","MenuItem","FormControl","InputLabel","Box","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","Alert","Tab","Tabs","Badge","Tooltip","Autocomplete","Checkbox","FormControlLabel","LinearProgress","Stepper","Step","StepLabel","Pagination","TablePagination","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","Search","SearchIcon","FilterList","FilterIcon","Vaccines","VaccinesIcon","Schedule","ScheduleIcon","Group","GroupIcon","Assignment","AssignmentIcon","CheckCircle","CheckCircleIcon","Cancel","CancelIcon","EventAvailable","EventAvailableIcon","Timeline","TimelineIcon","BarChart","BarChartIcon","getAllVaccinationRecords","getVaccinationStatistics","getVaccinationRecordsByStatus","createVaccinationRecord","updateVaccinationRecord","deleteVaccinationRecord","getAllStudents","PageHeader","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","vaccinationUpdateSchema","object","shape","nextDueDate","date","required","dose","string","vaccineName","reactions","array","of","min","notes","vaccinationStatus","vaccinationRecordSchema","studentId","vaccineType","administeredDate","administeredBy","consentGiven","boolean","oneOf","vaccinationCampaignSchema","campaignName","targetGrades","number","startDate","endDate","venue","provider","description","VaccinationManagement","_recordForm$formState2","_recordForm$formState3","_recordForm$formState4","_campaignForm$formSta","_updateForm$formState","_updateForm$formState2","_updateForm$formState3","_updateForm$formState4","_updateForm$getValues","_updateForm$formState5","successAlert","errorAlert","deleteConfirm","administrationSiteOptions","activeTab","setActiveTab","recordDialogOpen","setRecordDialogOpen","campaignDialogOpen","setCampaignDialogOpen","updateDialogOpen","setUpdateDialogOpen","selectedRecord","setSelectedRecord","selectedCampaign","setSelectedCampaign","selectedUpdateRecord","setSelectedUpdateRecord","vaccinationRecords","setVaccinationRecords","campaigns","setCampaigns","students","setStudents","vaccines","setVaccines","gradeLevels","setGradeLevels","searchTerm","setSearchTerm","filterStatus","setFilterStatus","filterGrade","setFilterGrade","statistics","setStatistics","totalVaccinations","completedCount","scheduledCount","missedCount","activeCampaigns","totalStudents","studentsWithVaccinations","vaccinationRate","studentCoverage","page","setPage","recordForm","resolver","defaultValues","campaignForm","updateForm","fields","reactionFields","append","appendReaction","remove","removeReaction","control","name","updateReactionFields","appendUpdateReaction","removeUpdateReaction","loadData","fetchStudents","fetchVaccines","fetchGradeLevels","fetchCampaigns","fetchStatistics","length","loadVaccinationData","fetchVaccinationRecords","records","Array","isArray","transformedRecords","map","record","_record$student3","_record$student4","_record$student5","_record$student5$grad","_record$healthEvent","_record$healthEvent2","_record$healthEvent3","_record$healthEvent4","_record$vaccinationSt","matchingStudent","find","s","_record$student","_s$originalData","_record$student2","id","student","studentCode","originalData","vaccinationRecordId","studentName","fullName","grade","gradeLevel","gradeName","healthEvent","eventType","vaccineNames","join","vaccineCount","isMultiVaccine","individualVaccines","eventId","eventName","vaccinationDate","scheduledDate","adverseReactions","split","filter","r","trim","status","toLowerCase","consentStatus","consentDate","consentReceivedDate","error","console","completedStudents","data","transformedStudents","_student$gradeLevel","username","firstName","lastName","className","dateOfBirth","type","names","token","localStorage","getItem","response","fetch","headers","ok","json","gradeId","isActive","stats","completedRecords","scheduledRecords","totalRecords","c","Set","size","Math","round","handleAddRecord","reset","handleEditRecord","handleAddCampaign","handleEditCampaign","campaign","handleUpdateVaccination","existingReactions","Date","toISOString","handleDeleteVaccination","confirmed","onRecordSubmit","onUpdateSubmit","updateData","onCampaignSubmit","filteredRecords","matchesSearch","includes","matchesStatus","matchesGrade","filteredCampaigns","getStatusColor","getConsentStatusColor","getCompletionPercentage","completed","total","children","title","subtitle","icon","container","spacing","item","xs","md","variant","color","value","onChange","e","newValue","label","placeholder","target","InputProps","startAdornment","component","slice","_record$healthEvent5","vaccine","index","sx","fontSize","height","toLocaleDateString","display","reaction","onClick","disabled","count","rowsPerPage","onPageChange","event","newPage","rowsPerPageOptions","lg","subheader","action","startIcon","open","onClose","maxWidth","fullWidth","onSubmit","handleSubmit","options","watch","getOptionLabel","option","renderInput","params","_recordForm$formState","formState","errors","helperText","message","setValue","isOptionEqualToValue","register","batchNumber","multiple","gradeNumber","_campaignForm$formSta2","gradeIds","renderOption","props","_ref","selected","style","marginRight","checked","vietnameseName","InputLabelProps","shrink","inputProps","mt","ml","multiline","rows","defaultValue","getValues","trigger"],"sources":["C:/Users/trand/OneDrive/Documents/GitHub/SchoolMedicalManagement/frontend/src/pages/medical/VaccinationManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useForm, useFieldArray } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { useAlert } from '../../hooks/useAlert'; // Import useAlert hook\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Chip,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Alert,\r\n  Tab,\r\n  Tabs,\r\n  Badge,\r\n  Tooltip,\r\n  Autocomplete,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  LinearProgress,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Pagination,\r\n  TablePagination\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  Search as SearchIcon,\r\n  FilterList as FilterIcon,\r\n  Vaccines as VaccinesIcon,\r\n  Schedule as ScheduleIcon,\r\n  Group as GroupIcon,\r\n  Assignment as AssignmentIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  Cancel as CancelIcon,\r\n  EventAvailable as EventAvailableIcon,\r\n  Timeline as TimelineIcon,\r\n  BarChart as BarChartIcon\r\n} from '@mui/icons-material';\r\nimport {\r\n  getAllVaccinationRecords,\r\n  getVaccinationStatistics,\r\n  getVaccinationRecordsByStatus,\r\n  createVaccinationRecord,\r\n  updateVaccinationRecord,\r\n  deleteVaccinationRecord,\r\n  getAllStudents\r\n} from '../../utils/api';\r\nimport PageHeader from '../../components/PageHeader';\r\n\r\nconst vaccinationUpdateSchema = yup.object().shape({\r\n  nextDueDate: yup.date().required('Next due date is required'),\r\n  dose: yup.string().required('Dose is required'),\r\n  vaccineName: yup.string().required('Vaccine name is required'),\r\n  reactions: yup.array().of(yup.string()).min(1, 'At least one reaction status is required'),\r\n  notes: yup.string().required('Notes are required'),\r\n  vaccinationStatus: yup.string().required('Status is required')\r\n});\r\n\r\nconst vaccinationRecordSchema = yup.object().shape({\r\n  studentId: yup.string().required('Student is required'),\r\n  vaccineType: yup.string().required('Vaccine type is required'),\r\n  vaccineName: yup.string().required('Vaccine name is required'),\r\n  administeredDate: yup.date().required('Administration date is required'),\r\n  administeredBy: yup.string().required('Administered by is required'),\r\n  dose: yup.string().required('Dose is required'),\r\n  nextDueDate: yup.date(),\r\n  reactions: yup.array().of(yup.string()),\r\n  notes: yup.string(),\r\n  consentGiven: yup.boolean().oneOf([true], 'Parent consent is required')\r\n});\r\n\r\nconst vaccinationCampaignSchema = yup.object().shape({\r\n  campaignName: yup.string().required('Campaign name is required'),\r\n  vaccineType: yup.string().required('Vaccine type is required'),\r\n  targetGrades: yup.array().of(yup.number()).min(1, 'At least one grade must be selected'),\r\n  startDate: yup.date().required('Start date is required'),\r\n  endDate: yup.date().required('End date is required'),\r\n  venue: yup.string().required('Venue is required'),\r\n  provider: yup.string().required('Healthcare provider is required'),\r\n  description: yup.string()\r\n});\r\n\r\nfunction VaccinationManagement() {\r\n  const { successAlert, errorAlert, deleteConfirm } = useAlert(); // Initialize useAlert hook\r\n  // Administration site options\r\n  const administrationSiteOptions = [\r\n    'Left Arm',\r\n    'Right Arm',\r\n    'Left Thigh',\r\n    'Right Thigh',\r\n    'Left Buttock',\r\n    'Right Buttock',\r\n    'Oral',\r\n    'Nasal',\r\n    'Other'\r\n  ];\r\n\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [recordDialogOpen, setRecordDialogOpen] = useState(false);\r\n  const [campaignDialogOpen, setCampaignDialogOpen] = useState(false);\r\n  const [updateDialogOpen, setUpdateDialogOpen] = useState(false);\r\n  const [selectedRecord, setSelectedRecord] = useState(null);\r\n  const [selectedCampaign, setSelectedCampaign] = useState(null);\r\n  const [selectedUpdateRecord, setSelectedUpdateRecord] = useState(null);\r\n  const [vaccinationRecords, setVaccinationRecords] = useState([]);\r\n  const [campaigns, setCampaigns] = useState([]);\r\n  const [students, setStudents] = useState([]);\r\n  const [vaccines, setVaccines] = useState([]);\r\n  const [gradeLevels, setGradeLevels] = useState([]); // Add state for grade levels\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterStatus, setFilterStatus] = useState('all');\r\n  const [filterGrade, setFilterGrade] = useState('all');\r\n  const [statistics, setStatistics] = useState({\r\n    totalVaccinations: 0,\r\n    completedCount: 0,\r\n    scheduledCount: 0,\r\n    missedCount: 0,\r\n    activeCampaigns: 0,\r\n    totalStudents: 0,\r\n    studentsWithVaccinations: 0,\r\n    vaccinationRate: 0,\r\n    studentCoverage: 0\r\n  });\r\n\r\n  // Pagination state\r\n  const [page, setPage] = useState(0);\r\n\r\n  const recordForm = useForm({\r\n    resolver: yupResolver(vaccinationRecordSchema),\r\n    defaultValues: {\r\n      reactions: [],\r\n      consentGiven: false\r\n    }\r\n  });\r\n\r\n  const campaignForm = useForm({\r\n    resolver: yupResolver(vaccinationCampaignSchema),\r\n    defaultValues: {\r\n      targetGrades: []\r\n    }\r\n  });\r\n\r\n  const updateForm = useForm({\r\n    resolver: yupResolver(vaccinationUpdateSchema),\r\n    defaultValues: {\r\n      reactions: [],\r\n      vaccinationStatus: 'COMPLETED',\r\n      dose: '',\r\n      notes: '',\r\n      nextDueDate: ''\r\n    }\r\n  });\r\n\r\n  const { fields: reactionFields, append: appendReaction, remove: removeReaction } = useFieldArray({\r\n    control: recordForm.control,\r\n    name: 'reactions'\r\n  });\r\n\r\n  const { fields: updateReactionFields, append: appendUpdateReaction, remove: removeUpdateReaction } = useFieldArray({\r\n    control: updateForm.control,\r\n    name: 'reactions'\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Load data in proper order - students first, then vaccination records\r\n    const loadData = async () => {\r\n      await fetchStudents();\r\n      await fetchVaccines();\r\n      await fetchGradeLevels();\r\n      await fetchCampaigns();\r\n      await fetchStatistics();\r\n    };\r\n    \r\n    loadData();\r\n  }, []);\r\n\r\n  // Refetch vaccination records when students are updated to ensure proper name mapping\r\n  useEffect(() => {\r\n    if (students.length > 0) {\r\n      const loadVaccinationData = async () => {\r\n        await fetchVaccinationRecords();\r\n      };\r\n      loadVaccinationData();\r\n    }\r\n  }, [students.length]); // Use students.length instead of students array to prevent infinite loop\r\n\r\n  const fetchVaccinationRecords = async () => {\r\n    try {\r\n      const records = await getAllVaccinationRecords();\r\n      if (records && Array.isArray(records)) {\r\n        // Transform API data to match UI format and handle grouped vaccines\r\n        const transformedRecords = records.map(record => {\r\n          // Find matching student from students list for consistent display\r\n          const matchingStudent = students.find(s => \r\n            s.id === record.student?.studentCode || \r\n            s.originalData?.studentId === record.student?.studentId\r\n          );\r\n          \r\n          return {\r\n            id: record.vaccinationRecordId,\r\n            studentId: record.student?.studentCode || 'Unknown ID',\r\n            studentName: matchingStudent?.name || record.student?.fullName || 'Unknown Student',\r\n            grade: matchingStudent?.grade || record.student?.gradeLevel?.gradeName || 'N/A',\r\n            vaccineType: record.healthEvent?.eventType || 'VACCINATION',\r\n            // Handle both grouped vaccine names and individual vaccine name\r\n            vaccineNames: record.vaccineNames || [], // Array of vaccine names for this event\r\n            vaccineName: record.vaccineNames && record.vaccineNames.length > 0 \r\n              ? record.vaccineNames.join(', ') \r\n              : record.vaccineName || record.healthEvent?.description || 'Unknown Vaccine',\r\n            vaccineCount: record.vaccineCount || (record.vaccineNames ? record.vaccineNames.length : 1),\r\n            isMultiVaccine: record.isMultiVaccine || (record.vaccineNames && record.vaccineNames.length > 1),\r\n            individualVaccines: record.individualVaccines || [], // Individual vaccine details for each vaccine\r\n            eventId: record.healthEvent?.eventId,\r\n            eventName: record.healthEvent?.eventName || 'Vaccination Event',\r\n            administeredDate: record.vaccinationDate || record.scheduledDate,\r\n            administeredBy: record.administeredBy || 'TBD',\r\n            dose: 'Standard', // Not stored in backend model\r\n            nextDueDate: record.nextDueDate,\r\n            reactions: record.adverseReactions ? record.adverseReactions.split(',').filter(r => r.trim()) : [],\r\n            notes: record.notes || '',\r\n            status: record.vaccinationStatus?.toLowerCase() || 'scheduled',\r\n            consentStatus: record.consentStatus || 'PENDING',\r\n            consentDate: record.consentDate || record.consentReceivedDate,\r\n            scheduledDate: record.scheduledDate\r\n          };\r\n        });\r\n        \r\n        setVaccinationRecords(transformedRecords);\r\n        \r\n        // Update statistics based on loaded records\r\n        fetchStatistics();\r\n      } else {\r\n        setVaccinationRecords([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching vaccination records:', error);\r\n      // Keep mock data as fallback if API fails\r\n      setVaccinationRecords([\r\n        {\r\n          id: '1',\r\n          studentId: 'S001',\r\n          studentName: 'Võ Đồng Đức Khải',\r\n          grade: '9A',\r\n          vaccineType: 'VACCINATION',\r\n          vaccineNames: ['BCG Vaccine', 'DPT Vaccine', 'Measles Vaccine', 'Japanese Encephalitis Vaccine'],\r\n          vaccineName: 'BCG Vaccine, DPT Vaccine, Measles Vaccine, Japanese Encephalitis Vaccine',\r\n          vaccineCount: 4,\r\n          isMultiVaccine: true,\r\n          eventName: 'Annual Vaccination Campaign 2025',\r\n          healthEvent: {\r\n            eventId: 35,\r\n            eventName: 'Annual Vaccination Campaign 2025',\r\n            eventType: 'VACCINATION'\r\n          },\r\n          individualVaccines: [\r\n            { vaccineName: 'BCG Vaccine' },\r\n            { vaccineName: 'DPT Vaccine' },\r\n            { vaccineName: 'Measles Vaccine' },\r\n            { vaccineName: 'Japanese Encephalitis Vaccine' }\r\n          ],\r\n          administeredDate: '2025-04-07',\r\n          dose: 'Standard',\r\n          nextDueDate: null,\r\n          reactions: [],\r\n          status: 'scheduled',\r\n          consentStatus: 'APPROVED',\r\n          consentDate: '2025-04-07'\r\n        },\r\n        {\r\n          id: '2',\r\n          studentId: 'S002',\r\n          studentName: 'Nguyễn Thị Mai',\r\n          grade: '9B',\r\n          vaccineType: 'VACCINATION',\r\n          vaccineNames: ['Hepatitis B Vaccine'],\r\n          vaccineName: 'Hepatitis B Vaccine',\r\n          vaccineCount: 1,\r\n          isMultiVaccine: false,\r\n          eventName: 'Hepatitis B Campaign',\r\n          administeredDate: '2025-04-10',\r\n          dose: 'Standard',\r\n          nextDueDate: null,\r\n          reactions: [],\r\n          status: 'completed',\r\n          consentStatus: 'APPROVED',\r\n          consentDate: '2025-04-08'\r\n        }\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const fetchCampaigns = async () => {\r\n    try {\r\n      // Mock data - replace with actual API call\r\n      setCampaigns([\r\n        {\r\n          id: '1',\r\n          campaignName: 'COVID-19 Booster Campaign',\r\n          vaccineType: 'COVID-19',\r\n          targetGrades: ['10', '11', '12'],\r\n          startDate: '2024-02-01',\r\n          endDate: '2024-02-15',\r\n          venue: 'School Auditorium',\r\n          provider: 'City Health Department',\r\n          description: 'Annual COVID-19 booster vaccination',\r\n          status: 'active',\r\n          totalStudents: 450,\r\n          completedStudents: 320\r\n        },\r\n        {\r\n          id: '2',\r\n          campaignName: 'HPV Vaccination Program',\r\n          vaccineType: 'HPV',\r\n          targetGrades: ['9'],\r\n          startDate: '2024-01-15',\r\n          endDate: '2024-01-30',\r\n          venue: 'Health Office',\r\n          provider: 'Regional Health Service',\r\n          description: 'HPV vaccination for grade 9 students',\r\n          status: 'completed',\r\n          totalStudents: 150,\r\n          completedStudents: 142\r\n        }\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error fetching campaigns:', error);\r\n    }\r\n  };\r\n\r\n  const fetchStudents = async () => {\r\n    try {\r\n      const data = await getAllStudents();\r\n      if (data && Array.isArray(data)) {\r\n        // Transform API data to match UI expectations\r\n        const transformedStudents = data.map(student => ({\r\n          id: student.studentCode || student.studentId || student.username,\r\n          name: student.fullName || `${student.firstName} ${student.lastName}`.trim(),\r\n          grade: student.gradeLevel?.gradeName || student.className || 'N/A',\r\n          dateOfBirth: student.dateOfBirth,\r\n          // Keep original student data for reference\r\n          originalData: student\r\n        }));\r\n        setStudents(transformedStudents);\r\n      } else {\r\n        console.error('Invalid student data received');\r\n        // Fallback to realistic Vietnamese mock data if API fails\r\n        setStudents([\r\n          { id: 'S001', name: 'Võ Đồng Đức Khải', grade: '9A', dateOfBirth: '2008-05-15' },\r\n          { id: 'S002', name: 'Nguyễn Thị Mai', grade: '9B', dateOfBirth: '2009-03-20' },\r\n          { id: 'S003', name: 'Trần Văn An', grade: '10A', dateOfBirth: '2007-08-10' },\r\n          { id: 'S004', name: 'Lê Thị Hương', grade: '10B', dateOfBirth: '2007-12-25' }\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching students:', error);\r\n      // Fallback to realistic Vietnamese mock data if API fails\r\n      setStudents([\r\n        { id: 'S001', name: 'Võ Đồng Đức Khải', grade: '9A', dateOfBirth: '2008-05-15' },\r\n        { id: 'S002', name: 'Nguyễn Thị Mai', grade: '9B', dateOfBirth: '2009-03-20' },\r\n        { id: 'S003', name: 'Trần Văn An', grade: '10A', dateOfBirth: '2007-08-10' },\r\n        { id: 'S004', name: 'Lê Thị Hương', grade: '10B', dateOfBirth: '2007-12-25' }\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const fetchVaccines = async () => {\r\n    try {\r\n      // Mock data - replace with actual API call\r\n      setVaccines([\r\n        { type: 'COVID-19', names: ['Pfizer-BioNTech', 'Moderna', 'AstraZeneca'] },\r\n        { type: 'Influenza', names: ['Flu Shot 2024', 'FluMist'] },\r\n        { type: 'HPV', names: ['Gardasil', 'Cervarix'] },\r\n        { type: 'Hepatitis B', names: ['Engerix-B', 'Recombivax HB'] },\r\n        { type: 'MMR', names: ['M-M-R II', 'Priorix'] }\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error fetching vaccines:', error);\r\n    }\r\n  };\r\n\r\n  // Add function to fetch grade levels\r\n  const fetchGradeLevels = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('/api/grade-levels/for-selection', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setGradeLevels(data);\r\n      } else {\r\n        console.error('Failed to fetch grade levels');\r\n        // Fallback to mock data if API fails\r\n        setGradeLevels([\r\n          { gradeId: 1, gradeName: 'Grade 1', isActive: true },\r\n          { gradeId: 2, gradeName: 'Grade 2', isActive: true },\r\n          { gradeId: 3, gradeName: 'Grade 3', isActive: true },\r\n          { gradeId: 4, gradeName: 'Grade 4', isActive: true },\r\n          { gradeId: 5, gradeName: 'Grade 5', isActive: true },\r\n          { gradeId: 6, gradeName: 'Grade 6', isActive: true },\r\n          { gradeId: 7, gradeName: 'Grade 7', isActive: true },\r\n          { gradeId: 8, gradeName: 'Grade 8', isActive: true },\r\n          { gradeId: 9, gradeName: 'Grade 9', isActive: true },\r\n          { gradeId: 10, gradeName: 'Grade 10', isActive: true },\r\n          { gradeId: 11, gradeName: 'Grade 11', isActive: true },\r\n          { gradeId: 12, gradeName: 'Grade 12', isActive: true }\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching grade levels:', error);\r\n      // Fallback to mock data\r\n      setGradeLevels([\r\n        { gradeId: 1, gradeName: 'Grade 1', isActive: true },\r\n        { gradeId: 2, gradeName: 'Grade 2', isActive: true },\r\n        { gradeId: 3, gradeName: 'Grade 3', isActive: true },\r\n        { gradeId: 4, gradeName: 'Grade 4', isActive: true },\r\n        { gradeId: 5, gradeName: 'Grade 5', isActive: true },\r\n        { gradeId: 6, gradeName: 'Grade 6', isActive: true },\r\n        { gradeId: 7, gradeName: 'Grade 7', isActive: true },\r\n        { gradeId: 8, gradeName: 'Grade 8', isActive: true },\r\n        { gradeId: 9, gradeName: 'Grade 9', isActive: true },\r\n        { gradeId: 10, gradeName: 'Grade 10', isActive: true },\r\n        { gradeId: 11, gradeName: 'Grade 11', isActive: true },\r\n        { gradeId: 12, gradeName: 'Grade 12', isActive: true }\r\n      ]);\r\n    }\r\n  };\r\n\r\n  // Add function to fetch statistics\r\n  const fetchStatistics = async () => {\r\n    try {\r\n      const stats = await getVaccinationStatistics();\r\n      \r\n      if (stats) {\r\n        setStatistics({\r\n          totalVaccinations: stats.totalVaccinations || 0,\r\n          completedCount: stats.completedCount || 0,\r\n          scheduledCount: stats.scheduledCount || 0,\r\n          missedCount: stats.missedCount || 0,\r\n          activeCampaigns: stats.activeCampaigns || 0,\r\n          totalStudents: stats.totalStudents || 0,\r\n          studentsWithVaccinations: stats.studentsWithVaccinations || 0,\r\n          vaccinationRate: stats.vaccinationRate || 0,\r\n          studentCoverage: stats.studentCoverage || 0\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching statistics:', error);\r\n      // Keep default values if API fails\r\n      const completedRecords = vaccinationRecords.filter(r => r.status === 'completed').length;\r\n      const scheduledRecords = vaccinationRecords.filter(r => r.status === 'scheduled').length;\r\n      const totalRecords = vaccinationRecords.length;\r\n      \r\n      setStatistics({\r\n        totalVaccinations: totalRecords,\r\n        completedCount: completedRecords,\r\n        scheduledCount: scheduledRecords,\r\n        missedCount: 0,\r\n        activeCampaigns: campaigns.filter(c => c.status === 'active').length,\r\n        totalStudents: students.length || 0,\r\n        studentsWithVaccinations: new Set(vaccinationRecords.map(r => r.studentId)).size,\r\n        vaccinationRate: totalRecords > 0 ? Math.round((completedRecords / totalRecords) * 100) : 0,\r\n        studentCoverage: students.length > 0 ? Math.round((new Set(vaccinationRecords.map(r => r.studentId)).size / students.length) * 100) : 0\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddRecord = () => {\r\n    setSelectedRecord(null);\r\n    recordForm.reset();\r\n    setRecordDialogOpen(true);\r\n  };\r\n\r\n  const handleEditRecord = (record) => {\r\n    setSelectedRecord(record);\r\n    recordForm.reset(record);\r\n    setRecordDialogOpen(true);\r\n  };\r\n\r\n  const handleAddCampaign = () => {\r\n    setSelectedCampaign(null);\r\n    campaignForm.reset();\r\n    setCampaignDialogOpen(true);\r\n  };\r\n\r\n  const handleEditCampaign = (campaign) => {\r\n    setSelectedCampaign(campaign);\r\n    campaignForm.reset(campaign);\r\n    setCampaignDialogOpen(true);\r\n  };\r\n\r\n  const handleUpdateVaccination = (record) => {\r\n    setSelectedUpdateRecord(record);\r\n    \r\n    // Parse existing reactions if they exist\r\n    const existingReactions = record.adverseReactions \r\n      ? record.adverseReactions.split(',').map(r => r.trim()).filter(r => r)\r\n      : ['None']; // Default to 'None' if no reactions recorded\r\n    \r\n    updateForm.reset({\r\n      nextDueDate: record.nextDueDate ? new Date(record.nextDueDate).toISOString().split('T')[0] : new Date().toISOString().split('T')[0],\r\n      dose: record.dose || '1st dose',\r\n      vaccineName: record.vaccineName || '',\r\n      reactions: existingReactions,\r\n      notes: record.notes || 'No additional notes',\r\n      vaccinationStatus: record.status || 'COMPLETED'\r\n    });\r\n    setUpdateDialogOpen(true);\r\n  };\r\n\r\n  const handleDeleteVaccination = async (record) => {\r\n    const confirmed = await deleteConfirm(`Are you sure you want to delete the vaccination record for ${record.studentName}?`);\r\n    if (confirmed) {\r\n      try {\r\n        await deleteVaccinationRecord(record.id);\r\n        // Refresh the vaccination records list\r\n        await fetchVaccinationRecords();\r\n        successAlert('Vaccination record deleted successfully');\r\n        } catch (error) {\r\n        console.error('Error deleting vaccination record:', error);\r\n        // Show error message (optional - you can add a snackbar/toast)\r\n        errorAlert('Failed to delete vaccination record. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const onRecordSubmit = async (data) => {\r\n    try {\r\n      setRecordDialogOpen(false);\r\n      fetchVaccinationRecords();\r\n    } catch (error) {\r\n      console.error('Error saving vaccination record:', error);\r\n    }\r\n  };\r\n\r\n  const onUpdateSubmit = async (data) => {\r\n    try {\r\n      \r\n      // Transform data to match backend API format\r\n      const updateData = {\r\n        vaccinationStatus: data.vaccinationStatus,\r\n        vaccinationDate: new Date().toISOString().split('T')[0], // Auto-set to today's date\r\n        nextDueDate: data.nextDueDate,\r\n        dose: data.dose,\r\n        vaccineName: data.vaccineName,\r\n        adverseReactions: data.reactions.join(', '),\r\n        notes: data.notes\r\n      };\r\n\r\n      await updateVaccinationRecord(selectedUpdateRecord.id, updateData);\r\n      \r\n      setUpdateDialogOpen(false);\r\n      await fetchVaccinationRecords(); // Refresh the list\r\n    } catch (error) {\r\n      console.error('Error updating vaccination record:', error);\r\n    }\r\n  };\r\n\r\n  const onCampaignSubmit = async (data) => {\r\n    try {\r\n      setCampaignDialogOpen(false);\r\n      fetchCampaigns();\r\n    } catch (error) {\r\n      console.error('Error saving campaign:', error);\r\n    }\r\n  };\r\n\r\n  const filteredRecords = vaccinationRecords.filter(record => {\r\n    const matchesSearch = record.studentName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         record.vaccineType.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesStatus = filterStatus === 'all' || record.status === filterStatus;\r\n    const matchesGrade = filterGrade === 'all' || record.grade.includes(filterGrade);\r\n    return matchesSearch && matchesStatus && matchesGrade;\r\n  });\r\n\r\n  const filteredCampaigns = campaigns.filter(campaign =>\r\n    campaign.campaignName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    campaign.vaccineType.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'completed': return 'success';\r\n      case 'active': return 'primary';\r\n      case 'scheduled': return 'warning';\r\n      case 'cancelled': return 'error';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  const getConsentStatusColor = (consentStatus) => {\r\n    switch (consentStatus) {\r\n      case 'APPROVED': return 'success';\r\n      case 'REJECTED': return 'error';\r\n      case 'PENDING': return 'warning';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  const getCompletionPercentage = (completed, total) => {\r\n    return total > 0 ? Math.round((completed / total) * 100) : 0;\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <PageHeader\r\n        title=\"Vaccination Management\"\r\n        subtitle=\"Manage student vaccinations and vaccination campaigns\"\r\n        icon={<VaccinesIcon />}\r\n      />\r\n\r\n      {/* Statistics Cards */}\r\n      <Grid container spacing={3} className=\"mb-6\">\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent className=\"text-center\">\r\n              <VaccinesIcon className=\"text-4xl text-blue-500 mb-2\" />\r\n              <Typography variant=\"h4\">{statistics.completedCount || 0}</Typography>\r\n              <Typography color=\"textSecondary\">Completed Vaccinations</Typography>\r\n              <Typography variant=\"caption\" color=\"textSecondary\">\r\n                {statistics.totalVaccinations || 0} total records\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent className=\"text-center\">\r\n              <ScheduleIcon className=\"text-4xl text-green-500 mb-2\" />\r\n              <Typography variant=\"h4\">{statistics.scheduledCount || 0}</Typography>\r\n              <Typography color=\"textSecondary\">Scheduled Vaccinations</Typography>\r\n              <Typography variant=\"caption\" color=\"textSecondary\">\r\n                {statistics.activeCampaigns || 0} active campaigns\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent className=\"text-center\">\r\n              <GroupIcon className=\"text-4xl text-purple-500 mb-2\" />\r\n              <Typography variant=\"h4\">{statistics.studentsWithVaccinations || 0}</Typography>\r\n              <Typography color=\"textSecondary\">Students with Records</Typography>\r\n              <Typography variant=\"caption\" color=\"textSecondary\">\r\n                {statistics.totalStudents || 0} total students\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent className=\"text-center\">\r\n              <CheckCircleIcon className=\"text-4xl text-orange-500 mb-2\" />\r\n              <Typography variant=\"h4\">{statistics.vaccinationRate || 0}%</Typography>\r\n              <Typography color=\"textSecondary\">Completion Rate</Typography>\r\n              <Typography variant=\"caption\" color=\"textSecondary\">\r\n                {statistics.studentCoverage || 0}% student coverage\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Main Content */}\r\n      <Card>\r\n        <CardHeader>\r\n          <Tabs value={activeTab} onChange={(e, newValue) => setActiveTab(newValue)}>\r\n            <Tab label=\"Vaccination Records\" />\r\n            <Tab label=\"Campaigns\" />\r\n            <Tab label=\"Schedule\" />\r\n            <Tab label=\"Reports\" />\r\n          </Tabs>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {/* Search and Filter */}\r\n          <Box className=\"flex gap-4 mb-4\">\r\n            <TextField\r\n              placeholder=\"Search records or campaigns...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              InputProps={{\r\n                startAdornment: <SearchIcon className=\"mr-2 text-gray-500\" />\r\n              }}\r\n              className=\"flex-1\"\r\n            />\r\n            {activeTab === 0 && (\r\n              <>\r\n                <FormControl className=\"min-w-32\">\r\n                  <InputLabel>Status</InputLabel>\r\n                  <Select\r\n                    value={filterStatus}\r\n                    label=\"Status\"\r\n                    onChange={(e) => setFilterStatus(e.target.value)}\r\n                  >\r\n                    <MenuItem value=\"all\">All</MenuItem>\r\n                    <MenuItem value=\"completed\">Completed</MenuItem>\r\n                    <MenuItem value=\"scheduled\">Scheduled</MenuItem>\r\n                    <MenuItem value=\"cancelled\">Cancelled</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl className=\"min-w-32\">\r\n                  <InputLabel>Grade</InputLabel>\r\n                  <Select\r\n                    value={filterGrade}\r\n                    label=\"Grade\"\r\n                    onChange={(e) => setFilterGrade(e.target.value)}\r\n                  >\r\n                    <MenuItem value=\"all\">All</MenuItem>\r\n                    <MenuItem value=\"9\">Grade 9</MenuItem>\r\n                    <MenuItem value=\"10\">Grade 10</MenuItem>\r\n                    <MenuItem value=\"11\">Grade 11</MenuItem>\r\n                    <MenuItem value=\"12\">Grade 12</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </>\r\n            )}\r\n          </Box>\r\n\r\n          {/* Tab Content */}\r\n          {activeTab === 0 && (\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Student</TableCell>\r\n                    <TableCell>Vaccine</TableCell>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Consent Status</TableCell>\r\n                    <TableCell>Next Due</TableCell>\r\n                    <TableCell>Reactions</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell>Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {filteredRecords.slice(page * 10, page * 10 + 10).map((record) => (\r\n                    <TableRow key={record.id}>\r\n                      <TableCell>\r\n                        <div>\r\n                          <Typography variant=\"subtitle2\">{record.studentName}</Typography>\r\n                          <Typography variant=\"caption\" color=\"textSecondary\">\r\n                            {record.grade}\r\n                          </Typography>\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <div>\r\n                          {/* Show event name as main title */}\r\n                          <Typography variant=\"subtitle2\" className=\"font-semibold text-purple-700\">\r\n                            {record.healthEvent?.eventName || record.eventName || 'Vaccination Event'}\r\n                          </Typography>\r\n                          \r\n                          {/* Show individual vaccines if available */}\r\n                          {record.vaccineNames && record.vaccineNames.length > 0 ? (\r\n                            <div className=\"mt-1\">\r\n                              <Typography variant=\"caption\" color=\"primary\" className=\"font-semibold\">\r\n                                {record.vaccineNames.length} vaccine{record.vaccineNames.length > 1 ? 's' : ''} in this event:\r\n                              </Typography>\r\n                              <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                                {record.vaccineNames.map((vaccine, index) => (\r\n                                  <Chip\r\n                                    key={index}\r\n                                    label={vaccine}\r\n                                    size=\"small\"\r\n                                    variant=\"outlined\"\r\n                                    color=\"secondary\"\r\n                                    sx={{ fontSize: '0.75rem', height: '20px' }}\r\n                                  />\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                          ) : record.individualVaccines && record.individualVaccines.length > 0 ? (\r\n                            <div className=\"mt-1\">\r\n                              <Typography variant=\"caption\" color=\"primary\" className=\"font-semibold\">\r\n                                {record.individualVaccines.length} vaccine{record.individualVaccines.length > 1 ? 's' : ''} in this event:\r\n                              </Typography>\r\n                              <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                                {record.individualVaccines.map((vaccine, index) => (\r\n                                  <Chip\r\n                                    key={index}\r\n                                    label={vaccine.vaccineName || 'Unknown Vaccine'}\r\n                                    size=\"small\"\r\n                                    variant=\"outlined\"\r\n                                    color=\"secondary\"\r\n                                    sx={{ fontSize: '0.75rem', height: '20px' }}\r\n                                  />\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                          ) : record.vaccineName ? (\r\n                            <div className=\"mt-1\">\r\n                              <Typography variant=\"caption\" color=\"primary\" className=\"font-semibold\">\r\n                                1 vaccine in this event:\r\n                              </Typography>\r\n                              <div className=\"mt-1\">\r\n                                <Chip\r\n                                  label={record.vaccineName}\r\n                                  size=\"small\"\r\n                                  variant=\"outlined\"\r\n                                  color=\"secondary\"\r\n                                  sx={{ fontSize: '0.75rem', height: '20px' }}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          ) : (\r\n                            <Typography variant=\"caption\" color=\"textSecondary\" className=\"italic\">\r\n                              Vaccine information not available\r\n                            </Typography>\r\n                          )}\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell>{new Date(record.administeredDate || record.scheduledDate).toLocaleDateString()}</TableCell>\r\n                      <TableCell>\r\n                        <Chip\r\n                          label={\r\n                            record.consentStatus === 'REJECTED' ? 'DECLINED' : \r\n                            record.consentStatus === 'APPROVED' ? 'APPROVED' :\r\n                            record.status === 'missed' && record.consentStatus !== 'APPROVED' ? 'DECLINED' :\r\n                            (record.consentStatus || 'PENDING')\r\n                          }\r\n                          color={\r\n                            record.consentStatus === 'REJECTED' || (record.status === 'missed' && record.consentStatus !== 'APPROVED') ? 'error' :\r\n                            record.consentStatus === 'APPROVED' ? 'success' : 'warning'\r\n                          }\r\n                          size=\"small\"\r\n                        />\r\n                        {record.consentDate && (\r\n                          <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\">\r\n                            {new Date(record.consentDate).toLocaleDateString()}\r\n                          </Typography>\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {record.nextDueDate ? new Date(record.nextDueDate).toLocaleDateString() : 'N/A'}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {record.reactions.length > 0 ? (\r\n                          record.reactions.map((reaction, index) => (\r\n                            <Chip key={index} label={reaction} size=\"small\" className=\"mr-1\" />\r\n                          ))\r\n                        ) : (\r\n                          <Typography variant=\"caption\" color=\"textSecondary\">None</Typography>\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Chip\r\n                          label={record.status}\r\n                          color={getStatusColor(record.status)}\r\n                          size=\"small\"\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Tooltip title=\"Update Vaccination\">\r\n                          <IconButton \r\n                            color=\"primary\"\r\n                            onClick={() => handleUpdateVaccination(record)}\r\n                            disabled={record.consentStatus !== 'APPROVED'}\r\n                          >\r\n                            <CheckCircleIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Delete\">\r\n                          <IconButton color=\"error\" onClick={() => handleDeleteVaccination(record)}>\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n              <TablePagination\r\n                component=\"div\"\r\n                count={filteredRecords.length}\r\n                rowsPerPage={10}\r\n                page={page}\r\n                onPageChange={(event, newPage) => setPage(newPage)}\r\n                rowsPerPageOptions={[]}\r\n              />\r\n            </TableContainer>\r\n          )}\r\n\r\n          {activeTab === 1 && (\r\n            <Grid container spacing={3}>\r\n              {filteredCampaigns.map((campaign) => (\r\n                <Grid item xs={12} md={6} lg={4} key={campaign.id}>\r\n                  <Card>\r\n                    <CardHeader\r\n                      title={campaign.campaignName}\r\n                      subheader={`${campaign.vaccineType} - ${campaign.targetGrades.join(', ')}`}\r\n                      action={\r\n                        <Chip\r\n                          label={campaign.status}\r\n                          color={getStatusColor(campaign.status)}\r\n                          size=\"small\"\r\n                        />\r\n                      }\r\n                    />\r\n                    <CardContent>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\" className=\"mb-2\">\r\n                        {campaign.description}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" className=\"mb-2\">\r\n                        <strong>Period:</strong> {new Date(campaign.startDate).toLocaleDateString()} - {new Date(campaign.endDate).toLocaleDateString()}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" className=\"mb-2\">\r\n                        <strong>Venue:</strong> {campaign.venue}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" className=\"mb-2\">\r\n                        <strong>Provider:</strong> {campaign.provider}\r\n                      </Typography>\r\n                      <div className=\"mt-4\">\r\n                        <Box className=\"flex justify-between items-center mb-2\">\r\n                          <Typography variant=\"body2\">Progress</Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {campaign.completedStudents}/{campaign.totalStudents} ({getCompletionPercentage(campaign.completedStudents, campaign.totalStudents)}%)\r\n                          </Typography>\r\n                        </Box>\r\n                        <LinearProgress\r\n                          variant=\"determinate\"\r\n                          value={getCompletionPercentage(campaign.completedStudents, campaign.totalStudents)}\r\n                          className=\"mb-2\"\r\n                        />\r\n                      </div>\r\n                      <Box className=\"flex gap-2 mt-3\">\r\n                        <Button\r\n                          size=\"small\"\r\n                          startIcon={<EditIcon />}\r\n                          onClick={() => handleEditCampaign(campaign)}\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                        <Button\r\n                          size=\"small\"\r\n                          startIcon={<EventAvailableIcon />}\r\n                          color=\"primary\"\r\n                        >\r\n                          Schedule\r\n                        </Button>\r\n                      </Box>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          )}\r\n\r\n          {activeTab === 2 && (\r\n            <div className=\"text-center py-8\">\r\n              <ScheduleIcon className=\"text-6xl text-gray-400 mb-4\" />\r\n              <Typography variant=\"h6\" color=\"textSecondary\">\r\n                Vaccination Schedule\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" className=\"mb-4\">\r\n                View and manage upcoming vaccination schedules and appointments.\r\n              </Typography>\r\n              <Button variant=\"outlined\" startIcon={<ScheduleIcon />}>\r\n                View Schedule\r\n              </Button>\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 3 && (\r\n            <div className=\"text-center py-8\">\r\n              <BarChartIcon className=\"text-6xl text-gray-400 mb-4\" />\r\n              <Typography variant=\"h6\" color=\"textSecondary\">\r\n                Vaccination Reports\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" className=\"mb-4\">\r\n                Generate comprehensive reports on vaccination coverage, campaign effectiveness, and compliance rates.\r\n              </Typography>\r\n              <Button variant=\"outlined\" startIcon={<AssignmentIcon />}>\r\n                Generate Report\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Vaccination Record Dialog */}\r\n      <Dialog open={recordDialogOpen} onClose={() => setRecordDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>\r\n          {selectedRecord ? 'Edit Vaccination Record' : 'Add New Vaccination Record'}\r\n        </DialogTitle>\r\n        <form onSubmit={recordForm.handleSubmit(onRecordSubmit)}>\r\n          <DialogContent>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={6}>\r\n                <Autocomplete\r\n                  options={students}\r\n                  value={students.find(s => s.id === recordForm.watch('studentId')) || null}\r\n                  getOptionLabel={(option) => `${option.name} - Class ${option.grade}`}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Select Student\"\r\n                      required\r\n                      error={!!recordForm.formState.errors.studentId}\r\n                      helperText={recordForm.formState.errors.studentId?.message}\r\n                    />\r\n                  )}\r\n                  onChange={(event, value) => {\r\n                    recordForm.setValue('studentId', value?.id || '');\r\n                  }}\r\n                  isOptionEqualToValue={(option, value) => option.id === value.id}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel>Vaccine Type</InputLabel>\r\n                  <Select\r\n                    {...recordForm.register('vaccineType')}\r\n                    error={!!recordForm.formState.errors.vaccineType}\r\n                  >\r\n                    {vaccines.map((vaccine) => (\r\n                      <MenuItem key={vaccine.type} value={vaccine.type}>\r\n                        {vaccine.type}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Vaccine Name\"\r\n                  {...recordForm.register('vaccineName')}\r\n                  error={!!recordForm.formState.errors.vaccineName}\r\n                  helperText={recordForm.formState.errors.vaccineName?.message}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Batch Number\"\r\n                  {...recordForm.register('batchNumber')}\r\n                  error={!!recordForm.formState.errors.batchNumber}\r\n                  helperText={recordForm.formState.errors.batchNumber?.message}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      {...recordForm.register('consentGiven')}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Parent/Guardian consent has been obtained\"\r\n                />\r\n                {recordForm.formState.errors.consentGiven && (\r\n                  <Typography color=\"error\" variant=\"caption\">\r\n                    {recordForm.formState.errors.consentGiven?.message}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setRecordDialogOpen(false)}>Cancel</Button>\r\n            <Button type=\"submit\" variant=\"contained\">\r\n              {selectedRecord ? 'Update' : 'Add'} Record\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n\r\n      {/* Campaign Dialog */}\r\n      <Dialog open={campaignDialogOpen} onClose={() => setCampaignDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>\r\n          {selectedCampaign ? 'Edit Campaign' : 'Add New Campaign'}\r\n        </DialogTitle>\r\n        <form onSubmit={campaignForm.handleSubmit(onCampaignSubmit)}>\r\n          <DialogContent>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Campaign Name\"\r\n                  {...campaignForm.register('campaignName')}\r\n                  error={!!campaignForm.formState.errors.campaignName}\r\n                  helperText={campaignForm.formState.errors.campaignName?.message}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel>Vaccine Type</InputLabel>\r\n                  <Select\r\n                    {...campaignForm.register('vaccineType')}\r\n                    error={!!campaignForm.formState.errors.vaccineType}\r\n                  >\r\n                    {vaccines.map((vaccine) => (\r\n                      <MenuItem key={vaccine.type} value={vaccine.type}>\r\n                        {vaccine.type}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Autocomplete\r\n                  multiple\r\n                  options={gradeLevels}\r\n                  getOptionLabel={(option) => option.gradeName || `Grade ${option.gradeNumber}`}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Target Grades\"\r\n                      error={!!campaignForm.formState.errors.targetGrades}\r\n                      helperText={campaignForm.formState.errors.targetGrades?.message}\r\n                    />\r\n                  )}\r\n                  onChange={(event, value) => {\r\n                    // Convert selected grade levels to array of grade IDs\r\n                    const gradeIds = value.map(grade => grade.gradeId);\r\n                    campaignForm.setValue('targetGrades', gradeIds);\r\n                  }}\r\n                  renderOption={(props, option, { selected }) => (\r\n                    <li {...props}>\r\n                      <Checkbox\r\n                        style={{ marginRight: 8 }}\r\n                        checked={selected}\r\n                      />\r\n                      {option.gradeName} ({option.vietnameseName})\r\n                    </li>\r\n                  )}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setCampaignDialogOpen(false)}>Cancel</Button>\r\n            <Button type=\"submit\" variant=\"contained\">\r\n              {selectedCampaign ? 'Update' : 'Create'} Campaign\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n\r\n      {/* Vaccination Update Dialog */}\r\n      <Dialog open={updateDialogOpen} onClose={() => setUpdateDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>\r\n          Update Vaccination Record\r\n          {selectedUpdateRecord && (\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n              {selectedUpdateRecord.studentName} - {selectedUpdateRecord.vaccineName}\r\n            </Typography>\r\n          )}\r\n        </DialogTitle>\r\n        <form onSubmit={updateForm.handleSubmit(onUpdateSubmit)}>\r\n          <DialogContent>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Next Due Date *\"\r\n                  type=\"date\"\r\n                  {...updateForm.register('nextDueDate')}\r\n                  error={!!updateForm.formState.errors.nextDueDate}\r\n                  helperText={updateForm.formState.errors.nextDueDate?.message}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  required\r\n                  inputProps={{ required: true }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Dose *\"\r\n                  {...updateForm.register('dose')}\r\n                  error={!!updateForm.formState.errors.dose}\r\n                  helperText={updateForm.formState.errors.dose?.message}\r\n                  placeholder=\"e.g., 1st dose, 2nd dose, Booster\"\r\n                  required\r\n                  inputProps={{ required: true }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Vaccine Name *\"\r\n                  {...updateForm.register('vaccineName')}\r\n                  error={!!updateForm.formState.errors.vaccineName}\r\n                  helperText={updateForm.formState.errors.vaccineName?.message}\r\n                  placeholder=\"e.g., BCG Vaccine, DPT Vaccine\"\r\n                  required\r\n                  inputProps={{ required: true }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl fullWidth error={!!updateForm.formState.errors.vaccinationStatus}>\r\n                  <InputLabel>Vaccination Status *</InputLabel>\r\n                  <Select\r\n                    {...updateForm.register('vaccinationStatus')}\r\n                    required\r\n                  >\r\n                    <MenuItem value=\"COMPLETED\">Completed</MenuItem>\r\n                    <MenuItem value=\"SCHEDULED\">Scheduled</MenuItem>\r\n                    <MenuItem value=\"MISSED\">Missed</MenuItem>\r\n                  </Select>\r\n                  {updateForm.formState.errors.vaccinationStatus && (\r\n                    <Typography variant=\"caption\" color=\"error\" sx={{ mt: 1, ml: 2 }}>\r\n                      {updateForm.formState.errors.vaccinationStatus.message}\r\n                    </Typography>\r\n                  )}\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Adverse Reactions *\"\r\n                  multiline\r\n                  rows={3}\r\n                  placeholder=\"Enter any adverse reactions or symptoms separated by commas (required)\"\r\n                  error={!!updateForm.formState.errors.reactions}\r\n                  helperText={updateForm.formState.errors.reactions?.message || \"Please enter 'None' if no adverse reactions occurred\"}\r\n                  defaultValue={updateForm.getValues('reactions')?.join(', ')}\r\n                  onChange={(e) => {\r\n                    const reactions = e.target.value.split(',').map(r => r.trim()).filter(r => r);\r\n                    updateForm.setValue('reactions', reactions);\r\n                    updateForm.trigger('reactions'); // Trigger validation\r\n                  }}\r\n                  required\r\n                  inputProps={{ required: true }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Notes *\"\r\n                  multiline\r\n                  rows={3}\r\n                  {...updateForm.register('notes')}\r\n                  error={!!updateForm.formState.errors.notes}\r\n                  helperText={updateForm.formState.errors.notes?.message}\r\n                  placeholder=\"Additional notes about the vaccination (required)\"\r\n                  required\r\n                  inputProps={{ required: true }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setUpdateDialogOpen(false)}>Cancel</Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Update Vaccination\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VaccinationManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}