{"ast":null,"code":"// Grade Level Selection Component\n// File: frontend/src/components/shared/GradeLevelSelector.jsx\nimport React,{useState}from'react';import{FormControl,InputLabel,Select,MenuItem,Checkbox,ListItemText,Chip,Box,FormHelperText,OutlinedInput}from'@mui/material';import{useGradeLevels}from'../../hooks/useGradeLevels';import{useUIText}from'../../hooks/useUIText';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GradeLevelSelector=_ref=>{let{value=[],onChange,multiple=true,label,helperText,error=false,disabled=false,useVietnamese=false,required=false,sx={}}=_ref;const{t}=useUIText();const{gradeLevels,loading,getGradeSelectOptionsByName}=useGradeLevels();const[open,setOpen]=useState(false);// Compute gradeOptions only when gradeLevels or useVietnamese changes\nconst gradeOptions=React.useMemo(()=>{return getGradeSelectOptionsByName(useVietnamese);},[getGradeSelectOptionsByName,useVietnamese]);// Debug logging - only log when values actually change\nReact.useEffect(()=>{console.log('GradeLevelSelector - gradeLevels:',gradeLevels);console.log('GradeLevelSelector - gradeOptions:',gradeOptions);console.log('GradeLevelSelector - loading:',loading);},[gradeLevels,gradeOptions,loading]);const handleChange=event=>{const selectedValue=event.target.value;if(multiple){// For multiple selection, ensure value is always an array\nconst newValue=typeof selectedValue==='string'?selectedValue.split(','):selectedValue;onChange(newValue);}else{// For single selection\nonChange(selectedValue);}};const handleDelete=gradeToDelete=>{if(multiple){const newValue=value.filter(grade=>grade!==gradeToDelete);onChange(newValue);}};const renderValue=selected=>{if(!multiple){const option=gradeOptions.find(opt=>opt.value===selected);return option?option.label:'';}if(selected.length===0){return'';}return/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexWrap:'wrap',gap:0.5},children:selected.map(gradeValue=>{const option=gradeOptions.find(opt=>opt.value===gradeValue);return/*#__PURE__*/_jsx(Chip,{label:option?option.label:gradeValue,size:\"small\",onDelete:()=>handleDelete(gradeValue),onMouseDown:event=>event.stopPropagation()},gradeValue);})});};if(loading){return/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,sx:sx,children:[/*#__PURE__*/_jsx(InputLabel,{children:label||t.gradeLevels}),/*#__PURE__*/_jsx(Select,{disabled:true,children:/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:/*#__PURE__*/_jsx(\"em\",{children:t.loading})})})]});}return/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,error:error,sx:sx,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"grade-level-selector-label\",required:required,children:label||t.gradeLevels}),/*#__PURE__*/_jsx(Select,{labelId:\"grade-level-selector-label\",multiple:multiple,value:value,onChange:handleChange,input:/*#__PURE__*/_jsx(OutlinedInput,{label:label||t.gradeLevels}),renderValue:renderValue,disabled:disabled,open:open,onOpen:()=>setOpen(true),onClose:()=>setOpen(false),MenuProps:{PaperProps:{style:{maxHeight:300,width:250}}},children:gradeOptions.map(option=>/*#__PURE__*/_jsxs(MenuItem,{value:option.value,children:[multiple&&/*#__PURE__*/_jsx(Checkbox,{checked:value.indexOf(option.value)>-1,size:\"small\"}),/*#__PURE__*/_jsx(ListItemText,{primary:option.label,primaryTypographyProps:{fontSize:'0.875rem'}})]},option.value))}),helperText&&/*#__PURE__*/_jsx(FormHelperText,{children:helperText})]});};export default GradeLevelSelector;","map":{"version":3,"names":["React","useState","FormControl","InputLabel","Select","MenuItem","Checkbox","ListItemText","Chip","Box","FormHelperText","OutlinedInput","useGradeLevels","useUIText","jsx","_jsx","jsxs","_jsxs","GradeLevelSelector","_ref","value","onChange","multiple","label","helperText","error","disabled","useVietnamese","required","sx","t","gradeLevels","loading","getGradeSelectOptionsByName","open","setOpen","gradeOptions","useMemo","useEffect","console","log","handleChange","event","selectedValue","target","newValue","split","handleDelete","gradeToDelete","filter","grade","renderValue","selected","option","find","opt","length","display","flexWrap","gap","children","map","gradeValue","size","onDelete","onMouseDown","stopPropagation","fullWidth","id","labelId","input","onOpen","onClose","MenuProps","PaperProps","style","maxHeight","width","checked","indexOf","primary","primaryTypographyProps","fontSize"],"sources":["C:/Users/trand/OneDrive/Documents/GitHub/SchoolMedicalManagement/SchoolMedicalManagement/frontend/src/components/shared/GradeLevelSelector.jsx"],"sourcesContent":["// Grade Level Selection Component\r\n// File: frontend/src/components/shared/GradeLevelSelector.jsx\r\n\r\nimport React, { useState } from 'react';\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Checkbox,\r\n  ListItemText,\r\n  Chip,\r\n  Box,\r\n  FormHelperText,\r\n  OutlinedInput\r\n} from '@mui/material';\r\nimport { useGradeLevels } from '../../hooks/useGradeLevels';\r\nimport { useUIText } from '../../hooks/useUIText';\r\n\r\nconst GradeLevelSelector = ({\r\n  value = [],\r\n  onChange,\r\n  multiple = true,\r\n  label,\r\n  helperText,\r\n  error = false,\r\n  disabled = false,\r\n  useVietnamese = false,\r\n  required = false,\r\n  sx = {}\r\n}) => {\r\n  const { t } = useUIText();\r\n  const { gradeLevels, loading, getGradeSelectOptionsByName } = useGradeLevels();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // Compute gradeOptions only when gradeLevels or useVietnamese changes\r\n  const gradeOptions = React.useMemo(() => {\r\n    return getGradeSelectOptionsByName(useVietnamese);\r\n  }, [getGradeSelectOptionsByName, useVietnamese]);\r\n  \r\n  // Debug logging - only log when values actually change\r\n  React.useEffect(() => {\r\n    console.log('GradeLevelSelector - gradeLevels:', gradeLevels);\r\n    console.log('GradeLevelSelector - gradeOptions:', gradeOptions);\r\n    console.log('GradeLevelSelector - loading:', loading);\r\n  }, [gradeLevels, gradeOptions, loading]);\r\n\r\n  const handleChange = (event) => {\r\n    const selectedValue = event.target.value;\r\n    \r\n    if (multiple) {\r\n      // For multiple selection, ensure value is always an array\r\n      const newValue = typeof selectedValue === 'string' ? \r\n        selectedValue.split(',') : selectedValue;\r\n      onChange(newValue);\r\n    } else {\r\n      // For single selection\r\n      onChange(selectedValue);\r\n    }\r\n  };\r\n\r\n  const handleDelete = (gradeToDelete) => {\r\n    if (multiple) {\r\n      const newValue = value.filter(grade => grade !== gradeToDelete);\r\n      onChange(newValue);\r\n    }\r\n  };\r\n\r\n  const renderValue = (selected) => {\r\n    if (!multiple) {\r\n      const option = gradeOptions.find(opt => opt.value === selected);\r\n      return option ? option.label : '';\r\n    }\r\n\r\n    if (selected.length === 0) {\r\n      return '';\r\n    }\r\n\r\n    return (\r\n      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n        {selected.map((gradeValue) => {\r\n          const option = gradeOptions.find(opt => opt.value === gradeValue);\r\n          return (\r\n            <Chip\r\n              key={gradeValue}\r\n              label={option ? option.label : gradeValue}\r\n              size=\"small\"\r\n              onDelete={() => handleDelete(gradeValue)}\r\n              onMouseDown={(event) => event.stopPropagation()}\r\n            />\r\n          );\r\n        })}\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <FormControl fullWidth sx={sx}>\r\n        <InputLabel>{label || t.gradeLevels}</InputLabel>\r\n        <Select disabled>\r\n          <MenuItem value=\"\">\r\n            <em>{t.loading}</em>\r\n          </MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <FormControl fullWidth error={error} sx={sx}>\r\n      <InputLabel id=\"grade-level-selector-label\" required={required}>\r\n        {label || t.gradeLevels}\r\n      </InputLabel>\r\n      <Select\r\n        labelId=\"grade-level-selector-label\"\r\n        multiple={multiple}\r\n        value={value}\r\n        onChange={handleChange}\r\n        input={<OutlinedInput label={label || t.gradeLevels} />}\r\n        renderValue={renderValue}\r\n        disabled={disabled}\r\n        open={open}\r\n        onOpen={() => setOpen(true)}\r\n        onClose={() => setOpen(false)}\r\n        MenuProps={{\r\n          PaperProps: {\r\n            style: {\r\n              maxHeight: 300,\r\n              width: 250,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        {gradeOptions.map((option) => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {multiple && (\r\n              <Checkbox \r\n                checked={value.indexOf(option.value) > -1}\r\n                size=\"small\"\r\n              />\r\n            )}\r\n            <ListItemText \r\n              primary={option.label}\r\n              primaryTypographyProps={{\r\n                fontSize: '0.875rem'\r\n              }}\r\n            />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      {helperText && (\r\n        <FormHelperText>{helperText}</FormHelperText>\r\n      )}\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default GradeLevelSelector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}