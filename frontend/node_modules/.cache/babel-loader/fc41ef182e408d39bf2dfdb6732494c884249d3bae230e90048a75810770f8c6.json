{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Card,CardContent,Typography,Grid,Tab,Tabs,Chip,Button,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,TextField,InputAdornment,Avatar,Alert,FormControl,InputLabel,Select,MenuItem,CircularProgress,Dialog,DialogTitle,DialogContent,DialogActions,IconButton}from'@mui/material';import{HealthAndSafety,Search,CheckCircle,LocalHospital,CalendarToday,Person,Schedule,Visibility,Close}from'@mui/icons-material';import{format,parseISO}from'date-fns';import{getParentStudents,getUpcomingHealthEventsForStudent,getStudentHealthCheckupsByStudentId,getAllHealthEvents}from'../../utils/api';import{useAuth}from'../../context/AuthContext';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function TabPanel(_ref){let{children,value,index,...other}=_ref;return/*#__PURE__*/_jsx(\"div\",{role:\"tabpanel\",hidden:value!==index,id:`checkup-tabpanel-${index}`,\"aria-labelledby\":`checkup-tab-${index}`,...other,children:value===index&&/*#__PURE__*/_jsx(Box,{sx:{py:3},children:children})});}const CheckupInformation=()=>{const{currentUser}=useAuth();const[activeTab,setActiveTab]=useState(0);const[searchTerm,setSearchTerm]=useState('');const[data,setData]=useState({student:null,summary:{totalCheckups:0,completedThisYear:0,upcomingCheckups:0,averageScore:0,lastCheckup:null},checkupHistory:[],upcomingCheckups:[]});const[students,setStudents]=useState([]);const[selectedStudent,setSelectedStudent]=useState('');const[healthEvents,setHealthEvents]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[detailDialogOpen,setDetailDialogOpen]=useState(false);const[selectedCheckupDetail,setSelectedCheckupDetail]=useState(null);const[lastEventCount,setLastEventCount]=useState(0);// Helper function to format conducted by name for display\nconst formatConductedByName=conductedBy=>{if(!conductedBy)return'N/A';// Since parents don't have access to nurses data, format the username nicely\n// If it looks like a username (contains dots, no spaces), try to format it\nif(conductedBy.includes('.')&&!conductedBy.includes(' ')){// Convert \"nurse.johnson\" to \"Nurse Johnson\"\nreturn conductedBy.split('.').map(part=>part.charAt(0).toUpperCase()+part.slice(1).toLowerCase()).join(' ');}// Return as is if it already looks like a proper name\nreturn conductedBy;};// Helper function to get event name\nconst getEventName=eventId=>{if(!eventId)return'General Health Checkup';const event=healthEvents.find(e=>e.id===eventId);return event?event.name:'General Health Checkup';};// Helper function to check if any checkup has BMI data\nconst hasBMIData=checkups=>{return checkups&&checkups.some(checkup=>checkup.bmi&&checkup.bmi!==null&&checkup.bmi!=='');};const handleTabChange=(event,newValue)=>{setActiveTab(newValue);};const handleStudentChange=async event=>{const studentCode=event.target.value;setSelectedStudent(studentCode);await loadCheckupData(studentCode);};const loadCheckupData=async studentCode=>{try{setLoading(true);// Get checkup history for this student and filter health events for their grade\n// Handle each API call separately to prevent one failure from affecting the other\nconst[checkupHistory]=await Promise.all([getStudentHealthCheckupsByStudentId(studentCode).catch(error=>{return[];// Return empty array if this fails\n})]);// Get student info to determine their grade\nconst studentInfo=students.find(s=>s.studentCode===studentCode);const studentGrade=(studentInfo===null||studentInfo===void 0?void 0:studentInfo.gradeLevel)||(studentInfo===null||studentInfo===void 0?void 0:studentInfo.grade)||(studentInfo===null||studentInfo===void 0?void 0:studentInfo.gradeName);// Filter health events for this student's grade and future dates\nconst today=new Date();today.setHours(0,0,0,0);// Set to start of day for comparison\nconst upcomingEvents=healthEvents.filter(event=>{var _event$status;// Check if event is not completed or cancelled\nconst validStatuses=['SCHEDULED','IN_PROGRESS','POSTPONED'];const eventStatus=(_event$status=event.status)===null||_event$status===void 0?void 0:_event$status.toUpperCase();if(eventStatus&&!validStatuses.includes(eventStatus)){return false;}// Check if event date is in the future\nconst eventDate=new Date(event.scheduledDate||event.startDate);if(eventDate<today)return false;// If no student grade available, show all future events\nif(!studentGrade)return true;// Check if event is for this student's grade\nif(event.targetGradeNames&&Array.isArray(event.targetGradeNames)){const isForThisGrade=event.targetGradeNames.some(gradeName=>{// Extract numbers from both grade names for comparison\nconst eventGradeNumber=gradeName.replace(/[^\\d]/g,'');const studentGradeNumber=String(studentGrade).replace(/[^\\d]/g,'');// Also check if grade names match exactly (case insensitive)\nconst exactMatch=gradeName.toLowerCase()===String(studentGrade).toLowerCase();const numberMatch=eventGradeNumber&&studentGradeNumber&&eventGradeNumber===studentGradeNumber;return exactMatch||numberMatch;});return isForThisGrade;}return false;// If no target grades specified, don't show\n});// Transform the health events to match the expected format\nconst transformedUpcomingCheckups=upcomingEvents.map(event=>{var _event$status2;return{id:event.eventId||event.id,date:event.scheduledDate||event.startDate,type:event.eventName||'General Health Event',eventType:event.eventType||'HEALTH_CHECKUP',// Add event type\ncheckupTypes:event.typesOfCheckups||[],// For health checkup events\nvaccineNames:event.vaccineNames||[],// For vaccination events\nprovider:event.createdByUserName||'School Health Center',// Use nurse/staff name\nlocation:event.location||null,// Use actual location from form or null\nstatus:((_event$status2=event.status)===null||_event$status2===void 0?void 0:_event$status2.toLowerCase())||'scheduled',notes:event.description||null// Use actual description from form or null\n};});// Transform checkup history to match the expected format\nconst transformedCheckupHistory=Array.isArray(checkupHistory)?checkupHistory.map(checkup=>{return{id:checkup.checkupId||checkup.id,date:checkup.checkupDate,type:getEventName(checkup.eventId),provider:formatConductedByName(checkup.conductedBy),location:'School Health Center',// Default location\nstatus:'completed',overallScore:null,// Health checkups don't have scores in our system\nnotes:checkup.healthNotes||checkup.recommendations||'',followUpRequired:checkup.requiresFollowUp||false,followUpDate:checkup.followUpDate||null,followUpNotes:checkup.followUpNotes||null,// Include all the detailed checkup data for the detail view\n...checkup};}):[];// Calculate summary statistics\nconst currentYear=new Date().getFullYear();const completedThisYear=transformedCheckupHistory.filter(checkup=>new Date(checkup.date).getFullYear()===currentYear).length;const lastCheckup=transformedCheckupHistory.length>0?transformedCheckupHistory.sort((a,b)=>new Date(b.date)-new Date(a.date))[0].date:null;// Update the data state\nsetData(prevData=>({...prevData,checkupHistory:transformedCheckupHistory,upcomingCheckups:transformedUpcomingCheckups,summary:{totalCheckups:transformedCheckupHistory.length,completedThisYear:completedThisYear,upcomingCheckups:transformedUpcomingCheckups.length,averageScore:null,// We don't use scores in our system\nlastCheckup:lastCheckup}}));}catch(error){console.error('Error loading checkup data:',error);setError('Failed to load checkup data');// Set empty data on error\nsetData(prevData=>({...prevData,checkupHistory:[],upcomingCheckups:[],summary:{totalCheckups:0,completedThisYear:0,upcomingCheckups:0,averageScore:0,lastCheckup:null}}));}finally{setLoading(false);}};const loadStudents=async()=>{try{setLoading(true);setError(null);// Load students first (most critical)\nconst studentsData=await getParentStudents();if(studentsData&&studentsData.length>0){setStudents(studentsData);// Auto-select first student and load their checkup data\nconst firstStudent=studentsData[0];setSelectedStudent(firstStudent.studentCode);// Load health events in the background (parents don't need nurses data)\ngetAllHealthEvents().then(eventsData=>{// Set health events data\nif(Array.isArray(eventsData)){setHealthEvents(eventsData);setLastEventCount(eventsData.length);// Initialize count\n}else{setHealthEvents([]);}}).catch(error=>{setHealthEvents([]);});// Load checkup data for the first student\nawait loadCheckupData(firstStudent.studentCode);}else{setError('No students found for this parent account. Please contact the school administrator to ensure your account is properly linked to your child\\'s records.');}}catch(error){console.error('Error loading students:',error);if(error.response){// The request was made and the server responded with a status code\nconst status=error.response.status;if(status===401){setError('Authentication failed. Please log out and log back in.');}else if(status===403){setError('Access denied. Please ensure you have parent account permissions.');}else if(status===404){setError('Parent students API not found. Please contact support.');}else{setError(`Server error (${status}). Please try again later.`);}}else if(error.request){// The request was made but no response was received\nsetError('Unable to connect to the server. Please check your internet connection.');}else{// Something happened in setting up the request\nsetError('An unexpected error occurred. Please try again.');}}finally{setLoading(false);}};useEffect(()=>{loadStudents();},[]);// Reload checkup data when health events are loaded\nuseEffect(()=>{if(healthEvents.length>0&&selectedStudent){loadCheckupData(selectedStudent);}},[healthEvents]);// Depend on healthEvents changes\n// Auto-refresh health events every 30 seconds to catch new events from admin\nuseEffect(()=>{const interval=setInterval(()=>{getAllHealthEvents().then(eventsData=>{if(Array.isArray(eventsData)){// Check if new events were added\nif(lastEventCount>0&&eventsData.length>lastEventCount){// Show notification for new events\n}setHealthEvents(eventsData);setLastEventCount(eventsData.length);}}).catch(error=>{});},30000);// 30 seconds\nreturn()=>clearInterval(interval);},[lastEventCount]);// Depend on lastEventCount\nconst getSelectedStudentInfo=()=>{return students.find(student=>student.studentCode===selectedStudent);};const filteredCheckups=data.checkupHistory.filter(checkup=>{const matchesSearch=checkup.type.toLowerCase().includes(searchTerm.toLowerCase())||checkup.provider.toLowerCase().includes(searchTerm.toLowerCase());return matchesSearch;});const getStatusColor=status=>{switch(status){case'completed':return'success';case'scheduled':return'primary';case'pending':return'warning';default:return'default';}};const getStatusIcon=status=>{switch(status){case'completed':return/*#__PURE__*/_jsx(CheckCircle,{});case'scheduled':return/*#__PURE__*/_jsx(Schedule,{});default:return/*#__PURE__*/_jsx(LocalHospital,{});}};const selectedStudentInfo=getSelectedStudentInfo();const handleViewDetails=checkup=>{setSelectedCheckupDetail(checkup);setDetailDialogOpen(true);};const handleCloseDetails=()=>{setDetailDialogOpen(false);setSelectedCheckupDetail(null);};if(loading){return/*#__PURE__*/_jsx(Box,{className:\"p-6 bg-gray-50 min-h-screen flex items-center justify-center\",children:/*#__PURE__*/_jsx(CircularProgress,{})});}return/*#__PURE__*/_jsxs(Box,{className:\"p-6 bg-gray-50 min-h-screen\",children:[/*#__PURE__*/_jsxs(Box,{className:\"mb-6\",children:[/*#__PURE__*/_jsxs(Box,{className:\"flex items-center gap-3 mb-4\",children:[/*#__PURE__*/_jsx(HealthAndSafety,{className:\"text-blue-600\",sx:{fontSize:32}}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",className:\"font-bold text-gray-800\",children:\"Check up Information\"})]}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:\"text-gray-600\",children:\"View your child's upcoming health checkups and complete health checkup history.\"})]}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",className:\"mb-6\",children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:\"mb-2\",children:error}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",size:\"small\",onClick:()=>{setError(null);loadStudents();},sx:{mt:1},children:\"Try Again\"})]})}),students.length>0?/*#__PURE__*/_jsx(Card,{className:\"mb-6 border-l-4 border-blue-400\",children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:\"mb-3 font-semibold text-blue-700\",children:students.length>1?`Select Your Child (${students.length} children)`:'Your Child'}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:students.length>1?'Choose which child to view checkup information for':'Student information'}),/*#__PURE__*/_jsx(Select,{value:selectedStudent,onChange:handleStudentChange,label:students.length>1?'Choose which child to view checkup information for':'Student information',sx:{'& .MuiSelect-select':{display:'flex',alignItems:'center',gap:2}},children:students.map(student=>/*#__PURE__*/_jsx(MenuItem,{value:student.studentCode,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:\"font-semibold text-gray-800\",children:student.fullName})},student.studentCode))})]}),students.length>1&&!selectedStudent&&/*#__PURE__*/_jsx(Box,{className:\"mt-3 p-3 bg-amber-50 rounded-lg border border-amber-200\",children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-amber-700 flex items-center gap-2\",children:\"Please select one of your children to view their checkup information.\"})})]})}):/*#__PURE__*/_jsx(Card,{className:\"mb-6 border-l-4 border-red-400\",children:/*#__PURE__*/_jsxs(CardContent,{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(Person,{sx:{fontSize:48,color:'text.secondary',mb:2}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:\"mb-2 text-red-700\",children:\"No Students Found\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-600\",children:\"No student information found for this parent account.\"})]})}),selectedStudent&&selectedStudentInfo&&/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,className:\"mb-6\",children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{className:\"flex items-center gap-4\",children:[/*#__PURE__*/_jsx(Avatar,{className:\"bg-blue-500\",sx:{width:64,height:64},children:selectedStudentInfo.fullName.split(' ').map(n=>n[0]).join('')}),/*#__PURE__*/_jsxs(Box,{className:\"flex-1\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",className:\"font-semibold mb-1\",children:selectedStudentInfo.fullName}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",className:\"text-gray-600 mb-2\",children:[selectedStudentInfo.gradeLevel||'Grade N/A',\" \\u2022 Student Code: \",selectedStudentInfo.studentCode]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",className:\"text-gray-500\",children:[\"Last Checkup: \",data.summary.lastCheckup?format(parseISO(data.summary.lastCheckup),'MMMM dd, yyyy'):'No checkups yet']})]})]})})})})}),selectedStudent&&selectedStudentInfo&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Box,{sx:{borderBottom:1,borderColor:'divider',mb:3},children:/*#__PURE__*/_jsxs(Tabs,{value:activeTab,onChange:handleTabChange,children:[/*#__PURE__*/_jsx(Tab,{label:\"Upcoming Checkups\"}),/*#__PURE__*/_jsx(Tab,{label:\"Checkup History\"})]})}),/*#__PURE__*/_jsx(TabPanel,{value:activeTab,index:0,children:data.upcomingCheckups.length>0?/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:data.upcomingCheckups.map(checkup=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{className:\"border-l-4 border-l-blue-500\",children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{className:\"flex justify-between items-start mb-3\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:\"font-semibold\",children:checkup.type}),/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(Schedule,{}),label:\"Scheduled\",color:\"info\",size:\"small\"})]}),/*#__PURE__*/_jsxs(Box,{className:\"flex items-center gap-2 mb-2\",children:[/*#__PURE__*/_jsx(CalendarToday,{className:\"text-gray-500\",fontSize:\"small\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-600\",children:format(parseISO(checkup.date),'MMMM dd, yyyy')})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",className:\"text-gray-600 mb-2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Provider:\"}),\" \",checkup.provider]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",className:\"text-gray-600 mb-2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Location:\"}),\" \",checkup.location]}),/*#__PURE__*/_jsx(Box,{className:\"mb-3\",children:checkup.eventType==='VACCINATION'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-700 font-semibold mb-1\",children:\"Vaccination Event - Vaccines Included:\"}),checkup.vaccineNames&&checkup.vaccineNames.length>0?/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Box,{className:\"flex flex-wrap gap-1 mb-2\",children:checkup.vaccineNames.map((vaccine,index)=>/*#__PURE__*/_jsx(Chip,{label:vaccine,variant:\"outlined\",size:\"small\",color:\"secondary\",sx:{borderStyle:'dashed',borderWidth:'2px',borderColor:'secondary.main'}},index))}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",className:\"text-gray-500 italic\",children:checkup.vaccineNames.length===1?'This vaccination event includes 1 vaccine':`This vaccination event includes ${checkup.vaccineNames.length} vaccines administered together`})]}):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-500 italic\",children:\"No specific vaccines specified - General vaccination event\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-700 font-semibold mb-1\",children:\"Health Checkup - Types:\"}),checkup.checkupTypes&&checkup.checkupTypes.length>0?/*#__PURE__*/_jsx(Box,{className:\"flex flex-wrap gap-1\",children:checkup.checkupTypes.map((type,index)=>/*#__PURE__*/_jsx(Chip,{label:type,variant:\"outlined\",size:\"small\",color:\"primary\"},index))}):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-500 italic\",children:\"No specific checkup types specified - General health checkup\"})]})}),checkup.notes&&checkup.notes.trim()!==''&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",className:\"text-gray-600 mt-3\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Notes:\"}),\" \",checkup.notes]}),/*#__PURE__*/_jsx(Box,{className:\"mt-4 pt-3 border-t border-gray-200\",children:/*#__PURE__*/_jsx(Button,{startIcon:/*#__PURE__*/_jsx(Visibility,{}),variant:\"outlined\",color:\"primary\",size:\"small\",onClick:()=>handleViewDetails(checkup),fullWidth:true,children:\"View Details\"})})]})})},checkup.id))}):/*#__PURE__*/_jsxs(Paper,{className:\"p-8 text-center\",children:[/*#__PURE__*/_jsx(Schedule,{className:\"text-gray-400 mb-4\",sx:{fontSize:48}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:\"text-gray-600 mb-2\",children:\"No Upcoming Checkups\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-500\",children:\"All scheduled checkups are up to date.\"})]})}),/*#__PURE__*/_jsxs(TabPanel,{value:activeTab,index:1,children:[/*#__PURE__*/_jsx(Box,{className:\"mb-4\",children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,placeholder:\"Search checkups...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(Search,{})})},sx:{maxWidth:400}})}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Date\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Type\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Provider\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Location\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Status\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:filteredCheckups.map(checkup=>/*#__PURE__*/_jsxs(TableRow,{className:\"hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(TableCell,{children:format(parseISO(checkup.date),'MMM dd, yyyy')}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"font-semibold\",children:checkup.type})}),/*#__PURE__*/_jsx(TableCell,{children:checkup.provider}),/*#__PURE__*/_jsx(TableCell,{children:checkup.location}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{icon:getStatusIcon(checkup.status),label:checkup.status.charAt(0).toUpperCase()+checkup.status.slice(1),color:getStatusColor(checkup.status),size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Button,{startIcon:/*#__PURE__*/_jsx(Visibility,{}),size:\"small\",variant:\"outlined\",onClick:()=>handleViewDetails(checkup),sx:{mr:1},children:\"View Details\"})})]},checkup.id))})]})}),filteredCheckups.some(checkup=>checkup.followUpRequired)&&/*#__PURE__*/_jsx(Box,{className:\"mt-4\",children:/*#__PURE__*/_jsxs(Alert,{severity:\"warning\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",className:\"mb-2\",children:\"Follow-up Required\"}),filteredCheckups.filter(checkup=>checkup.followUpRequired).map(checkup=>/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"\\u2022 \",checkup.type,\" on \",format(parseISO(checkup.date),'MMM dd, yyyy'),\" - Follow-up needed by \",format(parseISO(checkup.followUpDate),'MMM dd, yyyy')]},checkup.id))]})})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:detailDialogOpen,onClose:handleCloseDetails,maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:/*#__PURE__*/_jsxs(Box,{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:\"font-semibold\",children:\"Checkup Details\"}),/*#__PURE__*/_jsx(IconButton,{onClick:handleCloseDetails,size:\"small\",children:/*#__PURE__*/_jsx(Close,{})})]})}),/*#__PURE__*/_jsx(DialogContent,{dividers:true,children:selectedCheckupDetail&&/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:\"mb-3 text-blue-700 font-semibold\",children:\"Basic Information\"}),/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-600 mb-1\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Date:\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:format(parseISO(selectedCheckupDetail.date),'MMMM dd, yyyy')})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-600 mb-1\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Name:\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:selectedCheckupDetail.type})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-600 mb-1\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Conducted By:\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:selectedCheckupDetail.provider})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-600 mb-1\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Status:\"})}),/*#__PURE__*/_jsx(Chip,{icon:getStatusIcon(selectedCheckupDetail.status),label:selectedCheckupDetail.status.charAt(0).toUpperCase()+selectedCheckupDetail.status.slice(1),color:getStatusColor(selectedCheckupDetail.status),size:\"small\"})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-600 mb-1\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Health Status:\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:selectedCheckupDetail.generalHealthStatus||'Not specified'})]})]})})})]}),selectedCheckupDetail.eventType!=='VACCINATION'&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:\"mb-3 text-blue-700 font-semibold\",children:\"Physical Measurements\"}),/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-600 mb-1\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Height:\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:selectedCheckupDetail.height?`${selectedCheckupDetail.height} cm`:'N/A'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-600 mb-1\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Weight:\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:selectedCheckupDetail.weight?`${selectedCheckupDetail.weight} kg`:'N/A'})]}),hasBMIData([selectedCheckupDetail])&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-600 mb-1\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"BMI:\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:selectedCheckupDetail.bmi?selectedCheckupDetail.bmi.toFixed(1):'N/A'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-600 mb-1\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Heart Rate:\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:selectedCheckupDetail.heartRate?`${selectedCheckupDetail.heartRate} bpm`:'N/A'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-600 mb-1\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Temperature:\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:selectedCheckupDetail.temperature?`${selectedCheckupDetail.temperature}°C`:'N/A'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-600 mb-1\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Blood Pressure:\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:selectedCheckupDetail.bloodPressureSystolic&&selectedCheckupDetail.bloodPressureDiastolic?`${selectedCheckupDetail.bloodPressureSystolic}/${selectedCheckupDetail.bloodPressureDiastolic} mmHg`:'N/A'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-600 mb-1\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Vision Left:\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:selectedCheckupDetail.visionLeft||'N/A'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-600 mb-1\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Vision Right:\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:selectedCheckupDetail.visionRight||'N/A'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-600 mb-1\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Hearing Left:\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:selectedCheckupDetail.hearingLeft||'N/A'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-600 mb-1\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Hearing Right:\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:selectedCheckupDetail.hearingRight||'N/A'})]})]})})})]}),(selectedCheckupDetail.healthNotes||selectedCheckupDetail.recommendations)&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:\"mb-3 text-blue-700 font-semibold\",children:\"Notes & Recommendations\"}),/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsxs(CardContent,{children:[selectedCheckupDetail.healthNotes&&/*#__PURE__*/_jsxs(Box,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-600 mb-1\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Health Notes:\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:\"text-gray-700\",children:selectedCheckupDetail.healthNotes})]}),selectedCheckupDetail.recommendations&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"text-gray-600 mb-1\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Recommendations:\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:\"text-gray-700\",children:selectedCheckupDetail.recommendations})]})]})})]}),selectedCheckupDetail.requiresFollowUp&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:\"mb-3 text-orange-700 font-semibold\",children:\"Follow-up Required\"}),/*#__PURE__*/_jsxs(Alert,{severity:\"warning\",children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[\"Follow-up appointment needed\",selectedCheckupDetail.followUpDate&&` by ${format(parseISO(selectedCheckupDetail.followUpDate),'MMMM dd, yyyy')}`]}),selectedCheckupDetail.followUpNotes&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",className:\"mt-2\",children:[\"Notes: \",selectedCheckupDetail.followUpNotes]})]})]}),selectedCheckupDetail.eventType==='VACCINATION'?selectedCheckupDetail.vaccineNames&&selectedCheckupDetail.vaccineNames.length>0&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:\"mb-3 text-blue-700 font-semibold\",children:\"Vaccination Event Details\"}),/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",className:\"mb-3 font-semibold text-purple-700\",children:[\"This vaccination event includes \",selectedCheckupDetail.vaccineNames.length,selectedCheckupDetail.vaccineNames.length===1?' vaccine':' vaccines',\" administered together:\"]}),/*#__PURE__*/_jsx(Box,{className:\"flex flex-wrap gap-2 mb-3\",children:selectedCheckupDetail.vaccineNames.map((vaccine,index)=>/*#__PURE__*/_jsx(Chip,{label:`${index+1}. ${vaccine}`,variant:\"outlined\",color:\"secondary\",size:\"medium\",sx:{borderStyle:'dashed',borderWidth:'2px',borderColor:'secondary.main',backgroundColor:'secondary.50'}},index))}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",className:\"text-gray-600 italic\",children:[\"All vaccines listed above are part of the same vaccination appointment scheduled for\",' ',format(parseISO(selectedCheckupDetail.date),'MMMM dd, yyyy')]})]})})]}):selectedCheckupDetail.checkupTypes&&selectedCheckupDetail.checkupTypes.length>0&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:\"mb-3 text-blue-700 font-semibold\",children:\"Health Checkup Types\"}),/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(Box,{className:\"flex flex-wrap gap-2\",children:selectedCheckupDetail.checkupTypes.map((type,index)=>/*#__PURE__*/_jsx(Chip,{label:type,variant:\"outlined\",color:\"primary\",size:\"medium\"},index))})})})]})]})}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:handleCloseDetails,color:\"primary\",children:\"Close\"})})]})]});};export default CheckupInformation;","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","Grid","Tab","Tabs","Chip","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TextField","InputAdornment","Avatar","Alert","FormControl","InputLabel","Select","MenuItem","CircularProgress","Dialog","DialogTitle","DialogContent","DialogActions","IconButton","HealthAndSafety","Search","CheckCircle","LocalHospital","CalendarToday","Person","Schedule","Visibility","Close","format","parseISO","getParentStudents","getUpcomingHealthEventsForStudent","getStudentHealthCheckupsByStudentId","getAllHealthEvents","useAuth","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TabPanel","_ref","children","value","index","other","role","hidden","id","sx","py","CheckupInformation","currentUser","activeTab","setActiveTab","searchTerm","setSearchTerm","data","setData","student","summary","totalCheckups","completedThisYear","upcomingCheckups","averageScore","lastCheckup","checkupHistory","students","setStudents","selectedStudent","setSelectedStudent","healthEvents","setHealthEvents","loading","setLoading","error","setError","detailDialogOpen","setDetailDialogOpen","selectedCheckupDetail","setSelectedCheckupDetail","lastEventCount","setLastEventCount","formatConductedByName","conductedBy","includes","split","map","part","charAt","toUpperCase","slice","toLowerCase","join","getEventName","eventId","event","find","e","name","hasBMIData","checkups","some","checkup","bmi","handleTabChange","newValue","handleStudentChange","studentCode","target","loadCheckupData","Promise","all","catch","studentInfo","s","studentGrade","gradeLevel","grade","gradeName","today","Date","setHours","upcomingEvents","filter","_event$status","validStatuses","eventStatus","status","eventDate","scheduledDate","startDate","targetGradeNames","Array","isArray","isForThisGrade","eventGradeNumber","replace","studentGradeNumber","String","exactMatch","numberMatch","transformedUpcomingCheckups","_event$status2","date","type","eventName","eventType","checkupTypes","typesOfCheckups","vaccineNames","provider","createdByUserName","location","notes","description","transformedCheckupHistory","checkupId","checkupDate","overallScore","healthNotes","recommendations","followUpRequired","requiresFollowUp","followUpDate","followUpNotes","currentYear","getFullYear","length","sort","a","b","prevData","console","loadStudents","studentsData","firstStudent","then","eventsData","response","request","interval","setInterval","clearInterval","getSelectedStudentInfo","filteredCheckups","matchesSearch","getStatusColor","getStatusIcon","selectedStudentInfo","handleViewDetails","handleCloseDetails","className","fontSize","variant","severity","size","onClick","mt","fullWidth","onChange","label","display","alignItems","gap","fullName","color","mb","container","spacing","item","xs","width","height","n","borderBottom","borderColor","md","icon","vaccine","borderStyle","borderWidth","trim","startIcon","placeholder","InputProps","startAdornment","position","maxWidth","component","mr","open","onClose","dividers","sm","generalHealthStatus","weight","toFixed","heartRate","temperature","bloodPressureSystolic","bloodPressureDiastolic","visionLeft","visionRight","hearingLeft","hearingRight","backgroundColor"],"sources":["C:/Users/trand/OneDrive/Documents/GitHub/SchoolMedicalManagement/SchoolMedicalManagement/frontend/src/pages/parent/CheckupInformation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  Tab,\r\n  Tabs,\r\n  Chip,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  TextField,\r\n  InputAdornment,\r\n  Avatar,\r\n  Alert,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton\r\n} from '@mui/material';\r\nimport {\r\n  HealthAndSafety,\r\n  Search,\r\n  CheckCircle,\r\n  LocalHospital,\r\n  CalendarToday,\r\n  Person,\r\n  Schedule,\r\n  Visibility,\r\n  Close\r\n} from '@mui/icons-material';\r\nimport { format, parseISO } from 'date-fns';\r\nimport { \r\n  getParentStudents, \r\n  getUpcomingHealthEventsForStudent,\r\n  getStudentHealthCheckupsByStudentId,\r\n  getAllHealthEvents\r\n} from '../../utils/api';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nfunction TabPanel({ children, value, index, ...other }) {\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`checkup-tabpanel-${index}`}\r\n      aria-labelledby={`checkup-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box sx={{ py: 3 }}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CheckupInformation = () => {\r\n  const { currentUser } = useAuth();\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [data, setData] = useState({\r\n    student: null,\r\n    summary: {\r\n      totalCheckups: 0,\r\n      completedThisYear: 0,\r\n      upcomingCheckups: 0,\r\n      averageScore: 0,\r\n      lastCheckup: null\r\n    },\r\n    checkupHistory: [],\r\n    upcomingCheckups: []\r\n  });\r\n  const [students, setStudents] = useState([]);\r\n  const [selectedStudent, setSelectedStudent] = useState('');\r\n  const [healthEvents, setHealthEvents] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [detailDialogOpen, setDetailDialogOpen] = useState(false);\r\n  const [selectedCheckupDetail, setSelectedCheckupDetail] = useState(null);\r\n  const [lastEventCount, setLastEventCount] = useState(0);\r\n\r\n  // Helper function to format conducted by name for display\r\n  const formatConductedByName = (conductedBy) => {\r\n    if (!conductedBy) return 'N/A';\r\n    \r\n    // Since parents don't have access to nurses data, format the username nicely\r\n    // If it looks like a username (contains dots, no spaces), try to format it\r\n    if (conductedBy.includes('.') && !conductedBy.includes(' ')) {\r\n      // Convert \"nurse.johnson\" to \"Nurse Johnson\"\r\n      return conductedBy\r\n        .split('.')\r\n        .map(part => part.charAt(0).toUpperCase() + part.slice(1).toLowerCase())\r\n        .join(' ');\r\n    }\r\n    \r\n    // Return as is if it already looks like a proper name\r\n    return conductedBy;\r\n  };\r\n\r\n  // Helper function to get event name\r\n  const getEventName = (eventId) => {\r\n    if (!eventId) return 'General Health Checkup';\r\n    const event = healthEvents.find(e => e.id === eventId);\r\n    return event ? event.name : 'General Health Checkup';\r\n  };\r\n\r\n  // Helper function to check if any checkup has BMI data\r\n  const hasBMIData = (checkups) => {\r\n    return checkups && checkups.some(checkup => checkup.bmi && checkup.bmi !== null && checkup.bmi !== '');\r\n  };\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setActiveTab(newValue);\r\n  };\r\n\r\n  const handleStudentChange = async (event) => {\r\n    const studentCode = event.target.value;\r\n    setSelectedStudent(studentCode);\r\n    await loadCheckupData(studentCode);\r\n  };\r\n\r\n  const loadCheckupData = async (studentCode) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Get checkup history for this student and filter health events for their grade\r\n      // Handle each API call separately to prevent one failure from affecting the other\r\n      const [checkupHistory] = await Promise.all([\r\n        getStudentHealthCheckupsByStudentId(studentCode).catch(error => {\r\n          return []; // Return empty array if this fails\r\n        })\r\n      ]);\r\n      \r\n      // Get student info to determine their grade\r\n      const studentInfo = students.find(s => s.studentCode === studentCode);\r\n      const studentGrade = studentInfo?.gradeLevel || studentInfo?.grade || studentInfo?.gradeName;\r\n      \r\n      // Filter health events for this student's grade and future dates\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0); // Set to start of day for comparison\r\n      \r\n      const upcomingEvents = healthEvents.filter(event => {\r\n        // Check if event is not completed or cancelled\r\n        const validStatuses = ['SCHEDULED', 'IN_PROGRESS', 'POSTPONED'];\r\n        const eventStatus = event.status?.toUpperCase();\r\n        if (eventStatus && !validStatuses.includes(eventStatus)) {\r\n          return false;\r\n        }\r\n        \r\n        // Check if event date is in the future\r\n        const eventDate = new Date(event.scheduledDate || event.startDate);\r\n        if (eventDate < today) return false;\r\n        \r\n        // If no student grade available, show all future events\r\n        if (!studentGrade) return true;\r\n        \r\n        // Check if event is for this student's grade\r\n        if (event.targetGradeNames && Array.isArray(event.targetGradeNames)) {\r\n          const isForThisGrade = event.targetGradeNames.some(gradeName => {\r\n            // Extract numbers from both grade names for comparison\r\n            const eventGradeNumber = gradeName.replace(/[^\\d]/g, '');\r\n            const studentGradeNumber = String(studentGrade).replace(/[^\\d]/g, '');\r\n            \r\n            // Also check if grade names match exactly (case insensitive)\r\n            const exactMatch = gradeName.toLowerCase() === String(studentGrade).toLowerCase();\r\n            const numberMatch = eventGradeNumber && studentGradeNumber && eventGradeNumber === studentGradeNumber;\r\n            \r\n            return exactMatch || numberMatch;\r\n          });\r\n          \r\n          return isForThisGrade;\r\n        }\r\n        \r\n        return false; // If no target grades specified, don't show\r\n      });\r\n\r\n      // Transform the health events to match the expected format\r\n      const transformedUpcomingCheckups = upcomingEvents.map(event => {\r\n        return {\r\n        id: event.eventId || event.id,\r\n        date: event.scheduledDate || event.startDate,\r\n        type: event.eventName || 'General Health Event',\r\n        eventType: event.eventType || 'HEALTH_CHECKUP', // Add event type\r\n        checkupTypes: event.typesOfCheckups || [], // For health checkup events\r\n        vaccineNames: event.vaccineNames || [], // For vaccination events\r\n        provider: event.createdByUserName || 'School Health Center', // Use nurse/staff name\r\n        location: event.location || null, // Use actual location from form or null\r\n        status: event.status?.toLowerCase() || 'scheduled',\r\n        notes: event.description || null // Use actual description from form or null\r\n        };\r\n      });\r\n\r\n      // Transform checkup history to match the expected format\r\n      const transformedCheckupHistory = Array.isArray(checkupHistory) ? checkupHistory.map(checkup => {\r\n        return {\r\n          id: checkup.checkupId || checkup.id,\r\n          date: checkup.checkupDate,\r\n          type: getEventName(checkup.eventId),\r\n          provider: formatConductedByName(checkup.conductedBy),\r\n          location: 'School Health Center', // Default location\r\n          status: 'completed',\r\n          overallScore: null, // Health checkups don't have scores in our system\r\n          notes: checkup.healthNotes || checkup.recommendations || '',\r\n          followUpRequired: checkup.requiresFollowUp || false,\r\n          followUpDate: checkup.followUpDate || null,\r\n          followUpNotes: checkup.followUpNotes || null,\r\n          // Include all the detailed checkup data for the detail view\r\n          ...checkup\r\n        };\r\n      }) : [];\r\n\r\n      // Calculate summary statistics\r\n      const currentYear = new Date().getFullYear();\r\n      const completedThisYear = transformedCheckupHistory.filter(checkup => \r\n        new Date(checkup.date).getFullYear() === currentYear\r\n      ).length;\r\n\r\n      const lastCheckup = transformedCheckupHistory.length > 0 \r\n        ? transformedCheckupHistory.sort((a, b) => new Date(b.date) - new Date(a.date))[0].date\r\n        : null;\r\n      \r\n      // Update the data state\r\n      setData(prevData => ({\r\n        ...prevData,\r\n        checkupHistory: transformedCheckupHistory,\r\n        upcomingCheckups: transformedUpcomingCheckups,\r\n        summary: {\r\n          totalCheckups: transformedCheckupHistory.length,\r\n          completedThisYear: completedThisYear,\r\n          upcomingCheckups: transformedUpcomingCheckups.length,\r\n          averageScore: null, // We don't use scores in our system\r\n          lastCheckup: lastCheckup\r\n        }\r\n      }));\r\n      \r\n    } catch (error) {\r\n      console.error('Error loading checkup data:', error);\r\n      setError('Failed to load checkup data');\r\n      // Set empty data on error\r\n      setData(prevData => ({\r\n        ...prevData,\r\n        checkupHistory: [],\r\n        upcomingCheckups: [],\r\n        summary: {\r\n          totalCheckups: 0,\r\n          completedThisYear: 0,\r\n          upcomingCheckups: 0,\r\n          averageScore: 0,\r\n          lastCheckup: null\r\n        }\r\n      }));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadStudents = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Load students first (most critical)\r\n      const studentsData = await getParentStudents();\r\n      \r\n      if (studentsData && studentsData.length > 0) {\r\n        setStudents(studentsData);\r\n        \r\n        // Auto-select first student and load their checkup data\r\n        const firstStudent = studentsData[0];\r\n        setSelectedStudent(firstStudent.studentCode);\r\n        \r\n        // Load health events in the background (parents don't need nurses data)\r\n        getAllHealthEvents().then(eventsData => {\r\n          // Set health events data\r\n          if (Array.isArray(eventsData)) {\r\n            setHealthEvents(eventsData);\r\n            setLastEventCount(eventsData.length); // Initialize count\r\n          } else {\r\n            setHealthEvents([]);\r\n          }\r\n        }).catch(error => {\r\n          setHealthEvents([]);\r\n        });\r\n        \r\n        // Load checkup data for the first student\r\n        await loadCheckupData(firstStudent.studentCode);\r\n      } else {\r\n        setError('No students found for this parent account. Please contact the school administrator to ensure your account is properly linked to your child\\'s records.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading students:', error);\r\n      if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        const status = error.response.status;\r\n        if (status === 401) {\r\n          setError('Authentication failed. Please log out and log back in.');\r\n        } else if (status === 403) {\r\n          setError('Access denied. Please ensure you have parent account permissions.');\r\n        } else if (status === 404) {\r\n          setError('Parent students API not found. Please contact support.');\r\n        } else {\r\n          setError(`Server error (${status}). Please try again later.`);\r\n        }\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        setError('Unable to connect to the server. Please check your internet connection.');\r\n      } else {\r\n        // Something happened in setting up the request\r\n        setError('An unexpected error occurred. Please try again.');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadStudents();\r\n  }, []);\r\n\r\n  // Reload checkup data when health events are loaded\r\n  useEffect(() => {\r\n    if (healthEvents.length > 0 && selectedStudent) {\r\n      loadCheckupData(selectedStudent);\r\n    }\r\n  }, [healthEvents]); // Depend on healthEvents changes\r\n\r\n  // Auto-refresh health events every 30 seconds to catch new events from admin\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      getAllHealthEvents().then(eventsData => {\r\n        if (Array.isArray(eventsData)) {\r\n          // Check if new events were added\r\n          if (lastEventCount > 0 && eventsData.length > lastEventCount) {\r\n            // Show notification for new events\r\n            }\r\n          setHealthEvents(eventsData);\r\n          setLastEventCount(eventsData.length);\r\n        }\r\n      }).catch(error => {\r\n        });\r\n    }, 30000); // 30 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, [lastEventCount]); // Depend on lastEventCount\r\n\r\n  const getSelectedStudentInfo = () => {\r\n    return students.find(student => student.studentCode === selectedStudent);\r\n  };\r\n\r\n  const filteredCheckups = data.checkupHistory.filter(checkup => {\r\n    const matchesSearch = checkup.type.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         checkup.provider.toLowerCase().includes(searchTerm.toLowerCase());\r\n    return matchesSearch;\r\n  });\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return 'success';\r\n      case 'scheduled':\r\n        return 'primary';\r\n      case 'pending':\r\n        return 'warning';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return <CheckCircle />;\r\n      case 'scheduled':\r\n        return <Schedule />;\r\n      default:\r\n        return <LocalHospital />;\r\n    }\r\n  };\r\n\r\n  const selectedStudentInfo = getSelectedStudentInfo();\r\n\r\n  const handleViewDetails = (checkup) => {\r\n    setSelectedCheckupDetail(checkup);\r\n    setDetailDialogOpen(true);\r\n  };\r\n\r\n  const handleCloseDetails = () => {\r\n    setDetailDialogOpen(false);\r\n    setSelectedCheckupDetail(null);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box className=\"p-6 bg-gray-50 min-h-screen flex items-center justify-center\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box className=\"p-6 bg-gray-50 min-h-screen\">\r\n      {/* Header */}\r\n      <Box className=\"mb-6\">\r\n        <Box className=\"flex items-center gap-3 mb-4\">\r\n          <HealthAndSafety className=\"text-blue-600\" sx={{ fontSize: 32 }} />\r\n          <Typography variant=\"h4\" className=\"font-bold text-gray-800\">\r\n            Check up Information\r\n          </Typography>\r\n        </Box>\r\n        <Typography variant=\"body1\" className=\"text-gray-600\">\r\n          View your child's upcoming health checkups and complete health checkup history.\r\n        </Typography>\r\n      </Box>\r\n\r\n      {error && (\r\n        <Alert severity=\"error\" className=\"mb-6\">\r\n          <Box>\r\n            <Typography variant=\"body1\" className=\"mb-2\">{error}</Typography>\r\n            <Button \r\n              variant=\"outlined\" \r\n              size=\"small\" \r\n              onClick={() => {\r\n                setError(null);\r\n                loadStudents();\r\n              }}\r\n              sx={{ mt: 1 }}\r\n            >\r\n              Try Again\r\n            </Button>\r\n          </Box>\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Student Selection Dropdown */}\r\n      {students.length > 0 ? (\r\n        <Card className=\"mb-6 border-l-4 border-blue-400\">\r\n          <CardContent>\r\n            <Typography variant=\"h6\" className=\"mb-3 font-semibold text-blue-700\">\r\n              {students.length > 1 \r\n                ? `Select Your Child (${students.length} children)` \r\n                : 'Your Child'\r\n              }\r\n            </Typography>\r\n            <FormControl fullWidth>\r\n              <InputLabel>\r\n                {students.length > 1 \r\n                  ? 'Choose which child to view checkup information for'\r\n                  : 'Student information'\r\n                }\r\n              </InputLabel>\r\n              <Select\r\n                value={selectedStudent}\r\n                onChange={handleStudentChange}\r\n                label={students.length > 1 \r\n                  ? 'Choose which child to view checkup information for'\r\n                  : 'Student information'\r\n                }\r\n                sx={{ \r\n                  '& .MuiSelect-select': { \r\n                    display: 'flex', \r\n                    alignItems: 'center',\r\n                    gap: 2\r\n                  }\r\n                }}\r\n              >\r\n                {students.map((student) => (\r\n                  <MenuItem key={student.studentCode} value={student.studentCode}>\r\n                    <Typography variant=\"body1\" className=\"font-semibold text-gray-800\">\r\n                      {student.fullName}\r\n                    </Typography>\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            {students.length > 1 && !selectedStudent && (\r\n              <Box className=\"mt-3 p-3 bg-amber-50 rounded-lg border border-amber-200\">\r\n                <Typography variant=\"body2\" className=\"text-amber-700 flex items-center gap-2\">\r\n                  Please select one of your children to view their checkup information.\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      ) : (\r\n        <Card className=\"mb-6 border-l-4 border-red-400\">\r\n          <CardContent className=\"text-center py-8\">\r\n            <Person sx={{ fontSize: 48, color: 'text.secondary', mb: 2 }} />\r\n            <Typography variant=\"h6\" className=\"mb-2 text-red-700\">\r\n              No Students Found\r\n            </Typography>\r\n            <Typography variant=\"body2\" className=\"text-gray-600\">\r\n              No student information found for this parent account.\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Student Overview - Show only when student is selected */}\r\n      {selectedStudent && selectedStudentInfo && (\r\n        <Grid container spacing={3} className=\"mb-6\">\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <CardContent>\r\n                <Box className=\"flex items-center gap-4\">\r\n                  <Avatar className=\"bg-blue-500\" sx={{ width: 64, height: 64 }}>\r\n                    {selectedStudentInfo.fullName.split(' ').map(n => n[0]).join('')}\r\n                  </Avatar>\r\n                  <Box className=\"flex-1\">\r\n                    <Typography variant=\"h5\" className=\"font-semibold mb-1\">\r\n                      {selectedStudentInfo.fullName}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" className=\"text-gray-600 mb-2\">\r\n                      {selectedStudentInfo.gradeLevel || 'Grade N/A'} • Student Code: {selectedStudentInfo.studentCode}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" className=\"text-gray-500\">\r\n                      Last Checkup: {data.summary.lastCheckup ? format(parseISO(data.summary.lastCheckup), 'MMMM dd, yyyy') : 'No checkups yet'}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n\r\n      {/* Tabs - Show only when student is selected */}\r\n      {selectedStudent && selectedStudentInfo && (\r\n        <>\r\n          <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\r\n            <Tabs value={activeTab} onChange={handleTabChange}>\r\n              <Tab label=\"Upcoming Checkups\" />\r\n              <Tab label=\"Checkup History\" />\r\n            </Tabs>\r\n          </Box>\r\n\r\n          {/* Tab Content */}\r\n          <TabPanel value={activeTab} index={0}>\r\n        {data.upcomingCheckups.length > 0 ? (\r\n          <Grid container spacing={3}>\r\n            {data.upcomingCheckups.map((checkup) => (\r\n              <Grid item xs={12} md={6} key={checkup.id}>\r\n                <Card className=\"border-l-4 border-l-blue-500\">\r\n                  <CardContent>\r\n                    <Box className=\"flex justify-between items-start mb-3\">\r\n                      <Typography variant=\"h6\" className=\"font-semibold\">\r\n                        {checkup.type}\r\n                      </Typography>\r\n                      <Chip\r\n                        icon={<Schedule />}\r\n                        label=\"Scheduled\"\r\n                        color=\"info\"\r\n                        size=\"small\"\r\n                      />\r\n                    </Box>\r\n                    \r\n                    <Box className=\"flex items-center gap-2 mb-2\">\r\n                      <CalendarToday className=\"text-gray-500\" fontSize=\"small\" />\r\n                      <Typography variant=\"body2\" className=\"text-gray-600\">\r\n                        {format(parseISO(checkup.date), 'MMMM dd, yyyy')}\r\n                      </Typography>\r\n                    </Box>\r\n                    \r\n                    <Typography variant=\"body2\" className=\"text-gray-600 mb-2\">\r\n                      <strong>Provider:</strong> {checkup.provider}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" className=\"text-gray-600 mb-2\">\r\n                      <strong>Location:</strong> {checkup.location}\r\n                    </Typography>\r\n                    \r\n                    {/* Display checkup types for health checkup events or vaccines for vaccination events */}\r\n                    <Box className=\"mb-3\">\r\n                      {checkup.eventType === 'VACCINATION' ? (\r\n                        <>\r\n                          <Typography variant=\"body2\" className=\"text-gray-700 font-semibold mb-1\">\r\n                            Vaccination Event - Vaccines Included:\r\n                          </Typography>\r\n                          {checkup.vaccineNames && checkup.vaccineNames.length > 0 ? (\r\n                            <Box>\r\n                              <Box className=\"flex flex-wrap gap-1 mb-2\">\r\n                                {checkup.vaccineNames.map((vaccine, index) => (\r\n                                  <Chip\r\n                                    key={index}\r\n                                    label={vaccine}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    color=\"secondary\"\r\n                                    sx={{\r\n                                      borderStyle: 'dashed',\r\n                                      borderWidth: '2px',\r\n                                      borderColor: 'secondary.main'\r\n                                    }}\r\n                                  />\r\n                                ))}\r\n                              </Box>\r\n                              <Typography variant=\"caption\" className=\"text-gray-500 italic\">\r\n                                {checkup.vaccineNames.length === 1 \r\n                                  ? 'This vaccination event includes 1 vaccine'\r\n                                  : `This vaccination event includes ${checkup.vaccineNames.length} vaccines administered together`\r\n                                }\r\n                              </Typography>\r\n                            </Box>\r\n                          ) : (\r\n                            <Typography variant=\"body2\" className=\"text-gray-500 italic\">\r\n                              No specific vaccines specified - General vaccination event\r\n                            </Typography>\r\n                          )}\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <Typography variant=\"body2\" className=\"text-gray-700 font-semibold mb-1\">\r\n                            Health Checkup - Types:\r\n                          </Typography>\r\n                          {checkup.checkupTypes && checkup.checkupTypes.length > 0 ? (\r\n                            <Box className=\"flex flex-wrap gap-1\">\r\n                              {checkup.checkupTypes.map((type, index) => (\r\n                                <Chip\r\n                                  key={index}\r\n                                  label={type}\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  color=\"primary\"\r\n                                />\r\n                              ))}\r\n                            </Box>\r\n                          ) : (\r\n                            <Typography variant=\"body2\" className=\"text-gray-500 italic\">\r\n                              No specific checkup types specified - General health checkup\r\n                            </Typography>\r\n                          )}\r\n                        </>\r\n                      )}\r\n                    </Box>\r\n                    \r\n                    {checkup.notes && checkup.notes.trim() !== '' && (\r\n                      <Typography variant=\"body2\" className=\"text-gray-600 mt-3\">\r\n                        <strong>Notes:</strong> {checkup.notes}\r\n                      </Typography>\r\n                    )}\r\n                    \r\n                    {/* View Details Button */}\r\n                    <Box className=\"mt-4 pt-3 border-t border-gray-200\">\r\n                      <Button\r\n                        startIcon={<Visibility />}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        onClick={() => handleViewDetails(checkup)}\r\n                        fullWidth\r\n                      >\r\n                        View Details\r\n                      </Button>\r\n                    </Box>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        ) : (\r\n          <Paper className=\"p-8 text-center\">\r\n            <Schedule className=\"text-gray-400 mb-4\" sx={{ fontSize: 48 }} />\r\n            <Typography variant=\"h6\" className=\"text-gray-600 mb-2\">\r\n              No Upcoming Checkups\r\n            </Typography>\r\n            <Typography variant=\"body2\" className=\"text-gray-500\">\r\n              All scheduled checkups are up to date.\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n      </TabPanel>\r\n\r\n      <TabPanel value={activeTab} index={1}>\r\n        {/* Search */}\r\n        <Box className=\"mb-4\">\r\n          <TextField\r\n            fullWidth\r\n            placeholder=\"Search checkups...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Search />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            sx={{ maxWidth: 400 }}\r\n          />\r\n        </Box>\r\n\r\n        {/* Checkup History Table */}\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Date</TableCell>\r\n                <TableCell>Type</TableCell>\r\n                <TableCell>Provider</TableCell>\r\n                <TableCell>Location</TableCell>\r\n                <TableCell>Status</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {filteredCheckups.map((checkup) => (\r\n                <TableRow key={checkup.id} className=\"hover:bg-gray-50\">\r\n                  <TableCell>\r\n                    {format(parseISO(checkup.date), 'MMM dd, yyyy')}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\" className=\"font-semibold\">\r\n                      {checkup.type}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>{checkup.provider}</TableCell>\r\n                  <TableCell>{checkup.location}</TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      icon={getStatusIcon(checkup.status)}\r\n                      label={checkup.status.charAt(0).toUpperCase() + checkup.status.slice(1)}\r\n                      color={getStatusColor(checkup.status)}\r\n                      size=\"small\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      startIcon={<Visibility />}\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      onClick={() => handleViewDetails(checkup)}\r\n                      sx={{ mr: 1 }}\r\n                    >\r\n                      View Details\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        \r\n        {/* Follow-up Reminders */}\r\n        {filteredCheckups.some(checkup => checkup.followUpRequired) && (\r\n          <Box className=\"mt-4\">\r\n            <Alert severity=\"warning\">\r\n              <Typography variant=\"subtitle2\" className=\"mb-2\">Follow-up Required</Typography>\r\n              {filteredCheckups\r\n                .filter(checkup => checkup.followUpRequired)\r\n                .map(checkup => (\r\n                  <Typography key={checkup.id} variant=\"body2\">\r\n                    • {checkup.type} on {format(parseISO(checkup.date), 'MMM dd, yyyy')} - \r\n                    Follow-up needed by {format(parseISO(checkup.followUpDate), 'MMM dd, yyyy')}\r\n                  </Typography>\r\n                ))}\r\n            </Alert>\r\n          </Box>\r\n        )}\r\n      </TabPanel>\r\n        </>\r\n      )}\r\n\r\n      {/* Checkup Detail Dialog */}\r\n      <Dialog \r\n        open={detailDialogOpen} \r\n        onClose={handleCloseDetails}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>\r\n          <Box className=\"flex justify-between items-center\">\r\n            <Typography variant=\"h6\" className=\"font-semibold\">\r\n              Checkup Details\r\n            </Typography>\r\n            <IconButton onClick={handleCloseDetails} size=\"small\">\r\n              <Close />\r\n            </IconButton>\r\n          </Box>\r\n        </DialogTitle>\r\n        \r\n        <DialogContent dividers>\r\n          {selectedCheckupDetail && (\r\n            <Grid container spacing={3}>\r\n              {/* Basic Information */}\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h6\" className=\"mb-3 text-blue-700 font-semibold\">\r\n                  Basic Information\r\n                </Typography>\r\n                <Card variant=\"outlined\">\r\n                  <CardContent>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <Typography variant=\"body2\" className=\"text-gray-600 mb-1\">\r\n                          <strong>Date:</strong>\r\n                        </Typography>\r\n                        <Typography variant=\"body1\">\r\n                          {format(parseISO(selectedCheckupDetail.date), 'MMMM dd, yyyy')}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <Typography variant=\"body2\" className=\"text-gray-600 mb-1\">\r\n                          <strong>Name:</strong>\r\n                        </Typography>\r\n                        <Typography variant=\"body1\">\r\n                          {selectedCheckupDetail.type}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <Typography variant=\"body2\" className=\"text-gray-600 mb-1\">\r\n                          <strong>Conducted By:</strong>\r\n                        </Typography>\r\n                        <Typography variant=\"body1\">\r\n                          {selectedCheckupDetail.provider}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <Typography variant=\"body2\" className=\"text-gray-600 mb-1\">\r\n                          <strong>Status:</strong>\r\n                        </Typography>\r\n                        <Chip\r\n                          icon={getStatusIcon(selectedCheckupDetail.status)}\r\n                          label={selectedCheckupDetail.status.charAt(0).toUpperCase() + selectedCheckupDetail.status.slice(1)}\r\n                          color={getStatusColor(selectedCheckupDetail.status)}\r\n                          size=\"small\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <Typography variant=\"body2\" className=\"text-gray-600 mb-1\">\r\n                          <strong>Health Status:</strong>\r\n                        </Typography>\r\n                        <Typography variant=\"body1\">\r\n                          {selectedCheckupDetail.generalHealthStatus || 'Not specified'}\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n\r\n              {/* Physical Measurements - only show for health checkups, not vaccinations */}\r\n              {selectedCheckupDetail.eventType !== 'VACCINATION' && (\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h6\" className=\"mb-3 text-blue-700 font-semibold\">\r\n                    Physical Measurements\r\n                  </Typography>\r\n                  <Card variant=\"outlined\">\r\n                    <CardContent>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={6} md={3}>\r\n                          <Typography variant=\"body2\" className=\"text-gray-600 mb-1\">\r\n                            <strong>Height:</strong>\r\n                          </Typography>\r\n                          <Typography variant=\"body1\">\r\n                            {selectedCheckupDetail.height ? `${selectedCheckupDetail.height} cm` : 'N/A'}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6} md={3}>\r\n                          <Typography variant=\"body2\" className=\"text-gray-600 mb-1\">\r\n                            <strong>Weight:</strong>\r\n                          </Typography>\r\n                          <Typography variant=\"body1\">\r\n                            {selectedCheckupDetail.weight ? `${selectedCheckupDetail.weight} kg` : 'N/A'}\r\n                          </Typography>\r\n                        </Grid>\r\n                        {hasBMIData([selectedCheckupDetail]) && (\r\n                          <Grid item xs={6} md={3}>\r\n                            <Typography variant=\"body2\" className=\"text-gray-600 mb-1\">\r\n                              <strong>BMI:</strong>\r\n                            </Typography>\r\n                            <Typography variant=\"body1\">\r\n                              {selectedCheckupDetail.bmi ? selectedCheckupDetail.bmi.toFixed(1) : 'N/A'}\r\n                            </Typography>\r\n                          </Grid>\r\n                        )}\r\n                        <Grid item xs={6} md={3}>\r\n                          <Typography variant=\"body2\" className=\"text-gray-600 mb-1\">\r\n                            <strong>Heart Rate:</strong>\r\n                          </Typography>\r\n                          <Typography variant=\"body1\">\r\n                            {selectedCheckupDetail.heartRate ? `${selectedCheckupDetail.heartRate} bpm` : 'N/A'}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6} md={3}>\r\n                          <Typography variant=\"body2\" className=\"text-gray-600 mb-1\">\r\n                            <strong>Temperature:</strong>\r\n                          </Typography>\r\n                          <Typography variant=\"body1\">\r\n                            {selectedCheckupDetail.temperature ? `${selectedCheckupDetail.temperature}°C` : 'N/A'}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6} md={3}>\r\n                          <Typography variant=\"body2\" className=\"text-gray-600 mb-1\">\r\n                            <strong>Blood Pressure:</strong>\r\n                          </Typography>\r\n                          <Typography variant=\"body1\">\r\n                            {(selectedCheckupDetail.bloodPressureSystolic && selectedCheckupDetail.bloodPressureDiastolic) \r\n                              ? `${selectedCheckupDetail.bloodPressureSystolic}/${selectedCheckupDetail.bloodPressureDiastolic} mmHg` \r\n                              : 'N/A'}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6} md={3}>\r\n                          <Typography variant=\"body2\" className=\"text-gray-600 mb-1\">\r\n                            <strong>Vision Left:</strong>\r\n                          </Typography>\r\n                          <Typography variant=\"body1\">\r\n                            {selectedCheckupDetail.visionLeft || 'N/A'}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6} md={3}>\r\n                          <Typography variant=\"body2\" className=\"text-gray-600 mb-1\">\r\n                            <strong>Vision Right:</strong>\r\n                          </Typography>\r\n                          <Typography variant=\"body1\">\r\n                            {selectedCheckupDetail.visionRight || 'N/A'}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6} md={3}>\r\n                          <Typography variant=\"body2\" className=\"text-gray-600 mb-1\">\r\n                            <strong>Hearing Left:</strong>\r\n                          </Typography>\r\n                          <Typography variant=\"body1\">\r\n                            {selectedCheckupDetail.hearingLeft || 'N/A'}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6} md={3}>\r\n                          <Typography variant=\"body2\" className=\"text-gray-600 mb-1\">\r\n                            <strong>Hearing Right:</strong>\r\n                          </Typography>\r\n                          <Typography variant=\"body1\">\r\n                            {selectedCheckupDetail.hearingRight || 'N/A'}\r\n                          </Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              )}\r\n\r\n              {/* Notes and Recommendations */}\r\n              {(selectedCheckupDetail.healthNotes || selectedCheckupDetail.recommendations) && (\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h6\" className=\"mb-3 text-blue-700 font-semibold\">\r\n                    Notes & Recommendations\r\n                  </Typography>\r\n                  <Card variant=\"outlined\">\r\n                    <CardContent>\r\n                      {selectedCheckupDetail.healthNotes && (\r\n                        <Box className=\"mb-3\">\r\n                          <Typography variant=\"body2\" className=\"text-gray-600 mb-1\">\r\n                            <strong>Health Notes:</strong>\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" className=\"text-gray-700\">\r\n                            {selectedCheckupDetail.healthNotes}\r\n                          </Typography>\r\n                        </Box>\r\n                      )}\r\n                      {selectedCheckupDetail.recommendations && (\r\n                        <Box>\r\n                          <Typography variant=\"body2\" className=\"text-gray-600 mb-1\">\r\n                            <strong>Recommendations:</strong>\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" className=\"text-gray-700\">\r\n                            {selectedCheckupDetail.recommendations}\r\n                          </Typography>\r\n                        </Box>\r\n                      )}\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              )}\r\n\r\n              {/* Follow-up Information */}\r\n              {selectedCheckupDetail.requiresFollowUp && (\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h6\" className=\"mb-3 text-orange-700 font-semibold\">\r\n                    Follow-up Required\r\n                  </Typography>\r\n                  <Alert severity=\"warning\">\r\n                    <Typography variant=\"body1\">\r\n                      Follow-up appointment needed\r\n                      {selectedCheckupDetail.followUpDate && \r\n                        ` by ${format(parseISO(selectedCheckupDetail.followUpDate), 'MMMM dd, yyyy')}`\r\n                      }\r\n                    </Typography>\r\n                    {selectedCheckupDetail.followUpNotes && (\r\n                      <Typography variant=\"body2\" className=\"mt-2\">\r\n                        Notes: {selectedCheckupDetail.followUpNotes}\r\n                      </Typography>\r\n                    )}\r\n                  </Alert>\r\n                </Grid>\r\n              )}\r\n\r\n              {/* Checkup Types for health checkup events or Vaccines for vaccination events */}\r\n              {selectedCheckupDetail.eventType === 'VACCINATION' ? (\r\n                selectedCheckupDetail.vaccineNames && selectedCheckupDetail.vaccineNames.length > 0 && (\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"h6\" className=\"mb-3 text-blue-700 font-semibold\">\r\n                      Vaccination Event Details\r\n                    </Typography>\r\n                    <Card variant=\"outlined\">\r\n                      <CardContent>\r\n                        <Typography variant=\"body1\" className=\"mb-3 font-semibold text-purple-700\">\r\n                          This vaccination event includes {selectedCheckupDetail.vaccineNames.length} \r\n                          {selectedCheckupDetail.vaccineNames.length === 1 ? ' vaccine' : ' vaccines'} administered together:\r\n                        </Typography>\r\n                        <Box className=\"flex flex-wrap gap-2 mb-3\">\r\n                          {selectedCheckupDetail.vaccineNames.map((vaccine, index) => (\r\n                            <Chip\r\n                              key={index}\r\n                              label={`${index + 1}. ${vaccine}`}\r\n                              variant=\"outlined\"\r\n                              color=\"secondary\"\r\n                              size=\"medium\"\r\n                              sx={{\r\n                                borderStyle: 'dashed',\r\n                                borderWidth: '2px',\r\n                                borderColor: 'secondary.main',\r\n                                backgroundColor: 'secondary.50'\r\n                              }}\r\n                            />\r\n                          ))}\r\n                        </Box>\r\n                        <Typography variant=\"body2\" className=\"text-gray-600 italic\">\r\n                          All vaccines listed above are part of the same vaccination appointment scheduled for{' '}\r\n                          {format(parseISO(selectedCheckupDetail.date), 'MMMM dd, yyyy')}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                )\r\n              ) : (\r\n                selectedCheckupDetail.checkupTypes && selectedCheckupDetail.checkupTypes.length > 0 && (\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"h6\" className=\"mb-3 text-blue-700 font-semibold\">\r\n                      Health Checkup Types\r\n                    </Typography>\r\n                    <Card variant=\"outlined\">\r\n                      <CardContent>\r\n                        <Box className=\"flex flex-wrap gap-2\">\r\n                          {selectedCheckupDetail.checkupTypes.map((type, index) => (\r\n                            <Chip\r\n                              key={index}\r\n                              label={type}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              size=\"medium\"\r\n                            />\r\n                          ))}\r\n                        </Box>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                )\r\n              )}\r\n            </Grid>\r\n          )}\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDetails} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CheckupInformation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}