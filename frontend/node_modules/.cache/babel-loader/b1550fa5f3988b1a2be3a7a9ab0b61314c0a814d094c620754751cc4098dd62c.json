{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{Box,Card,CardContent,Typography,Avatar,Grid,TextField,Button,Alert,Dialog,DialogTitle,DialogContent,DialogActions,Chip,Divider,List,ListItem,ListItemIcon,ListItemText,Paper,CircularProgress,IconButton,Tooltip}from'@mui/material';import{Person as PersonIcon,Edit as EditIcon,Save as SaveIcon,Cancel as CancelIcon,Email as EmailIcon,Phone as PhoneIcon,CalendarToday as CalendarIcon,Wc as GenderIcon,School as SchoolIcon,PhotoCamera as PhotoIcon,Verified as VerifiedIcon}from'@mui/icons-material';import{useAuth}from'../../context/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Profile=()=>{const{currentUser,getAuthAxios}=useAuth();const[loading,setLoading]=useState(true);const[saving,setSaving]=useState(false);const[editing,setEditing]=useState(false);const[profileExists,setProfileExists]=useState(false);// Track if profile exists\nconst[profileData,setProfileData]=useState({fullName:'',email:'',phone:'',dateOfBirth:'',gender:'',className:'',studentCode:'',avatarUrl:''});const[editData,setEditData]=useState({});const[message,setMessage]=useState('');const[messageType,setMessageType]=useState('');const[avatarDialog,setAvatarDialog]=useState(false);const[newAvatarUrl,setNewAvatarUrl]=useState('');// Load profile data\nconst loadProfileData=useCallback(async()=>{try{setLoading(true);const authAxios=getAuthAxios();const response=await authAxios.get('/api/student-profile');const data={fullName:response.data.fullName||'',email:response.data.email||'',phone:response.data.phone||'',dateOfBirth:response.data.dateOfBirth?new Date(response.data.dateOfBirth).toISOString().split('T')[0]:'',gender:response.data.gender||'',className:response.data.className||'',studentCode:response.data.studentCode||'',avatarUrl:response.data.avatarUrl||''};console.log('=== LOAD PROFILE DEBUG ===');console.log('Raw response:',response.data);console.log('Processed data:',data);setProfileData(data);setEditData(data);setMessage('');setProfileExists(true);// Profile loaded successfully\n}catch(error){console.error('Error loading profile:',error);if(error.response&&error.response.data&&error.response.data.message===\"Student profile not found\"){setMessage('Your profile needs to be completed. Please fill in your details.');setMessageType('info');setEditing(true);setProfileExists(false);// Profile doesn't exist yet\n// Initialize with current user data\nconst initialData={fullName:(currentUser===null||currentUser===void 0?void 0:currentUser.fullName)||'',email:(currentUser===null||currentUser===void 0?void 0:currentUser.email)||'',phone:(currentUser===null||currentUser===void 0?void 0:currentUser.phone)||'',dateOfBirth:'',gender:'',className:'',studentCode:'',avatarUrl:(currentUser===null||currentUser===void 0?void 0:currentUser.avatarUrl)||''};setProfileData(initialData);setEditData(initialData);}else{setMessage('Error loading profile data. Please try again later.');setMessageType('error');// Don't change profileExists state for other errors - could be network/server issues\n}}finally{setLoading(false);}},[getAuthAxios,currentUser]);useEffect(()=>{loadProfileData();},[loadProfileData]);// Handle input changes\nconst handleInputChange=e=>{const{name,value}=e.target;setEditData(prev=>({...prev,[name]:value}));};// Handle form submission\nconst handleSave=async()=>{// Prepare data outside try block so it's available in error handling\nconst submitData={...editData,// Convert date to proper format if needed\ndateOfBirth:editData.dateOfBirth||null};// Debug log to check what we're sending\nconsole.log('=== SAVE PROFILE DEBUG ===');console.log('submitData:',submitData);try{setSaving(true);setMessage('');const authAxios=getAuthAxios();// Determine if we need to create or update profile based on profileExists flag\nconst isNewProfile=!profileExists;const endpoint='/api/student-profile';const method=isNewProfile?'post':'put';const response=await authAxios[method](endpoint,submitData);console.log('=== SAVE RESPONSE ===');console.log('response:',response.data);// If we reach here, the request was successful (status 200)\nsetMessage(`Profile ${isNewProfile?'created':'updated'} successfully!`);setMessageType('success');setEditing(false);setProfileExists(true);// Profile now exists\nawait loadProfileData();// Reload to get updated data\n}catch(error){console.error('Error saving profile:',error);// Check if this is a \"Student profile already exists\" error when trying to POST\nif(error.response&&error.response.status===400&&error.response.data&&error.response.data.message===\"Student profile already exists\"){// Profile exists but our state is wrong - update it and try PUT instead\nsetProfileExists(true);try{const authAxios=getAuthAxios();const response=await authAxios.put('/api/student-profile',submitData);setMessage('Profile updated successfully!');setMessageType('success');setEditing(false);await loadProfileData();// Reload to get updated data\n}catch(putError){var _putError$response,_putError$response$da;console.error('Error updating profile after POST failed:',putError);setMessage(((_putError$response=putError.response)===null||_putError$response===void 0?void 0:(_putError$response$da=_putError$response.data)===null||_putError$response$da===void 0?void 0:_putError$response$da.message)||'Error updating profile. Please try again.');setMessageType('error');}}else{var _error$response,_error$response$data;setMessage(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Error saving profile. Please try again.');setMessageType('error');}}finally{setSaving(false);}};// Handle cancel editing\nconst handleCancel=()=>{setEditData(profileData);setEditing(false);setMessage('');};// Handle avatar update\nconst handleAvatarUpdate=async()=>{try{const authAxios=getAuthAxios();await authAxios.put('/api/student-profile',{avatarUrl:newAvatarUrl});setMessage('Avatar updated successfully!');setMessageType('success');setAvatarDialog(false);setNewAvatarUrl('');await loadProfileData();}catch(error){console.error('Error updating avatar:',error);setMessage('Error updating avatar. Please try again.');setMessageType('error');}};// Calculate age from date of birth\nconst calculateAge=dateOfBirth=>{if(!dateOfBirth)return null;const today=new Date();const birthDate=new Date(dateOfBirth);let age=today.getFullYear()-birthDate.getFullYear();const monthDiff=today.getMonth()-birthDate.getMonth();if(monthDiff<0||monthDiff===0&&today.getDate()<birthDate.getDate()){age--;}return age;};if(loading){return/*#__PURE__*/_jsx(Box,{className:\"flex justify-center items-center min-h-screen\",children:/*#__PURE__*/_jsx(CircularProgress,{})});}return/*#__PURE__*/_jsx(Box,{className:\"p-6\",children:/*#__PURE__*/_jsx(Card,{className:\"mb-6\",children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,className:\"text-blue-600 font-bold\",children:\"My Profile\"}),message&&/*#__PURE__*/_jsx(Alert,{severity:messageType,className:\"mb-6\",children:message}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:4,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(Card,{className:\"h-fit\",children:/*#__PURE__*/_jsxs(CardContent,{className:\"text-center\",children:[/*#__PURE__*/_jsxs(Box,{className:\"relative inline-block mb-4\",children:[/*#__PURE__*/_jsx(Avatar,{src:profileData.avatarUrl,sx:{width:120,height:120,mx:'auto',mb:2},children:profileData.fullName?profileData.fullName.split(' ').map(n=>n[0]).join('').toUpperCase():'S'}),/*#__PURE__*/_jsx(Tooltip,{title:\"Change Avatar\",children:/*#__PURE__*/_jsx(IconButton,{className:\"absolute bottom-0 right-0 bg-blue-600 text-white hover:bg-blue-700\",size:\"small\",onClick:()=>setAvatarDialog(true),children:/*#__PURE__*/_jsx(PhotoIcon,{fontSize:\"small\"})})})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,className:\"font-bold\",children:profileData.fullName||'Student Name'}),profileData.studentCode&&/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(VerifiedIcon,{}),label:`ID: ${profileData.studentCode}`,color:\"primary\",className:\"mb-2\"}),profileData.className&&/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(SchoolIcon,{}),label:profileData.className,variant:\"outlined\",className:\"mb-4\"}),profileData.dateOfBirth&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"textSecondary\",children:[\"Age: \",calculateAge(profileData.dateOfBirth),\" years old\"]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:\"font-bold\",children:\"Personal Information\"}),!editing?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(EditIcon,{}),onClick:()=>setEditing(true),children:\"Edit Profile\"}):/*#__PURE__*/_jsxs(Box,{className:\"space-x-2\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(CancelIcon,{}),onClick:handleCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(SaveIcon,{}),onClick:handleSave,disabled:saving,children:saving?/*#__PURE__*/_jsx(CircularProgress,{size:20}):'Save'})]})]}),/*#__PURE__*/_jsx(Divider,{className:\"mb-4\"}),editing?/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Full Name\",name:\"fullName\",value:editData.fullName,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Email\",name:\"email\",type:\"email\",value:editData.email,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Phone Number\",name:\"phone\",value:editData.phone,onChange:handleInputChange})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Date of Birth\",name:\"dateOfBirth\",type:\"date\",value:editData.dateOfBirth,onChange:handleInputChange,InputLabelProps:{shrink:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsxs(TextField,{fullWidth:true,label:\"Gender\",name:\"gender\",select:true,value:editData.gender,onChange:handleInputChange,SelectProps:{native:true},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Gender\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Male\",children:\"Male\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Female\",children:\"Female\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other\"})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Class Name\",name:\"className\",value:editData.className,onChange:handleInputChange})})]}):/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(PersonIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Full Name\",secondary:profileData.fullName||'Not set'})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(EmailIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Email\",secondary:profileData.email||'Not set'})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(PhoneIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Phone Number\",secondary:profileData.phone||'Not set'})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(CalendarIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Date of Birth\",secondary:profileData.dateOfBirth?new Date(profileData.dateOfBirth).toLocaleDateString():'Not set'})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(GenderIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Gender\",secondary:profileData.gender||'Not set'})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(SchoolIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Class\",secondary:profileData.className||'Not set'})]})]})]})})})]}),/*#__PURE__*/_jsxs(Dialog,{open:avatarDialog,onClose:()=>setAvatarDialog(false),maxWidth:\"sm\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Update Avatar\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Avatar URL\",value:newAvatarUrl,onChange:e=>setNewAvatarUrl(e.target.value),placeholder:\"Enter image URL\",className:\"mt-4\"}),newAvatarUrl&&/*#__PURE__*/_jsxs(Box,{className:\"mt-4 text-center\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"mb-2\",children:\"Preview:\"}),/*#__PURE__*/_jsx(Avatar,{src:newAvatarUrl,sx:{width:80,height:80,mx:'auto'},children:\"Preview\"})]})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setAvatarDialog(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleAvatarUpdate,variant:\"contained\",disabled:!newAvatarUrl,children:\"Update Avatar\"})]})]})]})})});};export default Profile;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Box","Card","CardContent","Typography","Avatar","Grid","TextField","Button","Alert","Dialog","DialogTitle","DialogContent","DialogActions","Chip","Divider","List","ListItem","ListItemIcon","ListItemText","Paper","CircularProgress","IconButton","Tooltip","Person","PersonIcon","Edit","EditIcon","Save","SaveIcon","Cancel","CancelIcon","Email","EmailIcon","Phone","PhoneIcon","CalendarToday","CalendarIcon","Wc","GenderIcon","School","SchoolIcon","PhotoCamera","PhotoIcon","Verified","VerifiedIcon","useAuth","jsx","_jsx","jsxs","_jsxs","Profile","currentUser","getAuthAxios","loading","setLoading","saving","setSaving","editing","setEditing","profileExists","setProfileExists","profileData","setProfileData","fullName","email","phone","dateOfBirth","gender","className","studentCode","avatarUrl","editData","setEditData","message","setMessage","messageType","setMessageType","avatarDialog","setAvatarDialog","newAvatarUrl","setNewAvatarUrl","loadProfileData","authAxios","response","get","data","Date","toISOString","split","console","log","error","initialData","handleInputChange","e","name","value","target","prev","handleSave","submitData","isNewProfile","endpoint","method","status","put","putError","_putError$response","_putError$response$da","_error$response","_error$response$data","handleCancel","handleAvatarUpdate","calculateAge","today","birthDate","age","getFullYear","monthDiff","getMonth","getDate","children","variant","gutterBottom","severity","container","spacing","item","xs","md","src","sx","width","height","mx","mb","map","n","join","toUpperCase","title","size","onClick","fontSize","icon","label","color","startIcon","disabled","sm","fullWidth","onChange","required","type","InputLabelProps","shrink","select","SelectProps","native","primary","secondary","toLocaleDateString","open","onClose","maxWidth","placeholder"],"sources":["C:/Users/trand/OneDrive/Documents/GitHub/SchoolMedicalManagement/frontend/src/pages/student/Profile.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Avatar,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Alert,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Chip,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n  CircularProgress,\r\n  IconButton,\r\n  Tooltip\r\n} from '@mui/material';\r\nimport {\r\n  Person as PersonIcon,\r\n  Edit as EditIcon,\r\n  Save as SaveIcon,\r\n  Cancel as CancelIcon,\r\n  Email as EmailIcon,\r\n  Phone as PhoneIcon,\r\n  CalendarToday as CalendarIcon,\r\n  Wc as GenderIcon,\r\n  School as SchoolIcon,\r\n  PhotoCamera as PhotoIcon,\r\n  Verified as VerifiedIcon\r\n} from '@mui/icons-material';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nconst Profile = () => {\r\n  const { currentUser, getAuthAxios } = useAuth();\r\n  const [loading, setLoading] = useState(true);  const [saving, setSaving] = useState(false);\r\n  const [editing, setEditing] = useState(false);\r\n  const [profileExists, setProfileExists] = useState(false); // Track if profile exists\r\n  const [profileData, setProfileData] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    phone: '',\r\n    dateOfBirth: '',\r\n    gender: '',\r\n    className: '',\r\n    studentCode: '',\r\n    avatarUrl: ''\r\n  });\r\n  const [editData, setEditData] = useState({});\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n  const [avatarDialog, setAvatarDialog] = useState(false);\r\n  const [newAvatarUrl, setNewAvatarUrl] = useState('');\r\n\r\n  // Load profile data\r\n  const loadProfileData = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const authAxios = getAuthAxios();\r\n      const response = await authAxios.get('/api/student-profile');\r\n      \r\n      const data = {\r\n        fullName: response.data.fullName || '',\r\n        email: response.data.email || '',\r\n        phone: response.data.phone || '',\r\n        dateOfBirth: response.data.dateOfBirth ? new Date(response.data.dateOfBirth).toISOString().split('T')[0] : '',\r\n        gender: response.data.gender || '',\r\n        className: response.data.className || '',\r\n        studentCode: response.data.studentCode || '',\r\n        avatarUrl: response.data.avatarUrl || ''\r\n      };\r\n      \r\n      console.log('=== LOAD PROFILE DEBUG ===');\r\n      console.log('Raw response:', response.data);\r\n      console.log('Processed data:', data);\r\n      \r\n      setProfileData(data);\r\n      setEditData(data);\r\n      setMessage('');\r\n      setProfileExists(true); // Profile loaded successfully\r\n    } catch (error) {\r\n      console.error('Error loading profile:', error);\r\n      \r\n      if (error.response && error.response.data && error.response.data.message === \"Student profile not found\") {\r\n        setMessage('Your profile needs to be completed. Please fill in your details.');\r\n        setMessageType('info');\r\n        setEditing(true);\r\n        setProfileExists(false); // Profile doesn't exist yet\r\n        \r\n        // Initialize with current user data\r\n        const initialData = {\r\n          fullName: currentUser?.fullName || '',\r\n          email: currentUser?.email || '',\r\n          phone: currentUser?.phone || '',\r\n          dateOfBirth: '',\r\n          gender: '',\r\n          className: '',\r\n          studentCode: '',\r\n          avatarUrl: currentUser?.avatarUrl || ''\r\n        };        setProfileData(initialData);\r\n        setEditData(initialData);      } else {\r\n        setMessage('Error loading profile data. Please try again later.');\r\n        setMessageType('error');\r\n        // Don't change profileExists state for other errors - could be network/server issues\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [getAuthAxios, currentUser]);\r\n\r\n  useEffect(() => {\r\n    loadProfileData();\r\n  }, [loadProfileData]);\r\n\r\n  // Handle input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };  // Handle form submission\r\n  const handleSave = async () => {\r\n    // Prepare data outside try block so it's available in error handling\r\n    const submitData = {\r\n      ...editData,\r\n      // Convert date to proper format if needed\r\n      dateOfBirth: editData.dateOfBirth || null\r\n    };\r\n    \r\n    // Debug log to check what we're sending\r\n    console.log('=== SAVE PROFILE DEBUG ===');\r\n    console.log('submitData:', submitData);\r\n    \r\n    try {\r\n      setSaving(true);\r\n      setMessage('');\r\n      \r\n      const authAxios = getAuthAxios();\r\n      // Determine if we need to create or update profile based on profileExists flag\r\n      const isNewProfile = !profileExists;\r\n      const endpoint = '/api/student-profile';\r\n      const method = isNewProfile ? 'post' : 'put';\r\n      \r\n      const response = await authAxios[method](endpoint, submitData);\r\n      \r\n      console.log('=== SAVE RESPONSE ===');\r\n      console.log('response:', response.data);\r\n      \r\n      // If we reach here, the request was successful (status 200)\r\n      setMessage(`Profile ${isNewProfile ? 'created' : 'updated'} successfully!`);\r\n      setMessageType('success');\r\n      setEditing(false);\r\n      setProfileExists(true); // Profile now exists\r\n      await loadProfileData(); // Reload to get updated data\r\n    } catch (error) {\r\n      console.error('Error saving profile:', error);\r\n        // Check if this is a \"Student profile already exists\" error when trying to POST\r\n      if (error.response && error.response.status === 400 && \r\n          error.response.data && error.response.data.message === \"Student profile already exists\") {\r\n        \r\n        // Profile exists but our state is wrong - update it and try PUT instead\r\n        setProfileExists(true);\r\n        try {\r\n          const authAxios = getAuthAxios();\r\n          const response = await authAxios.put('/api/student-profile', submitData);\r\n          setMessage('Profile updated successfully!');\r\n          setMessageType('success');\r\n          setEditing(false);\r\n          await loadProfileData(); // Reload to get updated data\r\n        } catch (putError) {\r\n          console.error('Error updating profile after POST failed:', putError);\r\n          setMessage(putError.response?.data?.message || 'Error updating profile. Please try again.');\r\n          setMessageType('error');\r\n        }\r\n      } else {\r\n        setMessage(error.response?.data?.message || 'Error saving profile. Please try again.');\r\n        setMessageType('error');\r\n      }\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  // Handle cancel editing\r\n  const handleCancel = () => {\r\n    setEditData(profileData);\r\n    setEditing(false);\r\n    setMessage('');\r\n  };\r\n\r\n  // Handle avatar update\r\n  const handleAvatarUpdate = async () => {\r\n    try {\r\n      const authAxios = getAuthAxios();\r\n      await authAxios.put('/api/student-profile', {\r\n        avatarUrl: newAvatarUrl\r\n      });\r\n      \r\n      setMessage('Avatar updated successfully!');\r\n      setMessageType('success');\r\n      setAvatarDialog(false);\r\n      setNewAvatarUrl('');\r\n      await loadProfileData();\r\n    } catch (error) {\r\n      console.error('Error updating avatar:', error);\r\n      setMessage('Error updating avatar. Please try again.');\r\n      setMessageType('error');\r\n    }\r\n  };\r\n\r\n  // Calculate age from date of birth\r\n  const calculateAge = (dateOfBirth) => {\r\n    if (!dateOfBirth) return null;\r\n    const today = new Date();\r\n    const birthDate = new Date(dateOfBirth);\r\n    let age = today.getFullYear() - birthDate.getFullYear();\r\n    const monthDiff = today.getMonth() - birthDate.getMonth();\r\n    \r\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\r\n      age--;\r\n    }\r\n    \r\n    return age;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box className=\"flex justify-center items-center min-h-screen\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box className=\"p-6\">\r\n      <Card className=\"mb-6\">\r\n        <CardContent>\r\n          <Typography variant=\"h4\" gutterBottom className=\"text-blue-600 font-bold\">\r\n            My Profile\r\n          </Typography>\r\n          {message && (\r\n            <Alert severity={messageType} className=\"mb-6\">\r\n              {message}\r\n            </Alert>\r\n          )}\r\n          <Grid container spacing={4}>\r\n            {/* Profile Overview Card */}\r\n            <Grid item xs={12} md={4}>\r\n              <Card className=\"h-fit\">\r\n                <CardContent className=\"text-center\">\r\n                  <Box className=\"relative inline-block mb-4\">\r\n                    <Avatar\r\n                      src={profileData.avatarUrl}\r\n                      sx={{ width: 120, height: 120, mx: 'auto', mb: 2 }}\r\n                    >\r\n                      {profileData.fullName ? profileData.fullName.split(' ').map(n => n[0]).join('').toUpperCase() : 'S'}\r\n                    </Avatar>\r\n                    <Tooltip title=\"Change Avatar\">\r\n                      <IconButton\r\n                        className=\"absolute bottom-0 right-0 bg-blue-600 text-white hover:bg-blue-700\"\r\n                        size=\"small\"\r\n                        onClick={() => setAvatarDialog(true)}\r\n                      >\r\n                        <PhotoIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </Box>\r\n                  \r\n                  <Typography variant=\"h5\" gutterBottom className=\"font-bold\">\r\n                    {profileData.fullName || 'Student Name'}\r\n                  </Typography>\r\n                  \r\n                  {profileData.studentCode && (\r\n                    <Chip\r\n                      icon={<VerifiedIcon />}\r\n                      label={`ID: ${profileData.studentCode}`}\r\n                      color=\"primary\"\r\n                      className=\"mb-2\"\r\n                    />\r\n                  )}\r\n                  \r\n                  {profileData.className && (\r\n                    <Chip\r\n                      icon={<SchoolIcon />}\r\n                      label={profileData.className}\r\n                      variant=\"outlined\"\r\n                      className=\"mb-4\"\r\n                    />\r\n                  )}\r\n                  \r\n                  {profileData.dateOfBirth && (\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      Age: {calculateAge(profileData.dateOfBirth)} years old\r\n                    </Typography>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n\r\n            {/* Profile Details Card */}\r\n            <Grid item xs={12} md={8}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Box className=\"flex justify-between items-center mb-4\">\r\n                    <Typography variant=\"h6\" className=\"font-bold\">\r\n                      Personal Information\r\n                    </Typography>\r\n                    {!editing ? (\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        startIcon={<EditIcon />}\r\n                        onClick={() => setEditing(true)}\r\n                      >\r\n                        Edit Profile\r\n                      </Button>\r\n                    ) : (\r\n                      <Box className=\"space-x-2\">\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          startIcon={<CancelIcon />}\r\n                          onClick={handleCancel}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          startIcon={<SaveIcon />}\r\n                          onClick={handleSave}\r\n                          disabled={saving}\r\n                        >\r\n                          {saving ? <CircularProgress size={20} /> : 'Save'}\r\n                        </Button>\r\n                      </Box>\r\n                    )}\r\n                  </Box>\r\n\r\n                  <Divider className=\"mb-4\" />\r\n\r\n                  {editing ? (\r\n                    <Grid container spacing={3}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          fullWidth\r\n                          label=\"Full Name\"\r\n                          name=\"fullName\"\r\n                          value={editData.fullName}\r\n                          onChange={handleInputChange}\r\n                          required\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          fullWidth\r\n                          label=\"Email\"\r\n                          name=\"email\"\r\n                          type=\"email\"\r\n                          value={editData.email}\r\n                          onChange={handleInputChange}\r\n                          required\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          fullWidth\r\n                          label=\"Phone Number\"\r\n                          name=\"phone\"\r\n                          value={editData.phone}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          fullWidth\r\n                          label=\"Date of Birth\"\r\n                          name=\"dateOfBirth\"\r\n                          type=\"date\"\r\n                          value={editData.dateOfBirth}\r\n                          onChange={handleInputChange}\r\n                          InputLabelProps={{ shrink: true }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          fullWidth\r\n                          label=\"Gender\"\r\n                          name=\"gender\"\r\n                          select\r\n                          value={editData.gender}\r\n                          onChange={handleInputChange}\r\n                          SelectProps={{ native: true }}\r\n                        >\r\n                          <option value=\"\">Select Gender</option>\r\n                          <option value=\"Male\">Male</option>\r\n                          <option value=\"Female\">Female</option>\r\n                          <option value=\"Other\">Other</option>\r\n                        </TextField>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          fullWidth\r\n                          label=\"Class Name\"\r\n                          name=\"className\"\r\n                          value={editData.className}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  ) : (\r\n                    <List>\r\n                      <ListItem>\r\n                        <ListItemIcon>\r\n                          <PersonIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                          primary=\"Full Name\"\r\n                          secondary={profileData.fullName || 'Not set'}\r\n                        />\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemIcon>\r\n                          <EmailIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                          primary=\"Email\"\r\n                          secondary={profileData.email || 'Not set'}\r\n                        />\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemIcon>\r\n                          <PhoneIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                          primary=\"Phone Number\"\r\n                          secondary={profileData.phone || 'Not set'}\r\n                        />\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemIcon>\r\n                          <CalendarIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                          primary=\"Date of Birth\"\r\n                          secondary={profileData.dateOfBirth ? new Date(profileData.dateOfBirth).toLocaleDateString() : 'Not set'}\r\n                        />\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemIcon>\r\n                          <GenderIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                          primary=\"Gender\"\r\n                          secondary={profileData.gender || 'Not set'}\r\n                        />\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemIcon>\r\n                          <SchoolIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                          primary=\"Class\"\r\n                          secondary={profileData.className || 'Not set'}\r\n                        />\r\n                      </ListItem>\r\n                    </List>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Avatar Update Dialog */}\r\n          <Dialog open={avatarDialog} onClose={() => setAvatarDialog(false)} maxWidth=\"sm\" fullWidth>\r\n            <DialogTitle>Update Avatar</DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Avatar URL\"\r\n                value={newAvatarUrl}\r\n                onChange={(e) => setNewAvatarUrl(e.target.value)}\r\n                placeholder=\"Enter image URL\"\r\n                className=\"mt-4\"\r\n              />\r\n              {newAvatarUrl && (\r\n                <Box className=\"mt-4 text-center\">\r\n                  <Typography variant=\"body2\" className=\"mb-2\">Preview:</Typography>\r\n                  <Avatar\r\n                    src={newAvatarUrl}\r\n                    sx={{ width: 80, height: 80, mx: 'auto' }}\r\n                  >\r\n                    Preview\r\n                  </Avatar>\r\n                </Box>\r\n              )}\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={() => setAvatarDialog(false)}>Cancel</Button>\r\n              <Button\r\n                onClick={handleAvatarUpdate}\r\n                variant=\"contained\"\r\n                disabled={!newAvatarUrl}\r\n              >\r\n                Update Avatar\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}