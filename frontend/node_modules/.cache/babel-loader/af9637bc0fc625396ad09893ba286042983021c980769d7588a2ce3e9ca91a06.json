{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useForm}from'react-hook-form';import{yupResolver}from'@hookform/resolvers/yup';import*as yup from'yup';import{useAuth}from'../../context/AuthContext';import{useAlert}from'../../hooks/useAlert';// Import useAlert hook\nimport{Card,CardContent,CardHeader,TextField,Button,Typography,Grid,Select,MenuItem,FormControl,InputLabel,Box,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,IconButton,Dialog,DialogTitle,DialogContent,DialogActions,Alert,Chip,Checkbox,FormControlLabel,Autocomplete}from'@mui/material';import{Add as AddIcon,Edit as EditIcon,Delete as DeleteIcon,Search as SearchIcon,LocalHospital as HealthIcon,Visibility as VisibilityIcon}from'@mui/icons-material';import{getAllHealthCheckupRecords,createHealthCheckupRecord,updateHealthCheckupRecord,deleteHealthCheckupRecord,getAllStudents,getAllHealthEvents,getAllNurses}from'../../utils/api';import PageHeader from'../../components/PageHeader';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const healthCheckupSchema=yup.object().shape({studentId:yup.string().required('Student is required'),checkupDate:yup.date().required('Checkup date is required'),conductedBy:yup.string().required('Conducted by is required'),eventId:yup.string().required('Health event is required'),status:yup.string().required('Status is required'),height:yup.number().positive('Height must be positive').max(300,'Height cannot exceed 300 cm').transform((value,originalValue)=>originalValue===''?null:value).nullable(),weight:yup.number().positive('Weight must be positive').max(500,'Weight cannot exceed 500 kg').transform((value,originalValue)=>originalValue===''?null:value).nullable(),bloodPressureSystolic:yup.number().integer('Must be a whole number').min(70,'Systolic pressure must be at least 70').max(250,'Systolic pressure cannot exceed 250').transform((value,originalValue)=>originalValue===''?null:value).nullable(),bloodPressureDiastolic:yup.number().integer('Must be a whole number').min(40,'Diastolic pressure must be at least 40').max(150,'Diastolic pressure cannot exceed 150').transform((value,originalValue)=>originalValue===''?null:value).nullable(),heartRate:yup.number().integer('Must be a whole number').min(50,'Heart rate must be at least 50').max(200,'Heart rate cannot exceed 200').transform((value,originalValue)=>originalValue===''?null:value).nullable(),temperature:yup.number().min(35,'Temperature must be at least 35°C').max(42,'Temperature cannot exceed 42°C').transform((value,originalValue)=>originalValue===''?null:value).nullable(),visionLeft:yup.string(),visionRight:yup.string(),hearingLeft:yup.string(),hearingRight:yup.string(),generalHealthStatus:yup.string().required('Health status is required'),healthNotes:yup.string(),recommendations:yup.string(),requiresFollowUp:yup.boolean(),followUpDate:yup.date().nullable().when('requiresFollowUp',{is:true,then:schema=>schema.required('Follow-up date is required when follow-up is needed'),otherwise:schema=>schema.nullable()}),followUpNotes:yup.string()});function HealthCheckupManagement(){var _form$formState$error2,_form$formState$error3,_form$formState$error5,_form$formState$error6,_form$formState$error7,_form$formState$error8,_form$formState$error9,_form$formState$error0,_form$formState$error1;const{currentUser}=useAuth();const{successAlert,errorAlert,deleteConfirm}=useAlert();// Initialize useAlert hook\nconst[checkups,setCheckups]=useState([]);const[students,setStudents]=useState([]);const[healthEvents,setHealthEvents]=useState([]);const[nurses,setNurses]=useState([]);const[dialogOpen,setDialogOpen]=useState(false);const[viewDialogOpen,setViewDialogOpen]=useState(false);const[selectedCheckup,setSelectedCheckup]=useState(null);const[selectedStudent,setSelectedStudent]=useState(null);// Add state for selected student\nconst[viewCheckup,setViewCheckup]=useState(null);const[searchTerm,setSearchTerm]=useState('');const[filterStatus,setFilterStatus]=useState('all');// Helper function to check if any checkup has BMI data\nconst hasBMIData=()=>{return checkups.some(checkup=>checkup.bmi&&checkup.bmi!==null&&checkup.bmi!=='');};// Helper function to get conductor name\nconst getConductorName=()=>{if(currentUser){return currentUser.fullName||currentUser.username||'Unknown User';}return'';};// Helper function to format conducted by name for display\nconst formatConductedByName=conductedBy=>{if(!conductedBy)return'N/A';// First, try to find the nurse by nurse_code (which should match username)\nconst nurse=nurses.find(n=>n.nurseCode===conductedBy||n.nurse_code===conductedBy);if(nurse){return nurse.fullName||nurse.full_name||nurse.name;}// Fallback: If it looks like a username (contains dots, no spaces), try to format it\nif(conductedBy.includes('.')&&!conductedBy.includes(' ')){// Convert \"nurse.johnson\" to \"Nurse Johnson\"\nreturn conductedBy.split('.').map(part=>part.charAt(0).toUpperCase()+part.slice(1).toLowerCase()).join(' ');}// If it's already a full name, return as is\nreturn conductedBy;};const form=useForm({resolver:yupResolver(healthCheckupSchema),defaultValues:{conductedBy:getConductorName(),checkupDate:new Date().toISOString().split('T')[0],// Current date in YYYY-MM-DD format\ngeneralHealthStatus:'Normal',status:'Completed',requiresFollowUp:false,visionLeft:'',visionRight:'',hearingLeft:'Normal',hearingRight:'Normal'}});useEffect(()=>{const loadInitialData=async()=>{try{// Load students, health events, and nurses first\nawait fetchStudents();await fetchHealthEvents();await fetchNurses();// Then fetch checkups after all dependencies are loaded\nawait fetchCheckups();}catch(error){console.error('Error loading initial data:',error);}};loadInitialData();},[]);// Empty dependency array - only run once\n// Re-fetch checkups when students or nurses are loaded to ensure proper enrichment\nuseEffect(()=>{if(students.length>0&&nurses.length>0){fetchCheckups();}},[students,nurses]);// Re-run when students or nurses change\n// Update conducted by field when currentUser is available\nuseEffect(()=>{if(currentUser&&!form.getValues('conductedBy')){form.setValue('conductedBy',getConductorName());}},[currentUser,form]);// Re-run when currentUser changes\nconst fetchCheckups=async()=>{try{const data=await getAllHealthCheckupRecords();if(!data){setCheckups([]);return;}// Store the raw checkups first, enrich with student names and event info later if available\nconst enrichedCheckups=data.map(checkup=>{const student=students.find(s=>s.id===checkup.studentId);const event=healthEvents.find(e=>e.id===checkup.eventId);// Ensure we always have a proper student name\nconst studentName=(student===null||student===void 0?void 0:student.name)||'Unknown Student';return{...checkup,studentName:studentName,eventName:event?event.name:checkup.eventId?`Event ID: ${checkup.eventId}`:'No Event'};});setCheckups(enrichedCheckups);}catch(error){console.error('Error fetching checkups:',error);// Show error to user instead of using mock data\nerrorAlert('Unable to load health checkup records. Please refresh the page or contact administrator.');setCheckups([]);}};const fetchStudents=async()=>{try{const data=await getAllStudents();if(data&&Array.isArray(data)){const mappedStudents=data.map(student=>{var _student$gradeLevel;return{id:student.studentCode||student.username||student.id||student.studentId,name:student.fullName||student.name||`${student.firstName||''} ${student.lastName||''}`.trim()||'Unknown Student',grade:((_student$gradeLevel=student.gradeLevel)===null||_student$gradeLevel===void 0?void 0:_student$gradeLevel.gradeName)||student.grade||student.className||'N/A'};});setStudents(mappedStudents);}else{setStudents([]);}}catch(error){console.error('Error fetching students:',error);// Show error to user instead of using mock data\nerrorAlert('Unable to load students. Please refresh the page or contact administrator.');setStudents([]);}};const fetchHealthEvents=async()=>{try{const data=await getAllHealthEvents();if(data&&Array.isArray(data)){const mappedEvents=data.map(event=>({id:event.eventId,name:event.eventName||event.title||`Event ${event.eventId}`,date:event.eventDate||event.scheduledDate,type:event.eventType}));setHealthEvents(mappedEvents);}else{setHealthEvents([]);}}catch(error){console.error('Error fetching health events:',error);setHealthEvents([]);}};const fetchNurses=async()=>{try{const data=await getAllNurses();if(data&&Array.isArray(data)){const mappedNurses=data.map(nurse=>({id:nurse.nurseId||nurse.nurse_id,nurseCode:nurse.nurseCode||nurse.nurse_code,fullName:nurse.fullName||nurse.full_name,qualification:nurse.qualification,specialization:nurse.specialization}));setNurses(mappedNurses);}else{setNurses([]);}}catch(error){console.error('Error fetching nurses:',error);setNurses([]);}};const handleAddCheckup=()=>{setSelectedCheckup(null);setSelectedStudent(null);// Reset selected student\nform.reset({conductedBy:getConductorName(),checkupDate:new Date().toISOString().split('T')[0],// Current date\ngeneralHealthStatus:'Normal',status:'Completed',requiresFollowUp:false,visionLeft:'',visionRight:'',hearingLeft:'Normal',hearingRight:'Normal'});setDialogOpen(true);};const handleEditCheckup=checkup=>{setSelectedCheckup(checkup);// Find and set the selected student for the Autocomplete\nconst student=students.find(s=>s.id===checkup.studentId);setSelectedStudent(student||null);form.reset(checkup);setDialogOpen(true);};const handleViewCheckup=checkup=>{setViewCheckup(checkup);setViewDialogOpen(true);};const handleDeleteCheckup=async id=>{const confirmed=await deleteConfirm('Are you sure you want to delete this checkup record?');if(confirmed){try{await deleteHealthCheckupRecord(id);if(students.length>0){fetchCheckups();}successAlert('Health checkup record deleted successfully');}catch(error){console.error('Error deleting checkup:',error);errorAlert('Error deleting health checkup record. Please try again.');}}};// Helper function to check if student already has a checkup record for the same event\nconst checkDuplicateRecord=(studentId,eventId)=>{return checkups.find(checkup=>checkup.studentId===studentId&&checkup.eventId===eventId);};const onSubmit=async data=>{try{if(selectedCheckup){await updateHealthCheckupRecord(selectedCheckup.checkupId,data);}else{// Check for duplicate record before creating new one (now always has eventId)\nconst existingRecord=checkDuplicateRecord(data.studentId,data.eventId);if(existingRecord){// Ask user if they want to update the existing record instead\nconst shouldUpdate=await deleteConfirm(`A health checkup record already exists for this student in this event.\\n\\n`+`Student: ${existingRecord.studentName}\\n`+`Event: ${existingRecord.eventName}\\n`+`Date: ${existingRecord.checkupDate}\\n\\n`+`Would you like to update the existing record instead of creating a new one?`);if(shouldUpdate){// Switch to update mode with existing record\nsetSelectedCheckup(existingRecord);form.reset({...existingRecord,...data});// Merge existing data with new input\nreturn;// Don't close dialog, let user continue editing\n}else{return;// User chose not to update, cancel the operation\n}}await createHealthCheckupRecord(data);}setDialogOpen(false);setSelectedStudent(null);// Reset selected student\nform.reset({conductedBy:getConductorName(),checkupDate:new Date().toISOString().split('T')[0],// Current date\ngeneralHealthStatus:'Normal',status:'Completed',requiresFollowUp:false,visionLeft:'',visionRight:'',hearingLeft:'Normal',hearingRight:'Normal'});// Fetch checkups after successful save\nif(students.length>0){fetchCheckups();}successAlert('Health checkup record saved successfully');}catch(error){console.error('Error saving checkup:',error);errorAlert('Error saving health checkup record. Please try again.');}};const filteredCheckups=checkups.filter(checkup=>{const matchesSearch=checkup.studentName&&checkup.studentName.toLowerCase().includes(searchTerm.toLowerCase())||checkup.studentId&&checkup.studentId.toLowerCase().includes(searchTerm.toLowerCase())||checkup.conductedBy&&checkup.conductedBy.toLowerCase().includes(searchTerm.toLowerCase());const matchesStatus=filterStatus==='all'||checkup.status===filterStatus||checkup.generalHealthStatus===filterStatus;return matchesSearch&&matchesStatus;});return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsx(PageHeader,{title:\"Health Checkup Management\",subtitle:\"Manage student health checkup records and results\",icon:/*#__PURE__*/_jsx(HealthIcon,{})}),/*#__PURE__*/_jsxs(Box,{className:\"flex gap-4 mb-4\",children:[/*#__PURE__*/_jsx(TextField,{placeholder:\"Search checkups...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),InputProps:{startAdornment:/*#__PURE__*/_jsx(SearchIcon,{className:\"mr-2 text-gray-500\"})},className:\"flex-1\"}),/*#__PURE__*/_jsxs(FormControl,{className:\"min-w-32\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Status\"}),/*#__PURE__*/_jsxs(Select,{value:filterStatus,label:\"Status\",onChange:e=>setFilterStatus(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"all\",children:\"All\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Pending\",children:\"Pending\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"In Progress\",children:\"In Progress\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Completed\",children:\"Completed\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Cancelled\",children:\"Cancelled\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Rescheduled\",children:\"Rescheduled\"})]})]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:handleAddCheckup,children:\"Add Checkup\"})]}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Student\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Grade\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Date\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Conducted By\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Height (cm)\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Weight (kg)\"}),hasBMIData()&&/*#__PURE__*/_jsx(TableCell,{children:\"BMI\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Health Status\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Checkup Status\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:filteredCheckups.length>0?filteredCheckups.map(checkup=>{var _students$find;return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:(()=>{const student=students.find(s=>s.id===checkup.studentId);const displayName=(student===null||student===void 0?void 0:student.name)||checkup.studentName;// Only show the studentName if it doesn't start with \"Student ID:\"\nconst finalName=displayName&&!displayName.startsWith('Student ID:')?displayName:(student===null||student===void 0?void 0:student.name)||'Unknown Student';return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:finalName}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"textSecondary\",children:[\"ID: \",checkup.studentId]})]});})()}),/*#__PURE__*/_jsx(TableCell,{children:((_students$find=students.find(s=>s.id===checkup.studentId))===null||_students$find===void 0?void 0:_students$find.grade)||'N/A'}),/*#__PURE__*/_jsx(TableCell,{children:new Date(checkup.checkupDate).toLocaleDateString()}),/*#__PURE__*/_jsx(TableCell,{children:formatConductedByName(checkup.conductedBy)}),/*#__PURE__*/_jsx(TableCell,{children:checkup.height||'N/A'}),/*#__PURE__*/_jsx(TableCell,{children:checkup.weight||'N/A'}),hasBMIData()&&/*#__PURE__*/_jsx(TableCell,{children:checkup.bmi||'N/A'}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:checkup.generalHealthStatus||'Normal',color:checkup.generalHealthStatus==='Normal'?'success':'warning',size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:checkup.status||'Completed',color:checkup.status==='Completed'?'success':checkup.status==='In Progress'?'info':checkup.status==='Pending'?'warning':checkup.status==='Cancelled'?'error':'default',size:\"small\"})}),/*#__PURE__*/_jsxs(TableCell,{children:[/*#__PURE__*/_jsx(IconButton,{color:\"primary\",onClick:()=>handleEditCheckup(checkup),children:/*#__PURE__*/_jsx(EditIcon,{})}),/*#__PURE__*/_jsx(IconButton,{color:\"primary\",onClick:()=>handleViewCheckup(checkup),children:/*#__PURE__*/_jsx(VisibilityIcon,{})}),/*#__PURE__*/_jsx(IconButton,{color:\"error\",onClick:()=>handleDeleteCheckup(checkup.checkupId),children:/*#__PURE__*/_jsx(DeleteIcon,{})})]})]},checkup.checkupId);}):/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{colSpan:10,align:\"center\",children:/*#__PURE__*/_jsxs(Box,{py:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"textSecondary\",gutterBottom:true,children:\"No health checkups found\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Click \\\"Add Checkup\\\" to create your first health checkup record.\"})]})})})})]})})})}),/*#__PURE__*/_jsxs(Dialog,{open:dialogOpen,onClose:()=>{setDialogOpen(false);setSelectedStudent(null);},maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:selectedCheckup?'Edit Health Checkup':'Add New Health Checkup'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:form.handleSubmit(onSubmit),children:[/*#__PURE__*/_jsxs(DialogContent,{children:[selectedCheckup&&/*#__PURE__*/_jsxs(Alert,{severity:\"info\",sx:{mb:3},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Updating existing record:\"}),\" This student already has a checkup record for this event. You are now updating the existing record instead of creating a new one.\"]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Autocomplete,{options:students,value:selectedStudent// Use selectedStudent state\n,getOptionLabel:option=>`${option.name} - ${option.grade}`,renderInput:params=>{var _form$formState$error;return/*#__PURE__*/_jsx(TextField,{...params,label:\"Student\",required:true,error:!!form.formState.errors.studentId,helperText:(_form$formState$error=form.formState.errors.studentId)===null||_form$formState$error===void 0?void 0:_form$formState$error.message});},onChange:(event,value)=>{setSelectedStudent(value);// Update selectedStudent state\nform.setValue('studentId',(value===null||value===void 0?void 0:value.id)||'');},disabled:!!selectedCheckup// Disable when editing to prevent changing student\n})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Checkup Date\",type:\"date\",...form.register('checkupDate'),error:!!form.formState.errors.checkupDate,helperText:(_form$formState$error2=form.formState.errors.checkupDate)===null||_form$formState$error2===void 0?void 0:_form$formState$error2.message,InputLabelProps:{shrink:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Conducted By\",...form.register('conductedBy'),error:!!form.formState.errors.conductedBy,helperText:(_form$formState$error3=form.formState.errors.conductedBy)===null||_form$formState$error3===void 0?void 0:_form$formState$error3.message})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Autocomplete,{options:healthEvents,getOptionLabel:option=>{let label=option.name||'';if(option.date){label+=` (${new Date(option.date).toLocaleDateString()})`;}return label;},renderOption:(props,option)=>/*#__PURE__*/_jsx(Box,{component:\"li\",...props,children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:option.name}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"textSecondary\",children:option.date&&`Date: ${new Date(option.date).toLocaleDateString()}`})]})}),value:healthEvents.find(event=>event.id===form.watch('eventId'))||null,renderInput:params=>{var _form$formState$error4;return/*#__PURE__*/_jsx(TextField,{...params,label:\"Health Event\",required:true,error:!!form.formState.errors.eventId,helperText:(_form$formState$error4=form.formState.errors.eventId)===null||_form$formState$error4===void 0?void 0:_form$formState$error4.message});},onChange:(event,value)=>{form.setValue('eventId',(value===null||value===void 0?void 0:value.id)||'');}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Health Status\"}),/*#__PURE__*/_jsxs(Select,{...form.register('generalHealthStatus'),error:!!form.formState.errors.generalHealthStatus,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"Normal\",children:\"Normal\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Attention Required\",children:\"Attention Required\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Medical Follow-up\",children:\"Medical Follow-up\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Checkup Status\"}),/*#__PURE__*/_jsxs(Select,{...form.register('status'),error:!!form.formState.errors.status,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"Pending\",children:\"Pending\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"In Progress\",children:\"In Progress\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Completed\",children:\"Completed\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Cancelled\",children:\"Cancelled\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Rescheduled\",children:\"Rescheduled\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:\"mb-2\",children:\"Basic Measurements\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Height (cm)\",type:\"number\",...form.register('height'),error:!!form.formState.errors.height,helperText:(_form$formState$error5=form.formState.errors.height)===null||_form$formState$error5===void 0?void 0:_form$formState$error5.message})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Weight (kg)\",type:\"number\",...form.register('weight'),error:!!form.formState.errors.weight,helperText:(_form$formState$error6=form.formState.errors.weight)===null||_form$formState$error6===void 0?void 0:_form$formState$error6.message})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Heart Rate (bpm)\",type:\"number\",...form.register('heartRate'),error:!!form.formState.errors.heartRate,helperText:(_form$formState$error7=form.formState.errors.heartRate)===null||_form$formState$error7===void 0?void 0:_form$formState$error7.message})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Temperature (\\xB0C)\",type:\"number\",step:\"0.1\",...form.register('temperature'),error:!!form.formState.errors.temperature,helperText:(_form$formState$error8=form.formState.errors.temperature)===null||_form$formState$error8===void 0?void 0:_form$formState$error8.message})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Systolic BP\",type:\"number\",...form.register('bloodPressureSystolic'),error:!!form.formState.errors.bloodPressureSystolic,helperText:(_form$formState$error9=form.formState.errors.bloodPressureSystolic)===null||_form$formState$error9===void 0?void 0:_form$formState$error9.message})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Diastolic BP\",type:\"number\",...form.register('bloodPressureDiastolic'),error:!!form.formState.errors.bloodPressureDiastolic,helperText:(_form$formState$error0=form.formState.errors.bloodPressureDiastolic)===null||_form$formState$error0===void 0?void 0:_form$formState$error0.message})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Vision Left\",...form.register('visionLeft'),placeholder:\"e.g., 10/10\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Vision Right\",...form.register('visionRight'),placeholder:\"e.g., 10/10\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Hearing Left\",...form.register('hearingLeft'),placeholder:\"e.g., Normal\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Hearing Right\",...form.register('hearingRight'),placeholder:\"e.g., Normal\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Health Notes\",multiline:true,rows:3,...form.register('healthNotes'),placeholder:\"Additional health observations...\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Recommendations\",multiline:true,rows:2,...form.register('recommendations'),placeholder:\"Medical recommendations...\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{...form.register('requiresFollowUp')}),label:\"Requires Follow-up\"})}),form.watch('requiresFollowUp')&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Follow-up Date\",type:\"date\",...form.register('followUpDate'),error:!!form.formState.errors.followUpDate,helperText:(_form$formState$error1=form.formState.errors.followUpDate)===null||_form$formState$error1===void 0?void 0:_form$formState$error1.message,InputLabelProps:{shrink:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Follow-up Notes\",multiline:true,rows:2,...form.register('followUpNotes'),placeholder:\"Follow-up instructions or notes...\"})})]})]})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>{setDialogOpen(false);setSelectedStudent(null);},children:\"Cancel\"}),/*#__PURE__*/_jsxs(Button,{type:\"submit\",variant:\"contained\",children:[selectedCheckup?'Update':'Save',\" Checkup\"]})]})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:viewDialogOpen,onClose:()=>setViewDialogOpen(false),maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Health Checkup Details\"}),/*#__PURE__*/_jsx(DialogContent,{children:viewCheckup&&/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"primary\",sx:{mb:2},children:\"Student Information\"})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Student Name\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:viewCheckup.studentName||'N/A'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Student ID\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:viewCheckup.studentId||'N/A'})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"primary\",sx:{mb:2,mt:2},children:\"Checkup Information\"})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Checkup Date\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:viewCheckup.checkupDate?new Date(viewCheckup.checkupDate).toLocaleDateString():'N/A'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Conducted By\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:formatConductedByName(viewCheckup.conductedBy)})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Health Event\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:viewCheckup.eventName||'No Event'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Health Status\"}),/*#__PURE__*/_jsx(Chip,{label:viewCheckup.generalHealthStatus||'N/A',color:viewCheckup.generalHealthStatus==='Normal'?'success':viewCheckup.generalHealthStatus==='Attention Required'?'warning':viewCheckup.generalHealthStatus==='Medical Follow-up'?'error':'default',sx:{fontWeight:'bold'}})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Checkup Status\"}),/*#__PURE__*/_jsx(Chip,{label:viewCheckup.status||'Completed',color:viewCheckup.status==='Completed'?'success':viewCheckup.status==='In Progress'?'info':viewCheckup.status==='Pending'?'warning':viewCheckup.status==='Cancelled'?'error':viewCheckup.status==='Rescheduled'?'secondary':'default',sx:{fontWeight:'bold'}})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"primary\",sx:{mb:2,mt:2},children:\"Measurements\"})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Height\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:viewCheckup.height?`${viewCheckup.height} cm`:'N/A'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Weight\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:viewCheckup.weight?`${viewCheckup.weight} kg`:'N/A'})]}),hasBMIData()&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"BMI\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:viewCheckup.bmi?viewCheckup.bmi.toFixed(1):'N/A'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Heart Rate\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:viewCheckup.heartRate?`${viewCheckup.heartRate} bpm`:'N/A'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Temperature\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:viewCheckup.temperature?`${viewCheckup.temperature}°C`:'N/A'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Blood Pressure\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:viewCheckup.bloodPressureSystolic&&viewCheckup.bloodPressureDiastolic?`${viewCheckup.bloodPressureSystolic}/${viewCheckup.bloodPressureDiastolic}`:'N/A'})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"primary\",sx:{mb:2,mt:2},children:\"Vision & Hearing\"})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Vision Left\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:viewCheckup.visionLeft||'N/A'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Vision Right\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:viewCheckup.visionRight||'N/A'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Hearing Left\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:viewCheckup.hearingLeft||'N/A'})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Hearing Right\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:viewCheckup.hearingRight||'N/A'})]}),(viewCheckup.healthNotes||viewCheckup.recommendations||viewCheckup.requiresFollowUp)&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"primary\",sx:{mb:2,mt:2},children:\"Notes & Follow-up\"})}),viewCheckup.healthNotes&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Health Notes\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:viewCheckup.healthNotes})]}),viewCheckup.recommendations&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Recommendations\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:viewCheckup.recommendations})]}),viewCheckup.requiresFollowUp&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Requires Follow-up\"}),/*#__PURE__*/_jsx(Chip,{label:viewCheckup.requiresFollowUp?'Yes':'No',color:viewCheckup.requiresFollowUp?'warning':'success',sx:{fontWeight:'bold'}})]}),viewCheckup.followUpDate&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Follow-up Date\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:new Date(viewCheckup.followUpDate).toLocaleDateString()})]}),viewCheckup.followUpNotes&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Follow-up Notes\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:'bold'},children:viewCheckup.followUpNotes})]})]})]})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setViewDialogOpen(false),children:\"Close\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:()=>{setViewDialogOpen(false);handleEditCheckup(viewCheckup);},children:\"Edit Checkup\"})]})]})]});}export default HealthCheckupManagement;","map":{"version":3,"names":["React","useState","useEffect","useForm","yupResolver","yup","useAuth","useAlert","Card","CardContent","CardHeader","TextField","Button","Typography","Grid","Select","MenuItem","FormControl","InputLabel","Box","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","Alert","Chip","Checkbox","FormControlLabel","Autocomplete","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","Search","SearchIcon","LocalHospital","HealthIcon","Visibility","VisibilityIcon","getAllHealthCheckupRecords","createHealthCheckupRecord","updateHealthCheckupRecord","deleteHealthCheckupRecord","getAllStudents","getAllHealthEvents","getAllNurses","PageHeader","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","healthCheckupSchema","object","shape","studentId","string","required","checkupDate","date","conductedBy","eventId","status","height","number","positive","max","transform","value","originalValue","nullable","weight","bloodPressureSystolic","integer","min","bloodPressureDiastolic","heartRate","temperature","visionLeft","visionRight","hearingLeft","hearingRight","generalHealthStatus","healthNotes","recommendations","requiresFollowUp","boolean","followUpDate","when","is","then","schema","otherwise","followUpNotes","HealthCheckupManagement","_form$formState$error2","_form$formState$error3","_form$formState$error5","_form$formState$error6","_form$formState$error7","_form$formState$error8","_form$formState$error9","_form$formState$error0","_form$formState$error1","currentUser","successAlert","errorAlert","deleteConfirm","checkups","setCheckups","students","setStudents","healthEvents","setHealthEvents","nurses","setNurses","dialogOpen","setDialogOpen","viewDialogOpen","setViewDialogOpen","selectedCheckup","setSelectedCheckup","selectedStudent","setSelectedStudent","viewCheckup","setViewCheckup","searchTerm","setSearchTerm","filterStatus","setFilterStatus","hasBMIData","some","checkup","bmi","getConductorName","fullName","username","formatConductedByName","nurse","find","n","nurseCode","nurse_code","full_name","name","includes","split","map","part","charAt","toUpperCase","slice","toLowerCase","join","form","resolver","defaultValues","Date","toISOString","loadInitialData","fetchStudents","fetchHealthEvents","fetchNurses","fetchCheckups","error","console","length","getValues","setValue","data","enrichedCheckups","student","s","id","event","e","studentName","eventName","Array","isArray","mappedStudents","_student$gradeLevel","studentCode","firstName","lastName","trim","grade","gradeLevel","gradeName","className","mappedEvents","title","eventDate","scheduledDate","type","eventType","mappedNurses","nurseId","nurse_id","qualification","specialization","handleAddCheckup","reset","handleEditCheckup","handleViewCheckup","handleDeleteCheckup","confirmed","checkDuplicateRecord","onSubmit","checkupId","existingRecord","shouldUpdate","filteredCheckups","filter","matchesSearch","matchesStatus","children","subtitle","icon","placeholder","onChange","target","InputProps","startAdornment","label","variant","startIcon","onClick","component","_students$find","displayName","finalName","startsWith","color","toLocaleDateString","size","colSpan","align","py","gutterBottom","open","onClose","maxWidth","fullWidth","handleSubmit","severity","sx","mb","container","spacing","item","xs","md","options","getOptionLabel","option","renderInput","params","_form$formState$error","formState","errors","helperText","message","disabled","register","InputLabelProps","shrink","renderOption","props","watch","_form$formState$error4","step","multiline","rows","control","fontWeight","mt","toFixed"],"sources":["C:/Users/trand/OneDrive/Documents/GitHub/SchoolMedicalManagement/SchoolMedicalManagement/frontend/src/pages/medical/HealthCheckupManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { useAlert } from '../../hooks/useAlert'; // Import useAlert hook\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Alert,\r\n  Chip,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Autocomplete\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  Search as SearchIcon,\r\n  LocalHospital as HealthIcon,\r\n  Visibility as VisibilityIcon\r\n} from '@mui/icons-material';\r\nimport {\r\n  getAllHealthCheckupRecords,\r\n  createHealthCheckupRecord,\r\n  updateHealthCheckupRecord,\r\n  deleteHealthCheckupRecord,\r\n  getAllStudents,\r\n  getAllHealthEvents,\r\n  getAllNurses\r\n} from '../../utils/api';\r\nimport PageHeader from '../../components/PageHeader';\r\n\r\nconst healthCheckupSchema = yup.object().shape({\r\n  studentId: yup.string().required('Student is required'),\r\n  checkupDate: yup.date().required('Checkup date is required'),\r\n  conductedBy: yup.string().required('Conducted by is required'),\r\n  eventId: yup.string().required('Health event is required'),\r\n  status: yup.string().required('Status is required'),\r\n  height: yup.number()\r\n    .positive('Height must be positive')\r\n    .max(300, 'Height cannot exceed 300 cm')\r\n    .transform((value, originalValue) => originalValue === '' ? null : value)\r\n    .nullable(),\r\n  weight: yup.number()\r\n    .positive('Weight must be positive')\r\n    .max(500, 'Weight cannot exceed 500 kg')\r\n    .transform((value, originalValue) => originalValue === '' ? null : value)\r\n    .nullable(),\r\n  bloodPressureSystolic: yup.number()\r\n    .integer('Must be a whole number')\r\n    .min(70, 'Systolic pressure must be at least 70')\r\n    .max(250, 'Systolic pressure cannot exceed 250')\r\n    .transform((value, originalValue) => originalValue === '' ? null : value)\r\n    .nullable(),\r\n  bloodPressureDiastolic: yup.number()\r\n    .integer('Must be a whole number')\r\n    .min(40, 'Diastolic pressure must be at least 40')\r\n    .max(150, 'Diastolic pressure cannot exceed 150')\r\n    .transform((value, originalValue) => originalValue === '' ? null : value)\r\n    .nullable(),\r\n  heartRate: yup.number()\r\n    .integer('Must be a whole number')\r\n    .min(50, 'Heart rate must be at least 50')\r\n    .max(200, 'Heart rate cannot exceed 200')\r\n    .transform((value, originalValue) => originalValue === '' ? null : value)\r\n    .nullable(),\r\n  temperature: yup.number()\r\n    .min(35, 'Temperature must be at least 35°C')\r\n    .max(42, 'Temperature cannot exceed 42°C')\r\n    .transform((value, originalValue) => originalValue === '' ? null : value)\r\n    .nullable(),\r\n  visionLeft: yup.string(),\r\n  visionRight: yup.string(),\r\n  hearingLeft: yup.string(),\r\n  hearingRight: yup.string(),\r\n  generalHealthStatus: yup.string().required('Health status is required'),\r\n  healthNotes: yup.string(),\r\n  recommendations: yup.string(),\r\n  requiresFollowUp: yup.boolean(),\r\n  followUpDate: yup.date()\r\n    .nullable()\r\n    .when('requiresFollowUp', {\r\n      is: true,\r\n      then: (schema) => schema.required('Follow-up date is required when follow-up is needed'),\r\n      otherwise: (schema) => schema.nullable()\r\n    }),\r\n  followUpNotes: yup.string()\r\n});\r\n\r\nfunction HealthCheckupManagement() {\r\n  const { currentUser } = useAuth();\r\n  const { successAlert, errorAlert, deleteConfirm } = useAlert(); // Initialize useAlert hook\r\n  const [checkups, setCheckups] = useState([]);\r\n  const [students, setStudents] = useState([]);\r\n  const [healthEvents, setHealthEvents] = useState([]);\r\n  const [nurses, setNurses] = useState([]);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [viewDialogOpen, setViewDialogOpen] = useState(false);\r\n  const [selectedCheckup, setSelectedCheckup] = useState(null);\r\n  const [selectedStudent, setSelectedStudent] = useState(null); // Add state for selected student\r\n  const [viewCheckup, setViewCheckup] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterStatus, setFilterStatus] = useState('all');\r\n  \r\n  // Helper function to check if any checkup has BMI data\r\n  const hasBMIData = () => {\r\n    return checkups.some(checkup => checkup.bmi && checkup.bmi !== null && checkup.bmi !== '');\r\n  };\r\n  \r\n  // Helper function to get conductor name\r\n  const getConductorName = () => {\r\n    if (currentUser) {\r\n      return currentUser.fullName || currentUser.username || 'Unknown User';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  // Helper function to format conducted by name for display\r\n  const formatConductedByName = (conductedBy) => {\r\n    if (!conductedBy) return 'N/A';\r\n    \r\n    // First, try to find the nurse by nurse_code (which should match username)\r\n    const nurse = nurses.find(n => n.nurseCode === conductedBy || n.nurse_code === conductedBy);\r\n    if (nurse) {\r\n      return nurse.fullName || nurse.full_name || nurse.name;\r\n    }\r\n    \r\n    // Fallback: If it looks like a username (contains dots, no spaces), try to format it\r\n    if (conductedBy.includes('.') && !conductedBy.includes(' ')) {\r\n      // Convert \"nurse.johnson\" to \"Nurse Johnson\"\r\n      return conductedBy\r\n        .split('.')\r\n        .map(part => part.charAt(0).toUpperCase() + part.slice(1).toLowerCase())\r\n        .join(' ');\r\n    }\r\n    \r\n    // If it's already a full name, return as is\r\n    return conductedBy;\r\n  };\r\n  \r\n  const form = useForm({\r\n    resolver: yupResolver(healthCheckupSchema),\r\n    defaultValues: {\r\n      conductedBy: getConductorName(),\r\n      checkupDate: new Date().toISOString().split('T')[0], // Current date in YYYY-MM-DD format\r\n      generalHealthStatus: 'Normal',\r\n      status: 'Completed',\r\n      requiresFollowUp: false,\r\n      visionLeft: '',\r\n      visionRight: '',\r\n      hearingLeft: 'Normal',\r\n      hearingRight: 'Normal'\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadInitialData = async () => {\r\n      try {\r\n        // Load students, health events, and nurses first\r\n        await fetchStudents();\r\n        await fetchHealthEvents();\r\n        await fetchNurses();\r\n        \r\n        // Then fetch checkups after all dependencies are loaded\r\n        await fetchCheckups();\r\n      } catch (error) {\r\n        console.error('Error loading initial data:', error);\r\n      }\r\n    };\r\n    \r\n    loadInitialData();\r\n  }, []); // Empty dependency array - only run once\r\n\r\n  // Re-fetch checkups when students or nurses are loaded to ensure proper enrichment\r\n  useEffect(() => {\r\n    if (students.length > 0 && nurses.length > 0) {\r\n      fetchCheckups();\r\n    }\r\n  }, [students, nurses]); // Re-run when students or nurses change\r\n\r\n  // Update conducted by field when currentUser is available\r\n  useEffect(() => {\r\n    if (currentUser && !form.getValues('conductedBy')) {\r\n      form.setValue('conductedBy', getConductorName());\r\n    }\r\n  }, [currentUser, form]); // Re-run when currentUser changes\r\n\r\n  const fetchCheckups = async () => {\r\n    try {\r\n      const data = await getAllHealthCheckupRecords();\r\n      \r\n      if (!data) {\r\n        setCheckups([]);\r\n        return;\r\n      }\r\n      \r\n      // Store the raw checkups first, enrich with student names and event info later if available\r\n      const enrichedCheckups = data.map(checkup => {\r\n        const student = students.find(s => s.id === checkup.studentId);\r\n        const event = healthEvents.find(e => e.id === checkup.eventId);\r\n        \r\n        // Ensure we always have a proper student name\r\n        const studentName = student?.name || 'Unknown Student';\r\n        \r\n        return {\r\n          ...checkup,\r\n          studentName: studentName,\r\n          eventName: event ? event.name : (checkup.eventId ? `Event ID: ${checkup.eventId}` : 'No Event')\r\n        };\r\n      });\r\n      \r\n      setCheckups(enrichedCheckups);\r\n    } catch (error) {\r\n      console.error('Error fetching checkups:', error);\r\n      // Show error to user instead of using mock data\r\n      errorAlert('Unable to load health checkup records. Please refresh the page or contact administrator.');\r\n      setCheckups([]);\r\n    }\r\n  };\r\n\r\n  const fetchStudents = async () => {\r\n    try {\r\n      const data = await getAllStudents();\r\n      \r\n      if (data && Array.isArray(data)) {\r\n        const mappedStudents = data.map(student => ({\r\n          id: student.studentCode || student.username || student.id || student.studentId,\r\n          name: student.fullName || student.name || `${student.firstName || ''} ${student.lastName || ''}`.trim() || 'Unknown Student',\r\n          grade: student.gradeLevel?.gradeName || student.grade || student.className || 'N/A'\r\n        }));\r\n        setStudents(mappedStudents);\r\n      } else {\r\n        setStudents([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching students:', error);\r\n      // Show error to user instead of using mock data\r\n      errorAlert('Unable to load students. Please refresh the page or contact administrator.');\r\n      setStudents([]);\r\n    }\r\n  };\r\n\r\n  const fetchHealthEvents = async () => {\r\n    try {\r\n      const data = await getAllHealthEvents();\r\n      if (data && Array.isArray(data)) {\r\n        const mappedEvents = data.map(event => ({\r\n          id: event.eventId,\r\n          name: event.eventName || event.title || `Event ${event.eventId}`,\r\n          date: event.eventDate || event.scheduledDate,\r\n          type: event.eventType\r\n        }));\r\n        setHealthEvents(mappedEvents);\r\n      } else {\r\n        setHealthEvents([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching health events:', error);\r\n      setHealthEvents([]);\r\n    }\r\n  };\r\n\r\n  const fetchNurses = async () => {\r\n    try {\r\n      const data = await getAllNurses();\r\n      if (data && Array.isArray(data)) {\r\n        const mappedNurses = data.map(nurse => ({\r\n          id: nurse.nurseId || nurse.nurse_id,\r\n          nurseCode: nurse.nurseCode || nurse.nurse_code,\r\n          fullName: nurse.fullName || nurse.full_name,\r\n          qualification: nurse.qualification,\r\n          specialization: nurse.specialization\r\n        }));\r\n        setNurses(mappedNurses);\r\n      } else {\r\n        setNurses([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching nurses:', error);\r\n      setNurses([]);\r\n    }\r\n  };\r\n\r\n  const handleAddCheckup = () => {\r\n    setSelectedCheckup(null);\r\n    setSelectedStudent(null); // Reset selected student\r\n    form.reset({\r\n      conductedBy: getConductorName(),\r\n      checkupDate: new Date().toISOString().split('T')[0], // Current date\r\n      generalHealthStatus: 'Normal',\r\n      status: 'Completed',\r\n      requiresFollowUp: false,\r\n      visionLeft: '',\r\n      visionRight: '',\r\n      hearingLeft: 'Normal',\r\n      hearingRight: 'Normal'\r\n    });\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  const handleEditCheckup = (checkup) => {\r\n    setSelectedCheckup(checkup);\r\n    // Find and set the selected student for the Autocomplete\r\n    const student = students.find(s => s.id === checkup.studentId);\r\n    setSelectedStudent(student || null);\r\n    form.reset(checkup);\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  const handleViewCheckup = (checkup) => {\r\n    setViewCheckup(checkup);\r\n    setViewDialogOpen(true);\r\n  };\r\n\r\n  const handleDeleteCheckup = async (id) => {\r\n    const confirmed = await deleteConfirm('Are you sure you want to delete this checkup record?');\r\n    if (confirmed) {\r\n      try {\r\n        await deleteHealthCheckupRecord(id);\r\n        if (students.length > 0) {\r\n          fetchCheckups();\r\n        }\r\n        successAlert('Health checkup record deleted successfully');\r\n      } catch (error) {\r\n        console.error('Error deleting checkup:', error);\r\n        errorAlert('Error deleting health checkup record. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Helper function to check if student already has a checkup record for the same event\r\n  const checkDuplicateRecord = (studentId, eventId) => {\r\n    return checkups.find(checkup => \r\n      checkup.studentId === studentId && \r\n      checkup.eventId === eventId\r\n    );\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      if (selectedCheckup) {\r\n        await updateHealthCheckupRecord(selectedCheckup.checkupId, data);\r\n      } else {\r\n        // Check for duplicate record before creating new one (now always has eventId)\r\n        const existingRecord = checkDuplicateRecord(data.studentId, data.eventId);\r\n        if (existingRecord) {\r\n          // Ask user if they want to update the existing record instead\r\n          const shouldUpdate = await deleteConfirm(\r\n            `A health checkup record already exists for this student in this event.\\n\\n` +\r\n            `Student: ${existingRecord.studentName}\\n` +\r\n            `Event: ${existingRecord.eventName}\\n` +\r\n            `Date: ${existingRecord.checkupDate}\\n\\n` +\r\n            `Would you like to update the existing record instead of creating a new one?`\r\n          );\r\n          \r\n          if (shouldUpdate) {\r\n            // Switch to update mode with existing record\r\n            setSelectedCheckup(existingRecord);\r\n            form.reset({...existingRecord, ...data}); // Merge existing data with new input\r\n            return; // Don't close dialog, let user continue editing\r\n          } else {\r\n            return; // User chose not to update, cancel the operation\r\n          }\r\n        }\r\n        \r\n        await createHealthCheckupRecord(data);\r\n      }\r\n      setDialogOpen(false);\r\n      setSelectedStudent(null); // Reset selected student\r\n      form.reset({\r\n        conductedBy: getConductorName(),\r\n        checkupDate: new Date().toISOString().split('T')[0], // Current date\r\n        generalHealthStatus: 'Normal',\r\n        status: 'Completed',\r\n        requiresFollowUp: false,\r\n        visionLeft: '',\r\n        visionRight: '',\r\n        hearingLeft: 'Normal',\r\n        hearingRight: 'Normal'\r\n      });\r\n      // Fetch checkups after successful save\r\n      if (students.length > 0) {\r\n        fetchCheckups();\r\n      }\r\n      successAlert('Health checkup record saved successfully');\r\n    } catch (error) {\r\n      console.error('Error saving checkup:', error);\r\n      errorAlert('Error saving health checkup record. Please try again.');\r\n    }\r\n  };\r\n\r\n  const filteredCheckups = checkups.filter(checkup => {\r\n    const matchesSearch = (checkup.studentName && checkup.studentName.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n                         (checkup.studentId && checkup.studentId.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n                         (checkup.conductedBy && checkup.conductedBy.toLowerCase().includes(searchTerm.toLowerCase()));\r\n    const matchesStatus = filterStatus === 'all' || \r\n                         checkup.status === filterStatus || \r\n                         checkup.generalHealthStatus === filterStatus;\r\n    return matchesSearch && matchesStatus;\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <PageHeader\r\n        title=\"Health Checkup Management\"\r\n        subtitle=\"Manage student health checkup records and results\"\r\n        icon={<HealthIcon />}\r\n      />\r\n\r\n      {/* Controls */}\r\n      <Box className=\"flex gap-4 mb-4\">\r\n        <TextField\r\n          placeholder=\"Search checkups...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          InputProps={{\r\n            startAdornment: <SearchIcon className=\"mr-2 text-gray-500\" />\r\n          }}\r\n          className=\"flex-1\"\r\n        />\r\n        <FormControl className=\"min-w-32\">\r\n          <InputLabel>Status</InputLabel>\r\n          <Select\r\n            value={filterStatus}\r\n            label=\"Status\"\r\n            onChange={(e) => setFilterStatus(e.target.value)}\r\n          >\r\n            <MenuItem value=\"all\">All</MenuItem>\r\n            <MenuItem value=\"Pending\">Pending</MenuItem>\r\n            <MenuItem value=\"In Progress\">In Progress</MenuItem>\r\n            <MenuItem value=\"Completed\">Completed</MenuItem>\r\n            <MenuItem value=\"Cancelled\">Cancelled</MenuItem>\r\n            <MenuItem value=\"Rescheduled\">Rescheduled</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleAddCheckup}\r\n        >\r\n          Add Checkup\r\n        </Button>\r\n      </Box>\r\n\r\n      {/* Checkups Table */}\r\n      <Card>\r\n        <CardContent>\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Student</TableCell>\r\n                  <TableCell>Grade</TableCell>\r\n                  <TableCell>Date</TableCell>\r\n                  <TableCell>Conducted By</TableCell>\r\n                  <TableCell>Height (cm)</TableCell>\r\n                  <TableCell>Weight (kg)</TableCell>\r\n                  {hasBMIData() && <TableCell>BMI</TableCell>}\r\n                  <TableCell>Health Status</TableCell>\r\n                  <TableCell>Checkup Status</TableCell>\r\n                  <TableCell>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {filteredCheckups.length > 0 ? (\r\n                  filteredCheckups.map((checkup) => (\r\n                    <TableRow key={checkup.checkupId}>\r\n                      <TableCell>\r\n                        {(() => {\r\n                          const student = students.find(s => s.id === checkup.studentId);\r\n                          const displayName = student?.name || checkup.studentName;\r\n                          \r\n                          // Only show the studentName if it doesn't start with \"Student ID:\"\r\n                          const finalName = displayName && !displayName.startsWith('Student ID:') \r\n                            ? displayName \r\n                            : (student?.name || 'Unknown Student');\r\n                            \r\n                          return (\r\n                            <div>\r\n                              <Typography variant=\"subtitle2\">{finalName}</Typography>\r\n                              <Typography variant=\"caption\" color=\"textSecondary\">\r\n                                ID: {checkup.studentId}\r\n                              </Typography>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {students.find(s => s.id === checkup.studentId)?.grade || 'N/A'}\r\n                      </TableCell>\r\n                      <TableCell>{new Date(checkup.checkupDate).toLocaleDateString()}</TableCell>\r\n                      <TableCell>{formatConductedByName(checkup.conductedBy)}</TableCell>\r\n                      <TableCell>{checkup.height || 'N/A'}</TableCell>\r\n                      <TableCell>{checkup.weight || 'N/A'}</TableCell>\r\n                      {hasBMIData() && <TableCell>{checkup.bmi || 'N/A'}</TableCell>}\r\n                      <TableCell>\r\n                        <Chip\r\n                          label={checkup.generalHealthStatus || 'Normal'}\r\n                          color={checkup.generalHealthStatus === 'Normal' ? 'success' : 'warning'}\r\n                          size=\"small\"\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Chip\r\n                          label={checkup.status || 'Completed'}\r\n                          color={\r\n                            checkup.status === 'Completed' ? 'success' :\r\n                            checkup.status === 'In Progress' ? 'info' :\r\n                            checkup.status === 'Pending' ? 'warning' :\r\n                            checkup.status === 'Cancelled' ? 'error' :\r\n                            'default'\r\n                          }\r\n                          size=\"small\"\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <IconButton \r\n                          color=\"primary\" \r\n                          onClick={() => handleEditCheckup(checkup)}\r\n                        >\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                        <IconButton \r\n                          color=\"primary\"\r\n                          onClick={() => handleViewCheckup(checkup)}\r\n                        >\r\n                          <VisibilityIcon />\r\n                        </IconButton>\r\n                        <IconButton \r\n                          color=\"error\" \r\n                          onClick={() => handleDeleteCheckup(checkup.checkupId)}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                ) : (\r\n                  <TableRow>\r\n                    <TableCell colSpan={10} align=\"center\">\r\n                      <Box py={4}>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\r\n                          No health checkups found\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                          Click \"Add Checkup\" to create your first health checkup record.\r\n                        </Typography>\r\n                      </Box>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Add/Edit Dialog */}\r\n      <Dialog open={dialogOpen} onClose={() => { setDialogOpen(false); setSelectedStudent(null); }} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>\r\n          {selectedCheckup ? 'Edit Health Checkup' : 'Add New Health Checkup'}\r\n        </DialogTitle>\r\n        <form onSubmit={form.handleSubmit(onSubmit)}>\r\n          <DialogContent>\r\n            {selectedCheckup && (\r\n              <Alert severity=\"info\" sx={{ mb: 3 }}>\r\n                <strong>Updating existing record:</strong> This student already has a checkup record for this event. \r\n                You are now updating the existing record instead of creating a new one.\r\n              </Alert>\r\n            )}\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={6}>\r\n                <Autocomplete\r\n                  options={students}\r\n                  value={selectedStudent} // Use selectedStudent state\r\n                  getOptionLabel={(option) => `${option.name} - ${option.grade}`}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Student\"\r\n                      required\r\n                      error={!!form.formState.errors.studentId}\r\n                      helperText={form.formState.errors.studentId?.message}\r\n                    />\r\n                  )}\r\n                  onChange={(event, value) => {\r\n                    setSelectedStudent(value); // Update selectedStudent state\r\n                    form.setValue('studentId', value?.id || '');\r\n                  }}\r\n                  disabled={!!selectedCheckup} // Disable when editing to prevent changing student\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Checkup Date\"\r\n                  type=\"date\"\r\n                  {...form.register('checkupDate')}\r\n                  error={!!form.formState.errors.checkupDate}\r\n                  helperText={form.formState.errors.checkupDate?.message}\r\n                  InputLabelProps={{ shrink: true }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Conducted By\"\r\n                  {...form.register('conductedBy')}\r\n                  error={!!form.formState.errors.conductedBy}\r\n                  helperText={form.formState.errors.conductedBy?.message}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Autocomplete\r\n                  options={healthEvents}\r\n                  getOptionLabel={(option) => {\r\n                    let label = option.name || '';\r\n                    if (option.date) {\r\n                      label += ` (${new Date(option.date).toLocaleDateString()})`;\r\n                    }\r\n                    return label;\r\n                  }}\r\n                  renderOption={(props, option) => (\r\n                    <Box component=\"li\" {...props}>\r\n                      <Box>\r\n                        <Typography variant=\"subtitle2\">{option.name}</Typography>\r\n                        <Typography variant=\"caption\" color=\"textSecondary\">\r\n                          {option.date && `Date: ${new Date(option.date).toLocaleDateString()}`}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  )}\r\n                  value={healthEvents.find(event => event.id === form.watch('eventId')) || null}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Health Event\"\r\n                      required\r\n                      error={!!form.formState.errors.eventId}\r\n                      helperText={form.formState.errors.eventId?.message}\r\n                    />\r\n                  )}\r\n                  onChange={(event, value) => {\r\n                    form.setValue('eventId', value?.id || '');\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel>Health Status</InputLabel>\r\n                  <Select\r\n                    {...form.register('generalHealthStatus')}\r\n                    error={!!form.formState.errors.generalHealthStatus}\r\n                  >\r\n                    <MenuItem value=\"Normal\">Normal</MenuItem>\r\n                    <MenuItem value=\"Attention Required\">Attention Required</MenuItem>\r\n                    <MenuItem value=\"Medical Follow-up\">Medical Follow-up</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel>Checkup Status</InputLabel>\r\n                  <Select\r\n                    {...form.register('status')}\r\n                    error={!!form.formState.errors.status}\r\n                  >\r\n                    <MenuItem value=\"Pending\">Pending</MenuItem>\r\n                    <MenuItem value=\"In Progress\">In Progress</MenuItem>\r\n                    <MenuItem value=\"Completed\">Completed</MenuItem>\r\n                    <MenuItem value=\"Cancelled\">Cancelled</MenuItem>\r\n                    <MenuItem value=\"Rescheduled\">Rescheduled</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              {/* Basic Measurements */}\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h6\" className=\"mb-2\">Basic Measurements</Typography>\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Height (cm)\"\r\n                  type=\"number\"\r\n                  {...form.register('height')}\r\n                  error={!!form.formState.errors.height}\r\n                  helperText={form.formState.errors.height?.message}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Weight (kg)\"\r\n                  type=\"number\"\r\n                  {...form.register('weight')}\r\n                  error={!!form.formState.errors.weight}\r\n                  helperText={form.formState.errors.weight?.message}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Heart Rate (bpm)\"\r\n                  type=\"number\"\r\n                  {...form.register('heartRate')}\r\n                  error={!!form.formState.errors.heartRate}\r\n                  helperText={form.formState.errors.heartRate?.message}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Temperature (°C)\"\r\n                  type=\"number\"\r\n                  step=\"0.1\"\r\n                  {...form.register('temperature')}\r\n                  error={!!form.formState.errors.temperature}\r\n                  helperText={form.formState.errors.temperature?.message}\r\n                />\r\n              </Grid>\r\n\r\n              {/* Blood Pressure */}\r\n              <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Systolic BP\"\r\n                  type=\"number\"\r\n                  {...form.register('bloodPressureSystolic')}\r\n                  error={!!form.formState.errors.bloodPressureSystolic}\r\n                  helperText={form.formState.errors.bloodPressureSystolic?.message}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Diastolic BP\"\r\n                  type=\"number\"\r\n                  {...form.register('bloodPressureDiastolic')}\r\n                  error={!!form.formState.errors.bloodPressureDiastolic}\r\n                  helperText={form.formState.errors.bloodPressureDiastolic?.message}\r\n                />\r\n              </Grid>\r\n\r\n              {/* Vision and Hearing */}\r\n              <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Vision Left\"\r\n                  {...form.register('visionLeft')}\r\n                  placeholder=\"e.g., 10/10\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Vision Right\"\r\n                  {...form.register('visionRight')}\r\n                  placeholder=\"e.g., 10/10\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Hearing Left\"\r\n                  {...form.register('hearingLeft')}\r\n                  placeholder=\"e.g., Normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Hearing Right\"\r\n                  {...form.register('hearingRight')}\r\n                  placeholder=\"e.g., Normal\"\r\n                />\r\n              </Grid>\r\n\r\n              {/* Notes and Follow-up */}\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Health Notes\"\r\n                  multiline\r\n                  rows={3}\r\n                  {...form.register('healthNotes')}\r\n                  placeholder=\"Additional health observations...\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Recommendations\"\r\n                  multiline\r\n                  rows={2}\r\n                  {...form.register('recommendations')}\r\n                  placeholder=\"Medical recommendations...\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      {...form.register('requiresFollowUp')}\r\n                    />\r\n                  }\r\n                  label=\"Requires Follow-up\"\r\n                />\r\n              </Grid>\r\n              \r\n              {/* Conditional Follow-up fields */}\r\n              {form.watch('requiresFollowUp') && (\r\n                <>\r\n                  <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Follow-up Date\"\r\n                      type=\"date\"\r\n                      {...form.register('followUpDate')}\r\n                      error={!!form.formState.errors.followUpDate}\r\n                      helperText={form.formState.errors.followUpDate?.message}\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Follow-up Notes\"\r\n                      multiline\r\n                      rows={2}\r\n                      {...form.register('followUpNotes')}\r\n                      placeholder=\"Follow-up instructions or notes...\"\r\n                    />\r\n                  </Grid>\r\n                </>\r\n              )}\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => { setDialogOpen(false); setSelectedStudent(null); }}>Cancel</Button>\r\n            <Button type=\"submit\" variant=\"contained\">\r\n              {selectedCheckup ? 'Update' : 'Save'} Checkup\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n\r\n      {/* View Details Dialog */}\r\n      <Dialog open={viewDialogOpen} onClose={() => setViewDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>\r\n          Health Checkup Details\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {viewCheckup && (\r\n            <Grid container spacing={3}>\r\n              {/* Student Information */}\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h6\" color=\"primary\" sx={{ mb: 2 }}>\r\n                  Student Information\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">Student Name</Typography>\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n                  {viewCheckup.studentName || 'N/A'}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">Student ID</Typography>\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n                  {viewCheckup.studentId || 'N/A'}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              {/* Checkup Information */}\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h6\" color=\"primary\" sx={{ mb: 2, mt: 2 }}>\r\n                  Checkup Information\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">Checkup Date</Typography>\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n                  {viewCheckup.checkupDate ? new Date(viewCheckup.checkupDate).toLocaleDateString() : 'N/A'}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">Conducted By</Typography>\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n                  {formatConductedByName(viewCheckup.conductedBy)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">Health Event</Typography>\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n                  {viewCheckup.eventName || 'No Event'}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">Health Status</Typography>\r\n                <Chip \r\n                  label={viewCheckup.generalHealthStatus || 'N/A'} \r\n                  color={\r\n                    viewCheckup.generalHealthStatus === 'Normal' ? 'success' :\r\n                    viewCheckup.generalHealthStatus === 'Attention Required' ? 'warning' :\r\n                    viewCheckup.generalHealthStatus === 'Medical Follow-up' ? 'error' : 'default'\r\n                  }\r\n                  sx={{ fontWeight: 'bold' }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">Checkup Status</Typography>\r\n                <Chip \r\n                  label={viewCheckup.status || 'Completed'} \r\n                  color={\r\n                    viewCheckup.status === 'Completed' ? 'success' :\r\n                    viewCheckup.status === 'In Progress' ? 'info' :\r\n                    viewCheckup.status === 'Pending' ? 'warning' :\r\n                    viewCheckup.status === 'Cancelled' ? 'error' :\r\n                    viewCheckup.status === 'Rescheduled' ? 'secondary' : 'default'\r\n                  }\r\n                  sx={{ fontWeight: 'bold' }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* Measurements */}\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h6\" color=\"primary\" sx={{ mb: 2, mt: 2 }}>\r\n                  Measurements\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">Height</Typography>\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n                  {viewCheckup.height ? `${viewCheckup.height} cm` : 'N/A'}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">Weight</Typography>\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n                  {viewCheckup.weight ? `${viewCheckup.weight} kg` : 'N/A'}\r\n                </Typography>\r\n              </Grid>\r\n              {hasBMIData() && (\r\n                <Grid item xs={6} md={3}>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">BMI</Typography>\r\n                  <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n                    {viewCheckup.bmi ? viewCheckup.bmi.toFixed(1) : 'N/A'}\r\n                  </Typography>\r\n                </Grid>\r\n              )}\r\n              <Grid item xs={6} md={3}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">Heart Rate</Typography>\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n                  {viewCheckup.heartRate ? `${viewCheckup.heartRate} bpm` : 'N/A'}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">Temperature</Typography>\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n                  {viewCheckup.temperature ? `${viewCheckup.temperature}°C` : 'N/A'}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">Blood Pressure</Typography>\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n                  {viewCheckup.bloodPressureSystolic && viewCheckup.bloodPressureDiastolic ? \r\n                    `${viewCheckup.bloodPressureSystolic}/${viewCheckup.bloodPressureDiastolic}` : 'N/A'}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              {/* Vision and Hearing */}\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h6\" color=\"primary\" sx={{ mb: 2, mt: 2 }}>\r\n                  Vision & Hearing\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">Vision Left</Typography>\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n                  {viewCheckup.visionLeft || 'N/A'}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">Vision Right</Typography>\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n                  {viewCheckup.visionRight || 'N/A'}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">Hearing Left</Typography>\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n                  {viewCheckup.hearingLeft || 'N/A'}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">Hearing Right</Typography>\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n                  {viewCheckup.hearingRight || 'N/A'}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              {/* Notes and Follow-up */}\r\n              {(viewCheckup.healthNotes || viewCheckup.recommendations || viewCheckup.requiresFollowUp) && (\r\n                <>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"h6\" color=\"primary\" sx={{ mb: 2, mt: 2 }}>\r\n                      Notes & Follow-up\r\n                    </Typography>\r\n                  </Grid>\r\n                  {viewCheckup.healthNotes && (\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">Health Notes</Typography>\r\n                      <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n                        {viewCheckup.healthNotes}\r\n                      </Typography>\r\n                    </Grid>\r\n                  )}\r\n                  {viewCheckup.recommendations && (\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">Recommendations</Typography>\r\n                      <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n                        {viewCheckup.recommendations}\r\n                      </Typography>\r\n                    </Grid>\r\n                  )}\r\n                  {viewCheckup.requiresFollowUp && (\r\n                    <>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">Requires Follow-up</Typography>\r\n                        <Chip \r\n                          label={viewCheckup.requiresFollowUp ? 'Yes' : 'No'} \r\n                          color={viewCheckup.requiresFollowUp ? 'warning' : 'success'}\r\n                          sx={{ fontWeight: 'bold' }}\r\n                        />\r\n                      </Grid>\r\n                      {viewCheckup.followUpDate && (\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"body2\" color=\"textSecondary\">Follow-up Date</Typography>\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n                            {new Date(viewCheckup.followUpDate).toLocaleDateString()}\r\n                          </Typography>\r\n                        </Grid>\r\n                      )}\r\n                      {viewCheckup.followUpNotes && (\r\n                        <Grid item xs={12}>\r\n                          <Typography variant=\"body2\" color=\"textSecondary\">Follow-up Notes</Typography>\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n                            {viewCheckup.followUpNotes}\r\n                          </Typography>\r\n                        </Grid>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Grid>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setViewDialogOpen(false)}>Close</Button>\r\n          <Button \r\n            variant=\"contained\" \r\n            onClick={() => {\r\n              setViewDialogOpen(false);\r\n              handleEditCheckup(viewCheckup);\r\n            }}\r\n          >\r\n            Edit Checkup\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HealthCheckupManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}