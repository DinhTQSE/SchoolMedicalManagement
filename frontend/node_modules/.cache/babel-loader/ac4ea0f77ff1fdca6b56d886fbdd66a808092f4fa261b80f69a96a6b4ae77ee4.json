{"ast":null,"code":"import React,{useState,useEffect,useContext}from'react';import{Box,Typography,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TablePagination,Button,Chip,Dialog,DialogActions,DialogContent,DialogTitle,TextField,CircularProgress,Alert}from'@mui/material';import{format}from'date-fns';import CheckCircleIcon from'@mui/icons-material/CheckCircle';import CancelIcon from'@mui/icons-material/Cancel';import VisibilityIcon from'@mui/icons-material/Visibility';import axios from'axios';import authHeader from'../../services/auth-header';import{AuthContext}from'../../context/AuthContext';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const HealthDeclarationApproval=()=>{const{currentUser}=useContext(AuthContext);// Lấy thông tin người dùng hiện tại\nconst[declarations,setDeclarations]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[page,setPage]=useState(0);const[rowsPerPage,setRowsPerPage]=useState(10);const[selectedDeclaration,setSelectedDeclaration]=useState(null);const[openDialog,setOpenDialog]=useState(false);const[openReviewDialog,setOpenReviewDialog]=useState(false);const[reviewStatus,setReviewStatus]=useState('');const[reviewNotes,setReviewNotes]=useState('');const[reviewLoading,setReviewLoading]=useState(false);const[reviewError,setReviewError]=useState(null);const[reviewSuccess,setReviewSuccess]=useState(null);useEffect(()=>{var _currentUser$roles,_currentUser$roles2,_currentUser$roles3;// Check if user has the required role before fetching declarations\nif(currentUser&&((_currentUser$roles=currentUser.roles)!==null&&_currentUser$roles!==void 0&&_currentUser$roles.includes('ROLE_SCHOOLNURSE')||(_currentUser$roles2=currentUser.roles)!==null&&_currentUser$roles2!==void 0&&_currentUser$roles2.includes('ROLE_NURSE')||(_currentUser$roles3=currentUser.roles)!==null&&_currentUser$roles3!==void 0&&_currentUser$roles3.includes('ROLE_ADMIN'))){fetchPendingDeclarations();}else if(currentUser){setError('You do not have the required permissions to view this page. Required roles: ROLE_SCHOOLNURSE, ROLE_NURSE, or ROLE_ADMIN');setLoading(false);}},[currentUser]);const fetchPendingDeclarations=async()=>{setLoading(true);setError(null);try{// Get auth headers and check if token exists\nconst headers=authHeader();if(!headers.Authorization){setError('Authentication token is missing. Please try logging out and logging in again.');setLoading(false);return;}// Try to refresh the token first if needed\ntry{await axios.get('/api/auth/me',{headers});}catch(validationErr){var _validationErr$respon;if(((_validationErr$respon=validationErr.response)===null||_validationErr$respon===void 0?void 0:_validationErr$respon.status)===401){setError('Your session has expired. Please log in again.');setLoading(false);return;}}// Now proceed with the main request\nconst response=await axios.get(`/api/health-declaration/pending`,{headers});if(Array.isArray(response.data)){setDeclarations(response.data);}else{setDeclarations([]);}// Thêm thông báo kiểm tra số lượng dữ liệu\nif(response.data&&response.data.length===0){setError('No pending health declarations found. All may have been processed or no declarations have been submitted.');}}catch(err){var _err$response,_err$response2;if(((_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.status)===401){setError('Your session has expired or is invalid. Please log in again.');// Optional: Redirect to login page after a delay\nsetTimeout(()=>{window.location.href='/login';},3000);}else if(((_err$response2=err.response)===null||_err$response2===void 0?void 0:_err$response2.status)===403){setError('You do not have permission to view pending health declarations.');}else{var _err$response3,_err$response3$data;setError('Unable to load health declaration list. Error: '+(((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.message)||err.message));}}finally{setLoading(false);}};const handleChangePage=(event,newPage)=>{setPage(newPage);};const handleChangeRowsPerPage=event=>{setRowsPerPage(parseInt(event.target.value,10));setPage(0);};const handleViewDeclaration=async id=>{try{setLoading(true);const response=await axios.get(`/api/health-declaration/${id}`,{headers:authHeader()});setSelectedDeclaration(response.data);setOpenDialog(true);}catch(err){setError('Could not load declaration details. Please try again.');}finally{setLoading(false);}};const handleOpenReviewDialog=(declaration,status)=>{setSelectedDeclaration(declaration);setReviewStatus(status);setReviewNotes('');setReviewError(null);setReviewSuccess(null);setOpenReviewDialog(true);};const handleCloseReviewDialog=()=>{setOpenReviewDialog(false);};const handleSubmitReview=async()=>{if(!selectedDeclaration||!reviewStatus)return;setReviewLoading(true);setReviewError(null);setReviewSuccess(null);try{await axios.put(`/api/health-declaration/${selectedDeclaration.declarationId}/review`,{status:reviewStatus,reviewNotes},{headers:authHeader()});// Hiển thị thông báo thành công\nsetReviewSuccess(`Health declaration has been ${reviewStatus.toLowerCase()} successfully!`);// Đóng dialog sau 1 giây\nsetTimeout(()=>{setOpenReviewDialog(false);// Tải lại danh sách khai báo\nfetchPendingDeclarations();},1000);}catch(err){setReviewError('Could not submit review. Please try again.');}finally{setReviewLoading(false);}};const getStatusChip=status=>{switch(status){case'PENDING':return/*#__PURE__*/_jsx(Chip,{label:\"Pending\",color:\"warning\",size:\"small\"});case'APPROVED':return/*#__PURE__*/_jsx(Chip,{label:\"Approved\",color:\"success\",size:\"small\"});case'REJECTED':return/*#__PURE__*/_jsx(Chip,{label:\"Rejected\",color:\"error\",size:\"small\"});case'DRAFT':return/*#__PURE__*/_jsx(Chip,{label:\"Draft\",color:\"default\",size:\"small\"});default:return/*#__PURE__*/_jsx(Chip,{label:status,size:\"small\"});}};return/*#__PURE__*/_jsxs(Box,{sx:{p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Health Declarations Requiring Review\"}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:2},children:error}),loading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',my:4},children:/*#__PURE__*/_jsx(CircularProgress,{})}):declarations.length===0?/*#__PURE__*/_jsx(Alert,{severity:\"info\",children:\"No pending health declarations found.\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Student Code\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Student Name\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Declaration Date\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Status\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:declarations.slice(page*rowsPerPage,page*rowsPerPage+rowsPerPage).map(declaration=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:declaration.studentCode}),/*#__PURE__*/_jsx(TableCell,{children:declaration.studentName||'N/A'}),/*#__PURE__*/_jsx(TableCell,{children:declaration.declarationDate?format(new Date(declaration.declarationDate),'dd/MM/yyyy'):'N/A'}),/*#__PURE__*/_jsx(TableCell,{children:getStatusChip(declaration.status)}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'center',gap:1},children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",size:\"small\",startIcon:/*#__PURE__*/_jsx(VisibilityIcon,{}),onClick:()=>handleViewDeclaration(declaration.declarationId),children:\"View\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"success\",size:\"small\",startIcon:/*#__PURE__*/_jsx(CheckCircleIcon,{}),onClick:()=>handleOpenReviewDialog(declaration,'APPROVED'),children:\"Approve\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"error\",size:\"small\",startIcon:/*#__PURE__*/_jsx(CancelIcon,{}),onClick:()=>handleOpenReviewDialog(declaration,'REJECTED'),children:\"Reject\"})]})})]},declaration.declarationId))})]})}),/*#__PURE__*/_jsx(TablePagination,{rowsPerPageOptions:[5,10,25],component:\"div\",count:declarations.length,rowsPerPage:rowsPerPage,page:page,onPageChange:handleChangePage,onRowsPerPageChange:handleChangeRowsPerPage})]}),/*#__PURE__*/_jsxs(Dialog,{open:openDialog,onClose:()=>setOpenDialog(false),maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Health Declaration Details\"}),/*#__PURE__*/_jsx(DialogContent,{dividers:true,children:selectedDeclaration&&/*#__PURE__*/_jsxs(Box,{sx:{p:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Student Information\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexWrap:'wrap',mb:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{mr:4,mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"textSecondary\",children:\"Student Code\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:selectedDeclaration.studentCode})]}),/*#__PURE__*/_jsxs(Box,{sx:{mr:4,mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"textSecondary\",children:\"Declaration Date\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:selectedDeclaration.declarationDate?format(new Date(selectedDeclaration.declarationDate),'dd/MM/yyyy'):'N/A'})]}),/*#__PURE__*/_jsxs(Box,{sx:{mr:4,mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"textSecondary\",children:\"Status\"}),/*#__PURE__*/_jsx(Box,{children:getStatusChip(selectedDeclaration.status)})]})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Medical Information\"}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Allergies\"}),selectedDeclaration.allergies&&selectedDeclaration.allergies.length>0?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexWrap:'wrap',gap:0.5},children:selectedDeclaration.allergies.map((allergy,index)=>/*#__PURE__*/_jsx(Chip,{label:allergy,size:\"small\",color:\"error\"},index))}):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"No allergies declared\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Chronic Illnesses\"}),selectedDeclaration.chronicIllnesses&&selectedDeclaration.chronicIllnesses.length>0?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexWrap:'wrap',gap:0.5},children:selectedDeclaration.chronicIllnesses.map((illness,index)=>/*#__PURE__*/_jsx(Chip,{label:illness,size:\"small\",color:\"warning\"},index))}):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"No chronic illnesses declared\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Relevant Medical History\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:selectedDeclaration.medicalHistory||'No medical history provided'})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Emergency Contacts\"}),selectedDeclaration.emergencyContacts&&selectedDeclaration.emergencyContacts.length>0?/*#__PURE__*/_jsx(TableContainer,{component:Paper,variant:\"outlined\",children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Name\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Relationship\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Phone\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:selectedDeclaration.emergencyContacts.map((contact,index)=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:contact.name}),/*#__PURE__*/_jsx(TableCell,{children:contact.relationship}),/*#__PURE__*/_jsx(TableCell,{children:contact.phone})]},index))})]})}):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"No emergency contacts provided\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Vision & Hearing Status\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:4,flexWrap:'wrap'},children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"textSecondary\",children:\"Vision Status\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:selectedDeclaration.visionStatus||'Not specified'})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"textSecondary\",children:\"Hearing Status\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:selectedDeclaration.hearingStatus||'Not specified'})]})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Vaccinations\"}),selectedDeclaration.vaccinations&&selectedDeclaration.vaccinations.length>0?/*#__PURE__*/_jsx(TableContainer,{component:Paper,variant:\"outlined\",children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Vaccine\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Date\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Dose Number\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Provider\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:selectedDeclaration.vaccinations.map((vaccination,index)=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:vaccination.vaccineName}),/*#__PURE__*/_jsx(TableCell,{children:vaccination.vaccinationDate?format(new Date(vaccination.vaccinationDate),'dd/MM/yyyy'):'N/A'}),/*#__PURE__*/_jsx(TableCell,{children:vaccination.doseNumber||'N/A'}),/*#__PURE__*/_jsx(TableCell,{children:vaccination.providerName||'N/A'})]},index))})]})}):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"No vaccinations declared\"})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,sx:{mt:3},children:\"Other Health Information\"}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Special Needs or Accommodations\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:selectedDeclaration.specialNeeds||'None specified'})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Physical Limitations or Activity Restrictions\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:selectedDeclaration.physicalLimitations||'None specified'})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Mental or Emotional Health Concerns\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:selectedDeclaration.mentalHealthConcerns||'None specified'})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Dietary Restrictions or Preferences\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:selectedDeclaration.dietaryRestrictions||'None specified'})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Current Medications\"}),selectedDeclaration.medications&&selectedDeclaration.medications.length>0?/*#__PURE__*/_jsx(TableContainer,{component:Paper,variant:\"outlined\",children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Medication\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Dosage\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Frequency\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Reason\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:selectedDeclaration.medications.map((med,index)=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:med.medicationName||med.name}),/*#__PURE__*/_jsx(TableCell,{children:med.dosage||'N/A'}),/*#__PURE__*/_jsx(TableCell,{children:med.frequency||'N/A'}),/*#__PURE__*/_jsx(TableCell,{children:med.reason||'N/A'})]},index))})]})}):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"No current medications\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Additional Notes\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:selectedDeclaration.additionalInfo||selectedDeclaration.notes||'No additional notes provided'})]})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setOpenDialog(false),children:\"Close\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"success\",onClick:()=>{setOpenDialog(false);handleOpenReviewDialog(selectedDeclaration,'APPROVED');},children:\"Approve\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"error\",onClick:()=>{setOpenDialog(false);handleOpenReviewDialog(selectedDeclaration,'REJECTED');},children:\"Reject\"})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:openReviewDialog,onClose:handleCloseReviewDialog,maxWidth:\"sm\",fullWidth:true,children:[/*#__PURE__*/_jsxs(DialogTitle,{children:[reviewStatus==='APPROVED'?'Approve':'Reject',\" Health Declaration\"]}),/*#__PURE__*/_jsxs(DialogContent,{children:[reviewError&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:2},children:reviewError}),reviewSuccess&&/*#__PURE__*/_jsx(Alert,{severity:\"success\",sx:{mb:2},children:reviewSuccess}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{mb:2},children:[\"You are about to \",reviewStatus==='APPROVED'?'approve':'reject',\" the health declaration for student\",' ',/*#__PURE__*/_jsx(\"strong\",{children:selectedDeclaration===null||selectedDeclaration===void 0?void 0:selectedDeclaration.studentCode})]}),/*#__PURE__*/_jsx(TextField,{label:\"Review Notes\",multiline:true,rows:4,fullWidth:true,value:reviewNotes,onChange:e=>setReviewNotes(e.target.value),placeholder:reviewStatus==='APPROVED'?'Add any notes about this approval (optional)':'Please provide a reason for rejection',variant:\"outlined\",sx:{mb:2}})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseReviewDialog,disabled:reviewLoading,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:reviewStatus==='APPROVED'?'success':'error',onClick:handleSubmitReview,disabled:reviewLoading||!!reviewSuccess,startIcon:reviewLoading?/*#__PURE__*/_jsx(CircularProgress,{size:16}):null,children:reviewStatus==='APPROVED'?'Approve':'Reject'})]})]})]});};export default HealthDeclarationApproval;","map":{"version":3,"names":["React","useState","useEffect","useContext","Box","Typography","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TablePagination","Button","Chip","Dialog","DialogActions","DialogContent","DialogTitle","TextField","CircularProgress","Alert","format","CheckCircleIcon","CancelIcon","VisibilityIcon","axios","authHeader","AuthContext","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","HealthDeclarationApproval","currentUser","declarations","setDeclarations","loading","setLoading","error","setError","page","setPage","rowsPerPage","setRowsPerPage","selectedDeclaration","setSelectedDeclaration","openDialog","setOpenDialog","openReviewDialog","setOpenReviewDialog","reviewStatus","setReviewStatus","reviewNotes","setReviewNotes","reviewLoading","setReviewLoading","reviewError","setReviewError","reviewSuccess","setReviewSuccess","_currentUser$roles","_currentUser$roles2","_currentUser$roles3","roles","includes","fetchPendingDeclarations","headers","Authorization","get","validationErr","_validationErr$respon","response","status","Array","isArray","data","length","err","_err$response","_err$response2","setTimeout","window","location","href","_err$response3","_err$response3$data","message","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleViewDeclaration","id","handleOpenReviewDialog","declaration","handleCloseReviewDialog","handleSubmitReview","put","declarationId","toLowerCase","getStatusChip","label","color","size","sx","p","children","variant","gutterBottom","severity","mb","display","justifyContent","my","component","align","slice","map","studentCode","studentName","declarationDate","Date","gap","startIcon","onClick","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","open","onClose","maxWidth","fullWidth","dividers","flexWrap","mr","allergies","allergy","index","chronicIllnesses","illness","medicalHistory","emergencyContacts","contact","name","relationship","phone","visionStatus","hearingStatus","vaccinations","vaccination","vaccineName","vaccinationDate","doseNumber","providerName","mt","specialNeeds","physicalLimitations","mentalHealthConcerns","dietaryRestrictions","medications","med","medicationName","dosage","frequency","reason","additionalInfo","notes","multiline","rows","onChange","e","placeholder","disabled"],"sources":["C:/Users/trand/OneDrive/Documents/GitHub/SchoolMedicalManagement/frontend/src/pages/nurse/HealthDeclarationApproval.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Box, \r\n  Typography, \r\n  Paper, \r\n  Table, \r\n  TableBody, \r\n  TableCell, \r\n  TableContainer, \r\n  TableHead, \r\n  TableRow,\r\n  TablePagination,\r\n  Button,\r\n  Chip,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  CircularProgress,\r\n  Alert\r\n} from '@mui/material';\r\nimport { format } from 'date-fns';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport axios from 'axios';\r\nimport authHeader from '../../services/auth-header';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst HealthDeclarationApproval = () => {\r\n  const { currentUser } = useContext(AuthContext); // Lấy thông tin người dùng hiện tại\r\n  const [declarations, setDeclarations] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  \r\n  const [selectedDeclaration, setSelectedDeclaration] = useState(null);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [openReviewDialog, setOpenReviewDialog] = useState(false);\r\n  const [reviewStatus, setReviewStatus] = useState('');\r\n  const [reviewNotes, setReviewNotes] = useState('');\r\n  const [reviewLoading, setReviewLoading] = useState(false);\r\n  const [reviewError, setReviewError] = useState(null);\r\n  const [reviewSuccess, setReviewSuccess] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Check if user has the required role before fetching declarations\r\n    if (currentUser && \r\n        (currentUser.roles?.includes('ROLE_SCHOOLNURSE') || \r\n         currentUser.roles?.includes('ROLE_NURSE') || \r\n         currentUser.roles?.includes('ROLE_ADMIN'))) {\r\n      fetchPendingDeclarations();\r\n    } else if (currentUser) {\r\n      setError('You do not have the required permissions to view this page. Required roles: ROLE_SCHOOLNURSE, ROLE_NURSE, or ROLE_ADMIN');\r\n      setLoading(false);\r\n    }\r\n  }, [currentUser]);\r\n    const fetchPendingDeclarations = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      // Get auth headers and check if token exists\r\n      const headers = authHeader();\r\n      \r\n      \r\n      if (!headers.Authorization) {\r\n        \r\n        setError('Authentication token is missing. Please try logging out and logging in again.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      \r\n      \r\n      // Try to refresh the token first if needed\r\n      try {\r\n        await axios.get('/api/auth/me', { headers });\r\n        \r\n      } catch (validationErr) {\r\n        if (validationErr.response?.status === 401) {\r\n          \r\n          setError('Your session has expired. Please log in again.');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n      }\r\n      \r\n      // Now proceed with the main request\r\n      const response = await axios.get(\r\n        `/api/health-declaration/pending`,\r\n        { headers }\r\n      );\r\n      \r\n      if (Array.isArray(response.data)) {\r\n        setDeclarations(response.data);\r\n      } else {\r\n        setDeclarations([]);\r\n      }\r\n      \r\n      // Thêm thông báo kiểm tra số lượng dữ liệu\r\n      if (response.data && response.data.length === 0) {\r\n        setError('No pending health declarations found. All may have been processed or no declarations have been submitted.');\r\n      }\r\n    } catch (err) {\r\n      \r\n      \r\n      \r\n      \r\n      \r\n      if (err.response?.status === 401) {\r\n        setError('Your session has expired or is invalid. Please log in again.');\r\n        \r\n        // Optional: Redirect to login page after a delay\r\n        setTimeout(() => {\r\n          window.location.href = '/login';\r\n        }, 3000);\r\n      } else if (err.response?.status === 403) {\r\n        setError('You do not have permission to view pending health declarations.');\r\n      } else {\r\n        setError('Unable to load health declaration list. Error: ' + (err.response?.data?.message || err.message));\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  \r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n    const handleViewDeclaration = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(\r\n        `/api/health-declaration/${id}`,\r\n        { headers: authHeader() }\r\n      );\r\n      setSelectedDeclaration(response.data);\r\n      setOpenDialog(true);\r\n    } catch (err) {\r\n      \r\n      setError('Could not load declaration details. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleOpenReviewDialog = (declaration, status) => {\r\n    setSelectedDeclaration(declaration);\r\n    setReviewStatus(status);\r\n    setReviewNotes('');\r\n    setReviewError(null);\r\n    setReviewSuccess(null);\r\n    setOpenReviewDialog(true);\r\n  };\r\n  \r\n  const handleCloseReviewDialog = () => {\r\n    setOpenReviewDialog(false);\r\n  };\r\n  \r\n  const handleSubmitReview = async () => {\r\n    if (!selectedDeclaration || !reviewStatus) return;\r\n    \r\n    setReviewLoading(true);\r\n    setReviewError(null);\r\n    setReviewSuccess(null);\r\n      try {\r\n      await axios.put(\r\n        `/api/health-declaration/${selectedDeclaration.declarationId}/review`,\r\n        { status: reviewStatus, reviewNotes },\r\n        { headers: authHeader() }\r\n      );\r\n      \r\n      // Hiển thị thông báo thành công\r\n      setReviewSuccess(`Health declaration has been ${reviewStatus.toLowerCase()} successfully!`);\r\n      \r\n      // Đóng dialog sau 1 giây\r\n      setTimeout(() => {\r\n        setOpenReviewDialog(false);\r\n        // Tải lại danh sách khai báo\r\n        fetchPendingDeclarations();\r\n      }, 1000);\r\n      \r\n    } catch (err) {\r\n      \r\n      setReviewError('Could not submit review. Please try again.');\r\n    } finally {\r\n      setReviewLoading(false);\r\n    }\r\n  };\r\n  \r\n  const getStatusChip = (status) => {\r\n    switch(status) {\r\n      case 'PENDING':\r\n        return <Chip label=\"Pending\" color=\"warning\" size=\"small\" />;\r\n      case 'APPROVED':\r\n        return <Chip label=\"Approved\" color=\"success\" size=\"small\" />;\r\n      case 'REJECTED':\r\n        return <Chip label=\"Rejected\" color=\"error\" size=\"small\" />;\r\n      case 'DRAFT':\r\n        return <Chip label=\"Draft\" color=\"default\" size=\"small\" />;\r\n      default:\r\n        return <Chip label={status} size=\"small\" />;\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Health Declarations Requiring Review\r\n      </Typography>\r\n      \r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>\r\n      )}\r\n      \r\n      {loading ? (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      ) : declarations.length === 0 ? (\r\n        <Alert severity=\"info\">No pending health declarations found.</Alert>\r\n      ) : (\r\n        <>\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Student Code</TableCell>\r\n                  <TableCell>Student Name</TableCell>\r\n                  <TableCell>Declaration Date</TableCell>\r\n                  <TableCell>Status</TableCell>\r\n                  <TableCell align=\"center\">Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {declarations\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((declaration) => (\r\n                    <TableRow key={declaration.declarationId}>\r\n                      <TableCell>{declaration.studentCode}</TableCell>\r\n                      <TableCell>{declaration.studentName || 'N/A'}</TableCell>\r\n                      <TableCell>\r\n                        {declaration.declarationDate ? \r\n                          format(new Date(declaration.declarationDate), 'dd/MM/yyyy') : \r\n                          'N/A'}\r\n                      </TableCell>\r\n                      <TableCell>{getStatusChip(declaration.status)}</TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Box sx={{ display: 'flex', justifyContent: 'center', gap: 1 }}>\r\n                          <Button \r\n                            variant=\"outlined\" \r\n                            size=\"small\" \r\n                            startIcon={<VisibilityIcon />}\r\n                            onClick={() => handleViewDeclaration(declaration.declarationId)}\r\n                          >\r\n                            View\r\n                          </Button>\r\n                          <Button \r\n                            variant=\"contained\" \r\n                            color=\"success\" \r\n                            size=\"small\"\r\n                            startIcon={<CheckCircleIcon />}\r\n                            onClick={() => handleOpenReviewDialog(declaration, 'APPROVED')}\r\n                          >\r\n                            Approve\r\n                          </Button>\r\n                          <Button \r\n                            variant=\"contained\" \r\n                            color=\"error\" \r\n                            size=\"small\"\r\n                            startIcon={<CancelIcon />}\r\n                            onClick={() => handleOpenReviewDialog(declaration, 'REJECTED')}\r\n                          >\r\n                            Reject\r\n                          </Button>\r\n                        </Box>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          \r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={declarations.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </>\r\n      )}\r\n      \r\n      {/* Dialog to display health declaration details */}\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={() => setOpenDialog(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Health Declaration Details</DialogTitle>\r\n        <DialogContent dividers>\r\n          {selectedDeclaration && (\r\n            <Box sx={{ p: 1 }}>\r\n              <Typography variant=\"h6\" gutterBottom>Student Information</Typography>\r\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', mb: 2 }}>\r\n                <Box sx={{ mr: 4, mb: 1 }}>\r\n                  <Typography variant=\"caption\" color=\"textSecondary\">Student Code</Typography>\r\n                  <Typography variant=\"body1\">{selectedDeclaration.studentCode}</Typography>\r\n                </Box>\r\n                <Box sx={{ mr: 4, mb: 1 }}>\r\n                  <Typography variant=\"caption\" color=\"textSecondary\">Declaration Date</Typography>\r\n                  <Typography variant=\"body1\">\r\n                    {selectedDeclaration.declarationDate ? \r\n                      format(new Date(selectedDeclaration.declarationDate), 'dd/MM/yyyy') : \r\n                      'N/A'}\r\n                  </Typography>\r\n                </Box>\r\n                <Box sx={{ mr: 4, mb: 1 }}>\r\n                  <Typography variant=\"caption\" color=\"textSecondary\">Status</Typography>\r\n                  <Box>{getStatusChip(selectedDeclaration.status)}</Box>\r\n                </Box>\r\n              </Box>\r\n              \r\n              <Typography variant=\"h6\" gutterBottom>Medical Information</Typography>\r\n              \r\n              {/* Allergies */}\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"subtitle1\">Allergies</Typography>\r\n                {selectedDeclaration.allergies && selectedDeclaration.allergies.length > 0 ? (\r\n                  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                    {selectedDeclaration.allergies.map((allergy, index) => (\r\n                      <Chip key={index} label={allergy} size=\"small\" color=\"error\" />\r\n                    ))}\r\n                  </Box>\r\n                ) : (\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">No allergies declared</Typography>\r\n                )}\r\n              </Box>\r\n              \r\n              {/* Chronic Illnesses */}\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"subtitle1\">Chronic Illnesses</Typography>\r\n                {selectedDeclaration.chronicIllnesses && selectedDeclaration.chronicIllnesses.length > 0 ? (\r\n                  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                    {selectedDeclaration.chronicIllnesses.map((illness, index) => (\r\n                      <Chip key={index} label={illness} size=\"small\" color=\"warning\" />\r\n                    ))}\r\n                  </Box>\r\n                ) : (\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">No chronic illnesses declared</Typography>\r\n                )}\r\n              </Box>\r\n\r\n              {/* Medical History */}\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"subtitle1\">Relevant Medical History</Typography>\r\n                <Typography variant=\"body2\">\r\n                  {selectedDeclaration.medicalHistory || 'No medical history provided'}\r\n                </Typography>\r\n              </Box>\r\n\r\n              {/* Emergency Contacts */}\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"subtitle1\">Emergency Contacts</Typography>\r\n                {selectedDeclaration.emergencyContacts && selectedDeclaration.emergencyContacts.length > 0 ? (\r\n                  <TableContainer component={Paper} variant=\"outlined\">\r\n                    <Table size=\"small\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Name</TableCell>\r\n                          <TableCell>Relationship</TableCell>\r\n                          <TableCell>Phone</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {selectedDeclaration.emergencyContacts.map((contact, index) => (\r\n                          <TableRow key={index}>\r\n                            <TableCell>{contact.name}</TableCell>\r\n                            <TableCell>{contact.relationship}</TableCell>\r\n                            <TableCell>{contact.phone}</TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                ) : (\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">No emergency contacts provided</Typography>\r\n                )}\r\n              </Box>\r\n\r\n              {/* Vision and Hearing Status */}\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"subtitle1\">Vision & Hearing Status</Typography>\r\n                <Box sx={{ display: 'flex', gap: 4, flexWrap: 'wrap' }}>\r\n                  <Box>\r\n                    <Typography variant=\"caption\" color=\"textSecondary\">Vision Status</Typography>\r\n                    <Typography variant=\"body2\">{selectedDeclaration.visionStatus || 'Not specified'}</Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography variant=\"caption\" color=\"textSecondary\">Hearing Status</Typography>\r\n                    <Typography variant=\"body2\">{selectedDeclaration.hearingStatus || 'Not specified'}</Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n\r\n              {/* Vaccinations */}\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"subtitle1\">Vaccinations</Typography>\r\n                {selectedDeclaration.vaccinations && selectedDeclaration.vaccinations.length > 0 ? (\r\n                  <TableContainer component={Paper} variant=\"outlined\">\r\n                    <Table size=\"small\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Vaccine</TableCell>\r\n                          <TableCell>Date</TableCell>\r\n                          <TableCell>Dose Number</TableCell>\r\n                          <TableCell>Provider</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {selectedDeclaration.vaccinations.map((vaccination, index) => (\r\n                          <TableRow key={index}>\r\n                            <TableCell>{vaccination.vaccineName}</TableCell>\r\n                            <TableCell>{vaccination.vaccinationDate ? format(new Date(vaccination.vaccinationDate), 'dd/MM/yyyy') : 'N/A'}</TableCell>\r\n                            <TableCell>{vaccination.doseNumber || 'N/A'}</TableCell>\r\n                            <TableCell>{vaccination.providerName || 'N/A'}</TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                ) : (\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">No vaccinations declared</Typography>\r\n                )}\r\n              </Box>\r\n\r\n              {/* Other Health Information */}\r\n              <Typography variant=\"h6\" gutterBottom sx={{ mt: 3 }}>Other Health Information</Typography>\r\n              \r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"subtitle1\">Special Needs or Accommodations</Typography>\r\n                <Typography variant=\"body2\">\r\n                  {selectedDeclaration.specialNeeds || 'None specified'}\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"subtitle1\">Physical Limitations or Activity Restrictions</Typography>\r\n                <Typography variant=\"body2\">\r\n                  {selectedDeclaration.physicalLimitations || 'None specified'}\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"subtitle1\">Mental or Emotional Health Concerns</Typography>\r\n                <Typography variant=\"body2\">\r\n                  {selectedDeclaration.mentalHealthConcerns || 'None specified'}\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"subtitle1\">Dietary Restrictions or Preferences</Typography>\r\n                <Typography variant=\"body2\">\r\n                  {selectedDeclaration.dietaryRestrictions || 'None specified'}\r\n                </Typography>\r\n              </Box>\r\n\r\n              {/* Current Medications */}\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"subtitle1\">Current Medications</Typography>\r\n                {selectedDeclaration.medications && selectedDeclaration.medications.length > 0 ? (\r\n                  <TableContainer component={Paper} variant=\"outlined\">\r\n                    <Table size=\"small\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Medication</TableCell>\r\n                          <TableCell>Dosage</TableCell>\r\n                          <TableCell>Frequency</TableCell>\r\n                          <TableCell>Reason</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {selectedDeclaration.medications.map((med, index) => (\r\n                          <TableRow key={index}>\r\n                            <TableCell>{med.medicationName || med.name}</TableCell>\r\n                            <TableCell>{med.dosage || 'N/A'}</TableCell>\r\n                            <TableCell>{med.frequency || 'N/A'}</TableCell>\r\n                            <TableCell>{med.reason || 'N/A'}</TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                ) : (\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">No current medications</Typography>\r\n                )}\r\n              </Box>\r\n\r\n              {/* Notes */}\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"subtitle1\">Additional Notes</Typography>\r\n                <Typography variant=\"body2\">\r\n                  {selectedDeclaration.additionalInfo || selectedDeclaration.notes || 'No additional notes provided'}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenDialog(false)}>Close</Button>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"success\"\r\n            onClick={() => {\r\n              setOpenDialog(false);\r\n              handleOpenReviewDialog(selectedDeclaration, 'APPROVED');\r\n            }}\r\n          >\r\n            Approve\r\n          </Button>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"error\"\r\n            onClick={() => {\r\n              setOpenDialog(false);\r\n              handleOpenReviewDialog(selectedDeclaration, 'REJECTED');\r\n            }}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {/* Dialog phê duyệt/từ chối khai báo */}\r\n      <Dialog\r\n        open={openReviewDialog}\r\n        onClose={handleCloseReviewDialog}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>\r\n          {reviewStatus === 'APPROVED' ? 'Approve' : 'Reject'} Health Declaration\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {reviewError && (\r\n            <Alert severity=\"error\" sx={{ mb: 2 }}>{reviewError}</Alert>\r\n          )}\r\n          \r\n          {reviewSuccess && (\r\n            <Alert severity=\"success\" sx={{ mb: 2 }}>{reviewSuccess}</Alert>\r\n          )}\r\n          \r\n          <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n            You are about to {reviewStatus === 'APPROVED' ? 'approve' : 'reject'} the health declaration for student{' '}\r\n            <strong>{selectedDeclaration?.studentCode}</strong>\r\n          </Typography>\r\n          \r\n          <TextField\r\n            label=\"Review Notes\"\r\n            multiline\r\n            rows={4}\r\n            fullWidth\r\n            value={reviewNotes}\r\n            onChange={(e) => setReviewNotes(e.target.value)}\r\n            placeholder={reviewStatus === 'APPROVED' ? \r\n              'Add any notes about this approval (optional)' : \r\n              'Please provide a reason for rejection'}\r\n            variant=\"outlined\"\r\n            sx={{ mb: 2 }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseReviewDialog} disabled={reviewLoading}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color={reviewStatus === 'APPROVED' ? 'success' : 'error'}\r\n            onClick={handleSubmitReview}\r\n            disabled={reviewLoading || !!reviewSuccess}\r\n            startIcon={reviewLoading ? <CircularProgress size={16} /> : null}\r\n          >\r\n            {reviewStatus === 'APPROVED' ? 'Approve' : 'Reject'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HealthDeclarationApproval;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}