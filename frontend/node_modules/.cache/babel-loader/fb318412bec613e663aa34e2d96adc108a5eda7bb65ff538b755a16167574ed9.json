{"ast":null,"code":"import React,{useState}from'react';import{Paper,Typography,Button,Grid,Chip,Box,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle}from'@mui/material';import{Link as RouterLink}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ParentHealthCheckupEventItem=_ref=>{let{event,childId,studentName,consentStatus,consentDate,resultAvailable,onGiveConsent,onViewDetails}=_ref;const[openConsentModal,setOpenConsentModal]=useState(false);const[consentNotes,setConsentNotes]=useState('');// If you want to add notes\nif(!event){return null;}const handleOpenConsentModal=()=>{setOpenConsentModal(true);};const handleCloseConsentModal=()=>{setOpenConsentModal(false);setConsentNotes('');// Reset notes on close\n};const handleConfirmConsent=async consentDecision=>{// onGiveConsent will now be the function that calls the API\n// It should accept eventId, childId, consentDecision (true/false), and optionally notes\nawait onGiveConsent(event.eventId,childId,consentDecision,consentNotes);handleCloseConsentModal();};const formatDate=dateString=>{if(!dateString)return'N/A';return new Date(dateString).toLocaleDateString();};const getConsentChip=()=>{let chipLabel=\"Consent Pending\";let chipColor=\"warning\";switch(consentStatus){case true:// Assuming consentStatus is now boolean true/false or null/undefined\nchipLabel=`Consent Given on ${formatDate(consentDate)}`;chipColor=\"success\";break;case false:chipLabel=`Consent Denied on ${formatDate(consentDate)}`;chipColor=\"error\";break;default:// Keep pending\nbreak;}return/*#__PURE__*/_jsx(Chip,{label:chipLabel,color:chipColor,size:\"small\"});};return/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2,mb:2},children:[/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:8,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[event.eventName,\" \",studentName?`for ${studentName}`:'']}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",sx:{mb:1},children:event.description}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",display:\"block\",gutterBottom:true,children:[\"Date: \",formatDate(event.startDate),\" - \",formatDate(event.endDate)]}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",display:\"block\",sx:{mb:1},children:[\"Location: \",event.location||'N/A']}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Status for your child:\"}),getConsentChip(),resultAvailable&&/*#__PURE__*/_jsx(Chip,{label:\"Results Available\",color:\"info\",size:\"small\"})]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:4,container:true,direction:{xs:'row',md:'column'},spacing:1,justifyContent:\"center\",alignItems:{md:'flex-end'},children:[onViewDetails&&/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{variant:\"outlined\",size:\"small\",onClick:()=>onViewDetails(event.eventId,childId),fullWidth:true,children:\"View Details / Results\"})}),(consentStatus===null||consentStatus===undefined)&&onGiveConsent&&/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"small\",onClick:handleOpenConsentModal,fullWidth:true,children:\"Provide Consent\"})})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:openConsentModal,onClose:handleCloseConsentModal,children:[/*#__PURE__*/_jsxs(DialogTitle,{children:[\"Consent for \",event.eventName]}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(DialogContentText,{sx:{mb:2},children:[\"Please review the details for the health checkup event: \",/*#__PURE__*/_jsx(\"strong\",{children:event.eventName}),\" for your child \",studentName?/*#__PURE__*/_jsx(\"strong\",{children:studentName}):'',\". This event is scheduled from \",formatDate(event.startDate),\" to \",formatDate(event.endDate),\" at \",event.location||'N/A',\".\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"Do you consent to your child participating in this health checkup event?\"]})}),/*#__PURE__*/_jsxs(DialogActions,{sx:{p:'0 24px 20px'},children:[/*#__PURE__*/_jsx(Button,{onClick:()=>handleConfirmConsent(false),color:\"error\",children:\"Deny Consent\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>handleConfirmConsent(true),variant:\"contained\",color:\"success\",children:\"Give Consent\"})]})]})]});};export default ParentHealthCheckupEventItem;","map":{"version":3,"names":["React","useState","Paper","Typography","Button","Grid","Chip","Box","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Link","RouterLink","jsx","_jsx","jsxs","_jsxs","ParentHealthCheckupEventItem","_ref","event","childId","studentName","consentStatus","consentDate","resultAvailable","onGiveConsent","onViewDetails","openConsentModal","setOpenConsentModal","consentNotes","setConsentNotes","handleOpenConsentModal","handleCloseConsentModal","handleConfirmConsent","consentDecision","eventId","formatDate","dateString","Date","toLocaleDateString","getConsentChip","chipLabel","chipColor","label","color","size","elevation","sx","p","mb","children","container","spacing","alignItems","item","xs","md","variant","gutterBottom","eventName","description","display","startDate","endDate","location","gap","direction","justifyContent","onClick","fullWidth","undefined","open","onClose"],"sources":["C:/Users/trand/OneDrive/Documents/GitHub/SchoolMedicalManagement/frontend/src/components/healthcheckup/ParentHealthCheckupEventItem.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Paper, Typography, Button, Grid, Chip, Box, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst ParentHealthCheckupEventItem = ({ event, childId, studentName, consentStatus, consentDate, resultAvailable, onGiveConsent, onViewDetails }) => {\r\n  const [openConsentModal, setOpenConsentModal] = useState(false);\r\n  const [consentNotes, setConsentNotes] = useState(''); // If you want to add notes\r\n\r\n  if (!event) {\r\n    return null;\r\n  }\r\n\r\n  const handleOpenConsentModal = () => {\r\n    setOpenConsentModal(true);\r\n  };\r\n\r\n  const handleCloseConsentModal = () => {\r\n    setOpenConsentModal(false);\r\n    setConsentNotes(''); // Reset notes on close\r\n  };\r\n\r\n  const handleConfirmConsent = async (consentDecision) => {\r\n    // onGiveConsent will now be the function that calls the API\r\n    // It should accept eventId, childId, consentDecision (true/false), and optionally notes\r\n    await onGiveConsent(event.eventId, childId, consentDecision, consentNotes);\r\n    handleCloseConsentModal();\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  const getConsentChip = () => {\r\n    let chipLabel = \"Consent Pending\";\r\n    let chipColor = \"warning\";\r\n\r\n    switch (consentStatus) {\r\n      case true: // Assuming consentStatus is now boolean true/false or null/undefined\r\n        chipLabel = `Consent Given on ${formatDate(consentDate)}`;\r\n        chipColor = \"success\";\r\n        break;\r\n      case false:\r\n        chipLabel = `Consent Denied on ${formatDate(consentDate)}`;\r\n        chipColor = \"error\";\r\n        break;\r\n      default:\r\n        // Keep pending\r\n        break;\r\n    }\r\n    return <Chip label={chipLabel} color={chipColor} size=\"small\" />;\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={2} sx={{ p: 2, mb: 2 }}>\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item xs={12} md={8}>\r\n          <Typography variant=\"h6\" gutterBottom>{event.eventName} {studentName ? `for ${studentName}` : ''}</Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mb: 1 }}>\r\n            {event.description}\r\n          </Typography>\r\n          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n            Date: {formatDate(event.startDate)} - {formatDate(event.endDate)}\r\n          </Typography>\r\n          <Typography variant=\"caption\" display=\"block\" sx={{ mb: 1 }}>\r\n            Location: {event.location || 'N/A'}\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1}}>\r\n            <Typography variant=\"subtitle2\">Status for your child:</Typography>\r\n            {getConsentChip()}\r\n            {resultAvailable && <Chip label=\"Results Available\" color=\"info\" size=\"small\" />}\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} md={4} container direction={{xs: 'row', md: 'column'}} spacing={1} justifyContent=\"center\" alignItems={{md: 'flex-end'}}>\r\n          {onViewDetails && (\r\n            <Grid item>\r\n                <Button \r\n                    variant=\"outlined\" \r\n                    size=\"small\" \r\n                    onClick={() => onViewDetails(event.eventId, childId)} \r\n                    fullWidth\r\n                >\r\n                    View Details / Results\r\n                </Button>\r\n            </Grid>\r\n          )}\r\n          {/* Consent button logic changed to open modal */}\r\n          {(consentStatus === null || consentStatus === undefined) && onGiveConsent && (\r\n            <Grid item>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    size=\"small\" \r\n                    onClick={handleOpenConsentModal} \r\n                    fullWidth\r\n                >\r\n                    Provide Consent\r\n                </Button>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Dialog open={openConsentModal} onClose={handleCloseConsentModal}>\r\n        <DialogTitle>Consent for {event.eventName}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText sx={{mb: 2}}>\r\n            Please review the details for the health checkup event: <strong>{event.eventName}</strong> for your child {studentName ? <strong>{studentName}</strong> : ''}. \r\n            This event is scheduled from {formatDate(event.startDate)} to {formatDate(event.endDate)} at {event.location || 'N/A'}.\r\n            <br/><br/>\r\n            Do you consent to your child participating in this health checkup event?\r\n          </DialogContentText>\r\n          {/* Optional: Add a field for notes or reasons */}\r\n          {/* \r\n          <TextField \r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"consentNotes\"\r\n            label=\"Optional Notes (e.g., specific concerns or conditions)\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={consentNotes}\r\n            onChange={(e) => setConsentNotes(e.target.value)}\r\n          />\r\n          */}\r\n        </DialogContent>\r\n        <DialogActions sx={{p: '0 24px 20px'}}>\r\n          <Button onClick={() => handleConfirmConsent(false)} color=\"error\">Deny Consent</Button>\r\n          <Button onClick={() => handleConfirmConsent(true)} variant=\"contained\" color=\"success\">Give Consent</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ParentHealthCheckupEventItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}